import{aI as z,aL as U,aJ as Q,d as j,ag as m,aS as xe,bW as Pe,$ as Ce,g as J,c as ee,m as t,n as e,w as s,o as G,V as O,a as u,v as T,cO as pe,x as L,P as we,_ as te,W as oe,ac as re,S as Ie,a3 as D,I as C,a7 as se,b as ae,cT as ve,r as w,f as Ne,a0 as E,a1 as Z,dj as Ae,a2 as I,R as me,h as he,E as H,cU as le,J as $,ao as $e,q as ne,M as ze,A as X,C as k,t as ie,aa as Me,B as Ue,al as He}from"./index-CzIbiPcR.js";import{P as ge}from"./PlayOutline-Cd76hMiY.js";import{S as fe}from"./StopCircleOutline-iTB1pYp7.js";import{A as Ee}from"./AlertCircleOutline-BptlU4rj.js";import{N as ue}from"./Progress-BazgCQGv.js";import{L as Fe,P as Le}from"./PencilOutline-nZjkWohw.js";import{a as V,_ as de}from"./Grid-DtPWGMN9.js";import{R as Re}from"./ReloadOutline-Btqzp1-L.js";import{G as Ye}from"./GlobeOutline-BUMYBEq0.js";import{T as be}from"./TrashOutline-2R_Ts6Ka.js";import{N as Oe}from"./Popconfirm-Jlwr2tlU.js";import{u as qe}from"./usePagination-rBGSs64l.js";import{R as ye}from"./RefreshOutline-CA3Zk8OZ.js";import{A as Be}from"./AddOutline-DReI0b2u.js";import{_ as _e}from"./RadioGroup-BBKwhzSS.js";import{N as R}from"./InputNumber-DYqA-vrb.js";import{_ as Ke}from"./DataTable-CMD0QL_W.js";import{N as ce}from"./Switch-DmPX386B.js";import"./index-C9U1NGvg.js";const De=z("input-group",`
 display: inline-flex;
 width: 100%;
 flex-wrap: nowrap;
 vertical-align: bottom;
`,[U(">",[z("input",[U("&:not(:last-child)",`
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `),U("&:not(:first-child)",`
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 margin-left: -1px!important;
 `)]),z("button",[U("&:not(:last-child)",`
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `,[Q("state-border, border",`
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `)]),U("&:not(:first-child)",`
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `,[Q("state-border, border",`
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `)])]),U("*",[U("&:not(:last-child)",`
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `,[U(">",[z("input",`
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `),z("base-selection",[z("base-selection-label",`
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `),z("base-selection-tags",`
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `),Q("box-shadow, border, state-border",`
 border-top-right-radius: 0!important;
 border-bottom-right-radius: 0!important;
 `)])])]),U("&:not(:first-child)",`
 margin-left: -1px!important;
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `,[U(">",[z("input",`
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `),z("base-selection",[z("base-selection-label",`
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `),z("base-selection-tags",`
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `),Q("box-shadow, border, state-border",`
 border-top-left-radius: 0!important;
 border-bottom-left-radius: 0!important;
 `)])])])])])]),Ve={},Ge=j({name:"InputGroup",props:Ve,setup(c){const{mergedClsPrefixRef:a}=xe(c);return Pe("-input-group",De,a),{mergedClsPrefix:a}},render(){const{mergedClsPrefix:c}=this;return m("div",{class:`${c}-input-group`},this.$slots)}}),F=Ce("/gateway/hub0060"),Je=async c=>F.post("/queryTunnelServers",c),We=async c=>F.post("/createTunnelServer",c),je=async c=>F.post("/updateTunnelServer",c),Te=async c=>F.post("/deleteTunnelServer",{tunnelServerId:c}),Qe=async c=>F.post("/testServerConnection",{tunnelServerId:c}),Xe=async()=>F.post("/getTunnelServerStats",{}),Ze=async()=>F.post("/generateAuthToken",{}),et=async c=>F.post("/startTunnelServer",{tunnelServerId:c}),tt=async c=>F.post("/stopTunnelServer",{tunnelServerId:c}),rt=async c=>F.post("/restartTunnelServer",{tunnelServerId:c}),st=async c=>Promise.all(c.map(a=>Te(a))),at={class:"tunnel-server-stats"},ot={class:"stat-content"},lt={class:"stat-icon total"},nt={class:"stat-info"},it={class:"stat-value"},ut={class:"stat-content"},dt={class:"stat-icon running"},ct={class:"stat-info"},pt={class:"stat-value"},vt={class:"stat-content"},mt={class:"stat-icon stopped"},ht={class:"stat-info"},gt={class:"stat-value"},ft={class:"stat-content"},bt={class:"stat-icon error"},yt={class:"stat-info"},_t={class:"stat-value"},Tt={class:"card-header"},St={class:"detail-content"},kt={class:"detail-item"},xt={class:"detail-value primary"},Pt={class:"detail-progress"},Ct={class:"progress-text"},wt={class:"card-header"},It={class:"detail-content"},Nt={class:"detail-item"},At={class:"detail-value success"},$t={class:"detail-progress"},zt={class:"progress-text"},Mt=j({__name:"TunnelServerStats",props:{statistics:{}},setup(c){const a=c,d=J(()=>{const p=a.statistics.totalClients||0;return Math.min(Math.round(p/1e3*100),100)}),y=J(()=>{const p=a.statistics.totalConnections||0;return Math.min(Math.round(p/5e3*100),100)}),_=v=>v<50?"#52c41a":v<80?"#faad14":"#ff4d4f";return(v,p)=>(G(),ee("div",at,[t(e(de),{cols:4,"x-gap":12,"y-gap":12,responsive:"screen"},{default:s(()=>[t(e(V),null,{default:s(()=>[t(e(O),{class:"stat-card",hoverable:""},{default:s(()=>[u("div",ot,[u("div",lt,[t(e(T),{size:"24",component:e(pe)},null,8,["component"])]),u("div",nt,[u("div",it,L(v.statistics.totalServers||1),1),p[0]||(p[0]=u("div",{class:"stat-label"},"总服务器数",-1))])])]),_:1})]),_:1}),t(e(V),null,{default:s(()=>[t(e(O),{class:"stat-card",hoverable:""},{default:s(()=>[u("div",ut,[u("div",dt,[t(e(T),{size:"24",component:e(ge)},null,8,["component"])]),u("div",ct,[u("div",pt,L(v.statistics.runningServers||0),1),p[1]||(p[1]=u("div",{class:"stat-label"},"运行中",-1))])])]),_:1})]),_:1}),t(e(V),null,{default:s(()=>[t(e(O),{class:"stat-card",hoverable:""},{default:s(()=>[u("div",vt,[u("div",mt,[t(e(T),{size:"24",component:e(fe)},null,8,["component"])]),u("div",ht,[u("div",gt,L(v.statistics.stoppedServers||0),1),p[2]||(p[2]=u("div",{class:"stat-label"},"已停止",-1))])])]),_:1})]),_:1}),t(e(V),null,{default:s(()=>[t(e(O),{class:"stat-card",hoverable:""},{default:s(()=>[u("div",ft,[u("div",bt,[t(e(T),{size:"24",component:e(Ee)},null,8,["component"])]),u("div",yt,[u("div",_t,L(v.statistics.errorServers||0),1),p[3]||(p[3]=u("div",{class:"stat-label"},"错误状态",-1))])])]),_:1})]),_:1})]),_:1}),t(e(de),{cols:2,"x-gap":12,"y-gap":12,style:{"margin-top":"12px"},responsive:"screen"},{default:s(()=>[t(e(V),null,{default:s(()=>[t(e(O),{class:"detail-card",hoverable:""},{header:s(()=>[u("div",Tt,[t(e(T),{size:"20",component:e(we)},null,8,["component"]),p[4]||(p[4]=u("span",null,"客户端统计",-1))])]),default:s(()=>[u("div",St,[u("div",kt,[p[5]||(p[5]=u("div",{class:"detail-label"},"总客户端数",-1)),u("div",xt,L(v.statistics.totalClients||0),1)]),u("div",Pt,[t(e(ue),{type:"line",percentage:d.value,"show-indicator":!1,height:8,color:_(d.value)},null,8,["percentage","color"]),u("div",Ct,L(d.value)+"% 使用率 ",1)])])]),_:1})]),_:1}),t(e(V),null,{default:s(()=>[t(e(O),{class:"detail-card",hoverable:""},{header:s(()=>[u("div",wt,[t(e(T),{size:"20",component:e(Fe)},null,8,["component"]),p[6]||(p[6]=u("span",null,"连接统计",-1))])]),default:s(()=>[u("div",It,[u("div",Nt,[p[7]||(p[7]=u("div",{class:"detail-label"},"总连接数",-1)),u("div",At,L(v.statistics.totalConnections||0),1)]),u("div",$t,[t(e(ue),{type:"line",percentage:y.value,"show-indicator":!1,height:8,color:_(y.value)},null,8,["percentage","color"]),u("div",zt,L(y.value)+"% 负载 ",1)])])]),_:1})]),_:1})]),_:1})]))}}),Ut=te(Mt,[["__scopeId","data-v-8eb158f0"]]),Ht=c=>[{type:"selection",width:50,fixed:"left"},{title:"服务器名称",key:"serverName",width:180,fixed:"left",ellipsis:{tooltip:!0},render:a=>m("span",{class:a.serverStatus==="running"?"text-success font-bold":"text-default"},a.serverName)},{title:"控制地址",key:"controlAddress",width:140,render:a=>`${a.controlAddress}:${a.controlPort}`},{title:"管理端口",key:"dashboardPort",width:90,render:a=>a.dashboardPort||"-"},{title:"状态",key:"serverStatus",width:90,render:a=>{const y={running:{type:"success",text:"运行中"},stopped:{type:"warning",text:"已停止"},error:{type:"error",text:"错误"}}[a.serverStatus]||{type:"default",text:"未知"};return m(re,{type:y.type,size:"small"},{default:()=>y.text})}},{title:"HTTP端口",key:"vhostHttpPort",width:90,render:a=>a.vhostHttpPort||"-"},{title:"HTTPS端口",key:"vhostHttpsPort",width:100,render:a=>a.vhostHttpsPort||"-"},{title:"最大客户端",key:"maxClients",width:100,render:a=>m("span",{class:"text-primary font-bold"},`${a.maxClients}`)},{title:"Token认证",key:"tokenAuth",width:90,render:a=>m(re,{type:a.tokenAuth==="Y"?"success":"default",size:"small"},{default:()=>a.tokenAuth==="Y"?"启用":"禁用",icon:()=>m(T,{component:Ie,size:12})})},{title:"TLS",key:"tlsEnable",width:70,render:a=>m(re,{type:a.tlsEnable==="Y"?"success":"default",size:"small"},{default:()=>a.tlsEnable==="Y"?"启用":"禁用"})},{title:"心跳间隔(秒)",key:"heartbeatInterval",width:110,render:a=>`${a.heartbeatInterval}s`},{title:"心跳超时(秒)",key:"heartbeatTimeout",width:110,render:a=>`${a.heartbeatTimeout}s`},{title:"启动时间",key:"startTime",width:140,render:a=>a.startTime?oe(a.startTime,"YYYY-MM-DD HH:mm"):m("span",{class:"text-placeholder"},"-")},{title:"创建时间",key:"addTime",width:140,render:a=>oe(a.addTime,"YYYY-MM-DD HH:mm")},{title:"操作",key:"actions",width:260,fixed:"right",render:a=>m(se,{size:"small"},()=>[a.serverStatus==="running"?m(D,{trigger:"hover"},{trigger:()=>m(C,{size:"small",type:"warning",secondary:!0,onClick:()=>c("stop",a)},{icon:()=>m(T,{component:fe})}),default:()=>"停止服务器"}):m(D,{trigger:"hover"},{trigger:()=>m(C,{size:"small",type:"success",secondary:!0,onClick:()=>c("start",a)},{icon:()=>m(T,{component:ge})}),default:()=>"启动服务器"}),m(D,{trigger:"hover"},{trigger:()=>m(C,{size:"small",type:"info",secondary:!0,onClick:()=>c("restart",a)},{icon:()=>m(T,{component:Re})}),default:()=>"重启服务器"}),m(D,{trigger:"hover"},{trigger:()=>m(C,{size:"small",type:"primary",secondary:!0,onClick:()=>c("test",a)},{icon:()=>m(T,{component:Ye})}),default:()=>"测试连接"}),m(D,{trigger:"hover"},{trigger:()=>m(C,{size:"small",type:"primary",secondary:!0,onClick:()=>c("edit",a)},{icon:()=>m(T,{component:Le})}),default:()=>"编辑"}),m(Oe,{onPositiveClick:()=>c("delete",a)},{trigger:()=>m(D,{trigger:"hover"},{trigger:()=>m(C,{size:"small",type:"error",secondary:!0},{icon:()=>m(T,{component:be})}),default:()=>"删除"}),default:()=>"确认删除这个隧道服务器吗？"})])}],Et=(c,a)=>{const d=ae();ve();const y=w(!1),_=w([]),v=w(0),p=w([]),S=Ne({tenantId:"default-tenant-001",serverName:"",serverStatus:void 0,controlAddress:"",controlPort:void 0,activeFlag:"Y",pageIndex:1,pageSize:20}),N=[{label:"运行中",value:"running"},{label:"已停止",value:"stopped"},{label:"错误",value:"error"}],x=J(()=>p.value.length>0),{naiveConfig:A,setTotal:o}=qe({initialPage:1,initialPageSize:20,pageSizes:[10,20,50,100],showSizePicker:!0,showQuickJumper:!0,onPageChange:(h,i)=>{S.pageIndex=h,S.pageSize=i,f()},onPageSizeChange:(h,i)=>{S.pageIndex=h,S.pageSize=i,f()}}),f=async()=>{try{y.value=!0;const h=await Je(S);if(E(h))try{const i=Z(h,[]);if(Array.isArray(i)){_.value=i;const g=Ae(h);v.value=g.itemCount,o(v.value)}else console.error("服务器返回的数据不是数组格式:",i),d.error("数据格式错误，请联系管理员"),_.value=[]}catch(i){console.error("解析服务器数据失败:",i),d.error("解析数据失败，请联系管理员"),_.value=[]}else{const i=I(h,"获取隧道服务器列表失败");d.error(i)}}catch(h){console.error("获取隧道服务器列表失败:",h),d.error("获取隧道服务器列表失败"),_.value=[]}finally{y.value=!1}},b=async h=>{try{const i=await Te(h);if(E(i)){const g=I(i,"隧道服务器删除成功");return d.success(g),await f(),!0}else{const g=I(i,"删除隧道服务器失败");return d.error(g),!1}}catch(i){return console.error("删除隧道服务器失败:",i),d.error("删除隧道服务器失败"),!1}},P=async()=>{if(p.value.length===0)return d.warning("请选择要删除的隧道服务器"),!1;try{return(await st(p.value)).every(g=>E(g))?(d.success(`成功删除 ${p.value.length} 个隧道服务器`),p.value=[],await f(),!0):(d.error("部分删除操作失败"),!1)}catch(h){return console.error("批量删除失败:",h),d.error("批量删除失败"),!1}},M=async h=>{try{const i=await et(h);if(E(i)){const g=I(i,"启动隧道服务器成功");return d.success(g),await f(),!0}else{const g=I(i,"启动隧道服务器失败");return d.error(g),!1}}catch(i){return console.error("启动隧道服务器失败:",i),d.error("启动隧道服务器失败"),!1}},Y=async h=>{try{const i=await tt(h);if(E(i)){const g=I(i,"停止隧道服务器成功");return d.success(g),await f(),!0}else{const g=I(i,"停止隧道服务器失败");return d.error(g),!1}}catch(i){return console.error("停止隧道服务器失败:",i),d.error("停止隧道服务器失败"),!1}},q=async h=>{try{const i=await rt(h);if(E(i)){const g=I(i,"重启隧道服务器成功");return d.success(g),await f(),!0}else{const g=I(i,"重启隧道服务器失败");return d.error(g),!1}}catch(i){return console.error("重启隧道服务器失败:",i),d.error("重启隧道服务器失败"),!1}},B=async h=>{try{const i=await Qe(h);if(E(i)){const g=Z(i,{}),Se=g.latency?` (延迟: ${g.latency}ms)`:"",ke=I(i,"连接测试成功");return d.success(ke+Se),!0}else{const g=I(i,"连接测试失败");return d.error(g),!1}}catch(i){return console.error("连接测试失败:",i),d.error("连接测试失败"),!1}},W=(h,i)=>{switch(h){case"start":M(i.tunnelServerId);break;case"stop":Y(i.tunnelServerId);break;case"restart":q(i.tunnelServerId);break;case"test":B(i.tunnelServerId);break;case"edit":c(i);break;case"delete":b(i.tunnelServerId);break}},K=J(()=>Ht(W));return{loading:y,tunnelServers:_,total:v,selectedServerIds:p,queryParams:S,statusOptions:N,hasSelection:x,columns:K,tableConfig:{bordered:!1,striped:!0,size:"medium",scrollX:1200,rowKey:h=>h.tunnelServerId},naiveConfig:A,handleSearch:()=>{S.pageIndex=1,f()},handleReset:()=>{S.serverName="",S.serverStatus=void 0,S.controlAddress="",S.controlPort=void 0,S.pageIndex=1,S.pageSize=20,f()},handleCreate:()=>{a()},handleBatchDelete:P,initialize:()=>{f()},updateTotal:()=>{o(v.value)},getTunnelServers:f,deleteTunnelServer:b,startTunnelServer:M,stopTunnelServer:Y,restartTunnelServer:q,testConnection:B,setTotal:o}},Ft={class:"tunnel-server-table"},Lt={class:"table-header"},Rt={class:"search-section"},Yt={class:"action-section"},Ot=j({__name:"TunnelServerTable",emits:["edit","create"],setup(c,{expose:a,emit:d}){const y=d,_=ve(),{loading:v,tunnelServers:p,total:S,selectedServerIds:N,queryParams:x,statusOptions:A,hasSelection:o,columns:f,naiveConfig:b,handleSearch:P,handleReset:M,initialize:Y,updateTotal:q,handleBatchDelete:B}=Et(n=>y("edit",n),()=>y("create"));me(S,()=>{q()});const W=()=>{y("create")},K=()=>{_.warning({title:"确认批量删除",content:`确认删除选中的 ${N.value.length} 个隧道服务器吗？`,positiveText:"确认删除",negativeText:"取消",onPositiveClick:async()=>{await B()}})};return he(()=>{Y()}),a({initialize:Y,handleSearch:P,handleReset:M}),(n,r)=>(G(),ee("div",Ft,[u("div",Lt,[u("div",Rt,[t(e(se),{size:16},{default:s(()=>[t(e(H),{value:e(x).serverName,"onUpdate:value":r[0]||(r[0]=l=>e(x).serverName=l),placeholder:"搜索服务器名称",clearable:"",style:{width:"200px"}},{prefix:s(()=>[t(e(T),{component:e(le)},null,8,["component"])]),_:1},8,["value"]),t(e(_e),{value:e(x).serverStatus,"onUpdate:value":r[1]||(r[1]=l=>e(x).serverStatus=l),placeholder:"服务器状态",clearable:"",style:{width:"150px"},options:e(A)},null,8,["value","options"]),t(e(H),{value:e(x).controlAddress,"onUpdate:value":r[2]||(r[2]=l=>e(x).controlAddress=l),placeholder:"控制地址",clearable:"",style:{width:"150px"}},null,8,["value"]),t(e(R),{value:e(x).controlPort,"onUpdate:value":r[3]||(r[3]=l=>e(x).controlPort=l),placeholder:"控制端口",clearable:"",style:{width:"120px"},min:1,max:65535},null,8,["value"])]),_:1})]),u("div",Yt,[t(e(se),{size:12},{default:s(()=>[t(e(C),{onClick:e(P),type:"primary"},{icon:s(()=>[t(e(T),{component:e(le)},null,8,["component"])]),default:s(()=>[r[5]||(r[5]=$(" 搜索 "))]),_:1},8,["onClick"]),t(e(C),{onClick:e(M)},{icon:s(()=>[t(e(T),{component:e(ye)},null,8,["component"])]),default:s(()=>[r[6]||(r[6]=$(" 重置 "))]),_:1},8,["onClick"]),t(e(C),{onClick:W,type:"primary"},{icon:s(()=>[t(e(T),{component:e(Be)},null,8,["component"])]),default:s(()=>[r[7]||(r[7]=$(" 新增服务器 "))]),_:1}),t(e(C),{onClick:K,disabled:!e(o),type:"error",secondary:""},{icon:s(()=>[t(e(T),{component:e(be)},null,8,["component"])]),default:s(()=>[r[8]||(r[8]=$(" 批量删除 "))]),_:1},8,["disabled"])]),_:1})])]),t(e(Ke),{columns:e(f),data:e(p),loading:e(v),pagination:e(b),"row-key":l=>l.tunnelServerId,"checked-row-keys":e(N),"onUpdate:checkedRowKeys":r[4]||(r[4]=l=>$e(N)?N.value=l:null),"scroll-x":1800,striped:"","max-height":600},null,8,["columns","data","loading","pagination","row-key","checked-row-keys"])]))}}),qt=te(Ot,[["__scopeId","data-v-e8dc9503"]]),Bt={class:"dialog-content"},Kt={class:"form-section"},Dt={class:"form-section"},Vt={class:"form-section"},Gt={class:"form-section"},Jt={class:"dialog-actions"},Wt=j({__name:"TunnelServerDialog",props:{show:{type:Boolean,default:!1},editData:{default:null}},emits:["update:show","success"],setup(c,{emit:a}){const d=c,y=a,_=ae(),v=w(!1),p=[{label:"Debug",value:"debug"},{label:"Info",value:"info"},{label:"Warning",value:"warn"},{label:"Error",value:"error"}],S=async()=>{try{const n=await Ze();if(E(n)){const r=Z(n,{authToken:""});return _.success("认证令牌生成成功"),r.authToken}else{const r=I(n,"生成认证令牌失败");return _.error(r),null}}catch(n){return console.error("生成认证令牌失败:",n),_.error("生成认证令牌失败"),null}},N=w(),x=J({get:()=>d.show,set:n=>y("update:show",n)}),A=J(()=>!!d.editData),o=w({serverName:"",serverDescription:"",controlAddress:"0.0.0.0",controlPort:7e3,dashboardPort:7500,vhostHttpPort:80,vhostHttpsPort:443,maxClients:1e3,tokenAuth:"Y",authToken:"",tlsEnable:"N",tlsCertFile:"",tlsKeyFile:"",heartbeatInterval:30,heartbeatTimeout:90,logLevel:"info",maxPortsPerClient:10,allowPorts:"",noteText:""}),f=w(!0),b=w(!1),P={serverName:[{required:!0,message:"请输入服务器名称",trigger:"blur"},{min:2,max:100,message:"服务器名称长度应在2-100字符之间",trigger:"blur"}],controlAddress:[{required:!0,message:"请输入控制地址",trigger:"blur"}],controlPort:[{required:!0,type:"number",message:"请输入控制端口",trigger:"blur"},{type:"number",min:1,max:65535,message:"端口范围应在1-65535之间",trigger:"blur"}],maxClients:[{required:!0,type:"number",message:"请输入最大客户端数",trigger:"blur"},{type:"number",min:1,max:1e4,message:"最大客户端数应在1-10000之间",trigger:"blur"}],heartbeatInterval:[{required:!0,type:"number",message:"请输入心跳间隔",trigger:"blur"},{type:"number",min:10,max:300,message:"心跳间隔应在10-300秒之间",trigger:"blur"}],heartbeatTimeout:[{required:!0,type:"number",message:"请输入心跳超时",trigger:"blur"},{type:"number",min:30,max:600,message:"心跳超时应在30-600秒之间",trigger:"blur"}],authToken:[{required:!0,message:"启用Token认证时必须提供认证Token",trigger:"blur",validator:(n,r)=>f.value&&!r?new Error("启用Token认证时必须提供认证Token"):!0}],tlsCertFile:[{required:!0,message:"启用TLS时必须提供证书文件路径",trigger:"blur",validator:(n,r)=>b.value&&!r?new Error("启用TLS时必须提供证书文件路径"):!0}],tlsKeyFile:[{required:!0,message:"启用TLS时必须提供私钥文件路径",trigger:"blur",validator:(n,r)=>b.value&&!r?new Error("启用TLS时必须提供私钥文件路径"):!0}]},M=()=>{o.value={serverName:"",serverDescription:"",controlAddress:"0.0.0.0",controlPort:7e3,dashboardPort:7500,vhostHttpPort:80,vhostHttpsPort:443,maxClients:1e3,tokenAuth:"Y",authToken:"",tlsEnable:"N",tlsCertFile:"",tlsKeyFile:"",heartbeatInterval:30,heartbeatTimeout:90,logLevel:"info",maxPortsPerClient:10,allowPorts:"",noteText:""},f.value=!0,b.value=!1};me(()=>d.editData,n=>{try{n?(o.value={serverName:n.serverName||"",serverDescription:n.serverDescription||"",controlAddress:n.controlAddress||"",controlPort:n.controlPort||7e3,dashboardPort:n.dashboardPort||7500,vhostHttpPort:n.vhostHttpPort||80,vhostHttpsPort:n.vhostHttpsPort||443,maxClients:n.maxClients||100,tokenAuth:n.tokenAuth||"N",authToken:n.authToken||"",tlsEnable:n.tlsEnable||"N",tlsCertFile:n.tlsCertFile||"",tlsKeyFile:n.tlsKeyFile||"",heartbeatInterval:n.heartbeatInterval||30,heartbeatTimeout:n.heartbeatTimeout||90,logLevel:n.logLevel||"info",maxPortsPerClient:n.maxPortsPerClient||0,allowPorts:n.allowPorts||"",noteText:n.noteText||""},f.value=n.tokenAuth==="Y",b.value=n.tlsEnable==="Y"):M()}catch(r){console.error("处理编辑数据时出错:",r),_.error("处理编辑数据时出错，请重试"),M()}},{immediate:!0});const Y=n=>{o.value.tokenAuth=n?"Y":"N",n||(o.value.authToken="")},q=n=>{o.value.tlsEnable=n?"Y":"N",n||(o.value.tlsCertFile="",o.value.tlsKeyFile="")},B=async()=>{const n=await S();n&&(o.value.authToken=n)},W=async()=>{var n;try{await((n=N.value)==null?void 0:n.validate()),v.value=!0;let r;if(A.value&&d.editData?r=await je({...o.value,tunnelServerId:d.editData.tunnelServerId}):r=await We(o.value),r&&E(r))_.success(A.value?"更新成功":"创建成功"),y("success"),K();else{const l=I(r,A.value?"更新失败":"创建失败");_.error(l)}}catch(r){console.error("表单提交失败:",r),_.error(A.value?"更新失败":"创建失败")}finally{v.value=!1}},K=()=>{var n;x.value=!1,(n=N.value)==null||n.restoreValidation()};return(n,r)=>(G(),ne(e(He),{show:x.value,"onUpdate:show":r[19]||(r[19]=l=>x.value=l),"mask-closable":!1,preset:"dialog",title:A.value?"编辑隧道服务器":"创建隧道服务器",style:{width:"800px"}},{icon:s(()=>[t(e(T),{size:"20",color:"#2080f0"},{default:s(()=>[t(e(pe))]),_:1})]),action:s(()=>[u("div",Jt,[t(e(C),{onClick:K},{default:s(()=>r[25]||(r[25]=[$("取消")])),_:1}),t(e(C),{type:"primary",loading:v.value,onClick:W},{default:s(()=>[$(L(A.value?"更新":"创建"),1)]),_:1},8,["loading"])])]),default:s(()=>[u("div",Bt,[t(e(Ue),{ref_key:"formRef",ref:N,model:o.value,rules:P,"label-placement":"left","label-width":"120px","require-mark-placement":"right-hanging"},{default:s(()=>[t(e(ze),{type:"line",animated:""},{default:s(()=>[t(e(X),{name:"basic",tab:"基础配置"},{default:s(()=>[u("div",Kt,[t(e(k),{label:"服务器名称",path:"serverName"},{default:s(()=>[t(e(H),{value:o.value.serverName,"onUpdate:value":r[0]||(r[0]=l=>o.value.serverName=l),placeholder:"请输入服务器名称",maxlength:"100","show-count":""},null,8,["value"])]),_:1}),t(e(k),{label:"服务器描述",path:"serverDescription"},{default:s(()=>[t(e(H),{value:o.value.serverDescription,"onUpdate:value":r[1]||(r[1]=l=>o.value.serverDescription=l),type:"textarea",placeholder:"请输入服务器描述",maxlength:"500","show-count":"",autosize:{minRows:2,maxRows:4}},null,8,["value"])]),_:1}),t(e(k),{label:"控制地址",path:"controlAddress"},{default:s(()=>[t(e(H),{value:o.value.controlAddress,"onUpdate:value":r[2]||(r[2]=l=>o.value.controlAddress=l),placeholder:"请输入控制地址，如: 0.0.0.0"},null,8,["value"])]),_:1}),t(e(k),{label:"控制端口",path:"controlPort"},{default:s(()=>[t(e(R),{value:o.value.controlPort,"onUpdate:value":r[3]||(r[3]=l=>o.value.controlPort=l),placeholder:"请输入控制端口",min:1,max:65535,style:{width:"100%"}},null,8,["value"])]),_:1}),t(e(k),{label:"管理面板端口",path:"dashboardPort"},{default:s(()=>[t(e(R),{value:o.value.dashboardPort,"onUpdate:value":r[4]||(r[4]=l=>o.value.dashboardPort=l),placeholder:"请输入管理面板端口",min:1,max:65535,style:{width:"100%"}},null,8,["value"])]),_:1})])]),_:1}),t(e(X),{name:"network",tab:"网络配置"},{default:s(()=>[u("div",Dt,[t(e(k),{label:"HTTP端口",path:"vhostHttpPort"},{default:s(()=>[t(e(R),{value:o.value.vhostHttpPort,"onUpdate:value":r[5]||(r[5]=l=>o.value.vhostHttpPort=l),placeholder:"虚拟主机HTTP端口",min:1,max:65535,style:{width:"100%"}},null,8,["value"])]),_:1}),t(e(k),{label:"HTTPS端口",path:"vhostHttpsPort"},{default:s(()=>[t(e(R),{value:o.value.vhostHttpsPort,"onUpdate:value":r[6]||(r[6]=l=>o.value.vhostHttpsPort=l),placeholder:"虚拟主机HTTPS端口",min:1,max:65535,style:{width:"100%"}},null,8,["value"])]),_:1}),t(e(k),{label:"最大客户端数",path:"maxClients"},{default:s(()=>[t(e(R),{value:o.value.maxClients,"onUpdate:value":r[7]||(r[7]=l=>o.value.maxClients=l),placeholder:"最大客户端连接数",min:1,max:1e4,style:{width:"100%"}},null,8,["value"])]),_:1}),t(e(k),{label:"每客户端最大端口",path:"maxPortsPerClient"},{default:s(()=>[t(e(R),{value:o.value.maxPortsPerClient,"onUpdate:value":r[8]||(r[8]=l=>o.value.maxPortsPerClient=l),placeholder:"每个客户端最大端口数",min:1,max:100,style:{width:"100%"}},null,8,["value"])]),_:1}),t(e(k),{label:"允许的端口范围",path:"allowPorts"},{default:s(()=>[t(e(H),{value:o.value.allowPorts,"onUpdate:value":r[9]||(r[9]=l=>o.value.allowPorts=l),placeholder:"如: 10000-20000,30000-40000"},null,8,["value"])]),_:1})])]),_:1}),t(e(X),{name:"auth",tab:"认证配置"},{default:s(()=>[u("div",Vt,[t(e(k),{label:"启用Token认证",path:"tokenAuth"},{default:s(()=>[t(e(ce),{value:f.value,"onUpdate:value":[r[10]||(r[10]=l=>f.value=l),Y]},{checked:s(()=>r[20]||(r[20]=[$("启用")])),unchecked:s(()=>r[21]||(r[21]=[$("禁用")])),_:1},8,["value"])]),_:1}),f.value?(G(),ne(e(k),{key:0,label:"认证Token",path:"authToken"},{default:s(()=>[t(e(Ge),null,{default:s(()=>[t(e(H),{value:o.value.authToken,"onUpdate:value":r[11]||(r[11]=l=>o.value.authToken=l),placeholder:"请输入或生成认证Token",style:{flex:"1"}},null,8,["value"]),t(e(C),{type:"primary",ghost:"",onClick:B},{default:s(()=>r[22]||(r[22]=[$(" 生成Token ")])),_:1})]),_:1})]),_:1})):ie("",!0),t(e(k),{label:"启用TLS",path:"tlsEnable"},{default:s(()=>[t(e(ce),{value:b.value,"onUpdate:value":[r[12]||(r[12]=l=>b.value=l),q]},{checked:s(()=>r[23]||(r[23]=[$("启用")])),unchecked:s(()=>r[24]||(r[24]=[$("禁用")])),_:1},8,["value"])]),_:1}),b.value?(G(),ee(Me,{key:1},[t(e(k),{label:"TLS证书文件",path:"tlsCertFile"},{default:s(()=>[t(e(H),{value:o.value.tlsCertFile,"onUpdate:value":r[13]||(r[13]=l=>o.value.tlsCertFile=l),placeholder:"请输入TLS证书文件路径"},null,8,["value"])]),_:1}),t(e(k),{label:"TLS私钥文件",path:"tlsKeyFile"},{default:s(()=>[t(e(H),{value:o.value.tlsKeyFile,"onUpdate:value":r[14]||(r[14]=l=>o.value.tlsKeyFile=l),placeholder:"请输入TLS私钥文件路径"},null,8,["value"])]),_:1})],64)):ie("",!0)])]),_:1}),t(e(X),{name:"advanced",tab:"高级配置"},{default:s(()=>[u("div",Gt,[t(e(k),{label:"心跳间隔(秒)",path:"heartbeatInterval"},{default:s(()=>[t(e(R),{value:o.value.heartbeatInterval,"onUpdate:value":r[15]||(r[15]=l=>o.value.heartbeatInterval=l),placeholder:"心跳间隔时间",min:10,max:300,style:{width:"100%"}},null,8,["value"])]),_:1}),t(e(k),{label:"心跳超时(秒)",path:"heartbeatTimeout"},{default:s(()=>[t(e(R),{value:o.value.heartbeatTimeout,"onUpdate:value":r[16]||(r[16]=l=>o.value.heartbeatTimeout=l),placeholder:"心跳超时时间",min:30,max:600,style:{width:"100%"}},null,8,["value"])]),_:1}),t(e(k),{label:"日志级别",path:"logLevel"},{default:s(()=>[t(e(_e),{value:o.value.logLevel,"onUpdate:value":r[17]||(r[17]=l=>o.value.logLevel=l),placeholder:"请选择日志级别",options:p},null,8,["value"])]),_:1}),t(e(k),{label:"备注信息",path:"noteText"},{default:s(()=>[t(e(H),{value:o.value.noteText,"onUpdate:value":r[18]||(r[18]=l=>o.value.noteText=l),type:"textarea",placeholder:"请输入备注信息",maxlength:"500","show-count":"",autosize:{minRows:2,maxRows:4}},null,8,["value"])]),_:1})])]),_:1})]),_:1})]),_:1},8,["model"])])]),_:1},8,["show","title"]))}}),jt=te(Wt,[["__scopeId","data-v-f5ab194c"]]),Qt={class:"tunnel-server-management"},Xt={class:"stats-section"},Zt={class:"main-content"},er={class:"table-header"},tr=j({__name:"TunnelServerManagement",setup(c){const a=ae(),d=w(null),y=w(!1),_=w({totalServers:0,runningServers:0,stoppedServers:0,errorServers:0,totalClients:0,totalConnections:0}),v=w(!1),p=w(null),S=async()=>{try{const b=await Xe();if(E(b)){const P=Z(b,{totalServers:0,runningServers:0,stoppedServers:0,errorServers:0,totalClients:0,totalConnections:0});_.value=P}}catch(b){console.error("获取统计信息失败:",b)}},N=()=>{p.value=null,v.value=!0},x=b=>{p.value=b,v.value=!0},A=()=>{p.value=null,v.value=!1,f()},o=async()=>{var b;y.value=!0;try{await Promise.all([S(),(b=d.value)==null?void 0:b.initialize()]),a.success("数据刷新成功")}catch(P){console.error("刷新数据失败:",P),a.error("刷新数据失败")}finally{y.value=!1}},f=async()=>{await o()};return he(()=>{f()}),(b,P)=>(G(),ee("div",Qt,[u("div",Xt,[t(Ut,{statistics:_.value},null,8,["statistics"])]),u("div",Zt,[t(e(O),{bordered:!1,class:"content-card"},{default:s(()=>[u("div",er,[t(e(C),{onClick:o,loading:y.value},{icon:s(()=>[t(e(T),{component:e(ye)},null,8,["component"])]),default:s(()=>[P[1]||(P[1]=$(" 刷新 "))]),_:1},8,["loading"])]),t(qt,{ref_key:"tableRef",ref:d,onCreate:N,onEdit:x},null,512)]),_:1})]),t(jt,{show:v.value,"onUpdate:show":P[0]||(P[0]=M=>v.value=M),"edit-data":p.value,onSuccess:A},null,8,["show","edit-data"])]))}}),xr=te(tr,[["__scopeId","data-v-6690b1d1"]]);export{xr as default};
