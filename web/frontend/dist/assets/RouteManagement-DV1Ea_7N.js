import{d as ce,c as G,o as k,a as d,Y as wt,b as we,r as $,f as be,g as te,bv as dt,a9 as U,aj as Ce,a7 as de,a1 as ve,H as re,v as se,bM as Ht,aw as Vt,O as fe,h as Ve,m as e,C as Ae,w as t,x as V,p as yt,I as u,n as a,av as Ge,am as De,ae as $e,T as Ie,E as Ee,bD as Lt,q as Y,t as ne,R as xe,_ as ge,ah as ze,B as Ye,J as Ze,A as et,a5 as Se,a6 as Oe,ao as Tt,ap as It,W as xt,L as ye,Q as ct,b1 as ft,G as kt,au as qt,bN as Jt,aq as jt,a2 as Bt}from"./index-BWGkTP3E.js";import{E as tt,T as Le,C as pt,P as Kt,A as Qt}from"./TrashOutline-m_TMMv8r.js";import{u as Gt}from"./usePagination-CRDaM8pF.js";import{R as Xe,C as Wt,I as Ke}from"./RefreshOutline-Cc9mnX-A.js";import{C as bt,_ as Rt,S as Xt,a as Zt}from"./StopCircleOutline-CS3UACGS.js";import{_ as at,a as Me,d as St,e as Ot,b as ea,c as ta}from"./DataTable-Wmy4yEx3.js";import{_ as qe,b as lt,c as Je,a as it}from"./Switch-DV7n8EG8.js";import{_ as vt}from"./FormItemGridItem-B0Vyz3vV.js";import{_ as Fe}from"./Alert-BCjH2kFw.js";import{C as Nt,A as Pt,R as At,S as aa,a as la}from"./RateLimitConfigForm-BoG4EfNx.js";import{_ as oa}from"./Code-D1gNrkIa.js";import{C as ot,a as nt,_ as na}from"./ChevronUpOutline-JM9cAj1K.js";import{A as rt,R as Ue}from"./Refresh-sAc_e4OP.js";import{_ as ra}from"./Table-Ct2LBLzu.js";import"./index-C9U1NGvg.js";import"./DynamicTags-BRHRNNvN.js";import"./ShieldCheckmarkOutline-p2P-FjJl.js";const sa={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 512 512"},ia=ce({name:"InformationCircle",render:function(R,C){return k(),G("svg",sa,C[0]||(C[0]=[d("path",{d:"M256 56C145.72 56 56 145.72 56 256s89.72 200 200 200s200-89.72 200-200S366.28 56 256 56zm0 82a26 26 0 1 1-26 26a26 26 0 0 1 26-26zm48 226h-88a16 16 0 0 1 0-32h28v-88h-16a16 16 0 0 1 0-32h32a16 16 0 0 1 16 16v104h28a16 16 0 0 1 0 32z",fill:"currentColor"},null,-1)]))}}),ua={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 512 512"},da=ce({name:"PlayCircle",render:function(R,C){return k(),G("svg",ua,C[0]||(C[0]=[d("path",{d:"M256 48C141.31 48 48 141.31 48 256s93.31 208 208 208s208-93.31 208-208S370.69 48 256 48zm74.77 217.3l-114.45 69.14a10.78 10.78 0 0 1-16.32-9.31V186.87a10.78 10.78 0 0 1 16.32-9.31l114.45 69.14a10.89 10.89 0 0 1 0 18.6z",fill:"currentColor"},null,-1)]))}}),ca={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 512 512"},fa=ce({name:"PowerOutline",render:function(R,C){return k(),G("svg",ca,C[0]||(C[0]=[d("path",{d:"M378 108a191.41 191.41 0 0 1 70 148c0 106-86 192-192 192S64 362 64 256a192 192 0 0 1 69-148",fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"32"},null,-1),d("path",{fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"32",d:"M256 64v192"},null,-1)]))}}),pe=wt("/gateway/hub0021");async function pa(r={}){return pe.post("/queryAllGatewayInstances",r)}async function va(r){return pe.post("/queryRouteConfigs",r)}async function ga(r,R){return pe.post("/routeConfig",{routeConfigId:r,tenantId:R})}async function Dt(r){return pe.post("/addRouteConfig",r)}async function ut(r){return pe.post("/editRouteConfig",r)}async function ht(r,R){return pe.post("/deleteRouteConfig",{routeConfigId:r,tenantId:R})}async function ma(r){return pe.post("/addRouteAssertion",r)}async function _a(r,R){return pe.post("/routeAssertions",{routeConfigId:r,tenantId:R})}async function Qe(r){return pe.post("/editRouteAssertion",r)}async function ya(r,R){return pe.post("/deleteRouteAssertion",{routeAssertionId:r,tenantId:R})}async function ba(r){return pe.post("/routerConfigs/byInstance",{gatewayInstanceId:r})}async function Ct(r){return pe.post("/addRouterConfig",r)}async function ha(r){return pe.post("/editRouterConfig",r)}async function Et(r,R="default"){return pe.post("/serviceDefinitions/byInstance",{gatewayInstanceId:r,tenantId:R})}async function Ca(r){return pe.post("/routeStatistics",r)}function wa(){const r=we(),R=$(!1),C=$(!1),D=$([]),w=$(0),_=$([]),h=$({totalRoutes:0,activeRoutes:0,inactiveRoutes:0,exactMatchRoutes:0,prefixMatchRoutes:0,regexMatchRoutes:0}),v=be({tenantId:"default",gatewayInstanceId:"",routeName:"",routePath:"",matchType:void 0,activeFlag:void 0,pageIndex:1,pageSize:20}),S=[{label:"精确匹配",value:0},{label:"前缀匹配",value:1},{label:"正则匹配",value:2}],l=[{label:"启用",value:"Y"},{label:"禁用",value:"N"}],L=te(()=>_.value.length>0),I=async()=>{try{R.value=!0;const o=await va(v);if(o.oK){let i=[];if(o.bizData)try{i=JSON.parse(o.bizData),Array.isArray(i)||(i=[])}catch(f){console.error("解析路由数据失败:",f),i=[]}let x={};if(o.pageQueryData)try{x=JSON.parse(o.pageQueryData)}catch(f){console.error("解析分页数据失败:",f),x={}}D.value=i,w.value=x.totalCount||i.length,await N(),console.log("路由列表加载成功:",{routeCount:i.length,totalCount:x.totalCount,pageIndex:x.pageIndex,pageSize:x.pageSize})}else console.warn("获取路由列表失败:",o.errMsg||o.popMsg),D.value=[],w.value=0,O()}catch(o){console.error("获取路由列表失败:",o),r.error("获取路由列表失败"),D.value=[],w.value=0,O()}finally{R.value=!1}},N=async()=>{try{const o={tenantId:v.tenantId||"default",gatewayInstanceId:v.gatewayInstanceId,routeName:v.routeName,routePath:v.routePath,matchType:v.matchType,activeFlag:v.activeFlag},i=await Ca(o);if(i.oK&&i.bizData)try{const x=JSON.parse(i.bizData);h.value={totalRoutes:x.totalRoutes||0,activeRoutes:x.activeRoutes||0,inactiveRoutes:x.inactiveRoutes||0,exactMatchRoutes:x.exactMatchRoutes||0,prefixMatchRoutes:x.prefixMatchRoutes||0,regexMatchRoutes:x.regexMatchRoutes||0},console.log("统计信息获取成功:",h.value)}catch(x){console.error("解析统计数据失败:",x),O()}else console.warn("获取统计信息失败:",i.errMsg||i.popMsg),O()}catch(o){console.error("获取统计信息失败:",o),O()}},O=()=>{h.value={totalRoutes:0,activeRoutes:0,inactiveRoutes:0,exactMatchRoutes:0,prefixMatchRoutes:0,regexMatchRoutes:0}};return{loading:R,submitting:C,routes:D,total:w,statistics:h,queryParams:v,selectedRoutes:_,matchTypeOptions:S,statusOptions:l,hasSelection:L,getRoutes:I,getStatistics:N,deleteRoute:async o=>{try{C.value=!0,await ht(o,v.tenantId||"default"),r.success("删除成功"),await I()}catch(i){console.error("删除失败:",i),r.error("删除失败")}finally{C.value=!1}},batchDeleteRoutes:async o=>{try{C.value=!0,await Promise.all(o.map(i=>ht(i,v.tenantId||"default"))),r.success(`成功删除 ${o.length} 个路由`),_.value=[],await I()}catch(i){console.error("批量删除失败:",i),r.error("批量删除失败")}finally{C.value=!1}},toggleRoute:async(o,i)=>{try{C.value=!0,await ut({tenantId:v.tenantId||"default",routeConfigId:o,gatewayInstanceId:v.gatewayInstanceId||"",activeFlag:i}),r.success(`${i==="Y"?"启用":"禁用"}成功`),await I()}catch(x){console.error("切换状态失败:",x),r.error("切换状态失败")}finally{C.value=!1}},batchToggleRoutes:async(o,i)=>{try{C.value=!0,await Promise.all(o.map(x=>ut({tenantId:v.tenantId||"default",routeConfigId:x,gatewayInstanceId:v.gatewayInstanceId||"",activeFlag:i}))),r.success(`成功${i==="Y"?"启用":"禁用"} ${o.length} 个路由`),_.value=[],await I()}catch(x){console.error("批量切换状态失败:",x),r.error("批量切换状态失败")}finally{C.value=!1}},copyRoute:async(o,i)=>{try{C.value=!0;const x=await ga(o,v.tenantId||"default");if(x.oK&&x.bizData){const f=JSON.parse(x.bizData);await Dt({...f,routeName:i,routePath:`${f.routePath}_copy`,tenantId:v.tenantId||"default",gatewayInstanceId:v.gatewayInstanceId||""}),r.success("复制成功"),await I()}}catch(x){console.error("复制失败:",x),r.error("复制失败")}finally{C.value=!1}},resetQuery:()=>{v.routeName="",v.routePath="",v.matchType=void 0,v.activeFlag=void 0,v.pageIndex=1},handleSelectionChange:o=>{_.value=o},handlePageChange:o=>{v.pageIndex=o,I()},handlePageSizeChange:o=>{v.pageSize=o,v.pageIndex=1,I()}}}function Ta(r={}){const R=we(),C=dt(),D=$(null),w=$(null),_=$(null),h=$(!1),v=$([]),S=$(!1),l=$(!1),L=te(()=>v.value.length>0),I=te(()=>v.value.length===1);return{editingRoute:D,viewingRoute:w,configManagementRoute:_,showDetailDialog:h,selectedRoutes:v,batchDeleting:S,batchToggling:l,hasSelection:L,hasSingleSelection:I,handleEdit:m=>{D.value=m},handleView:m=>{w.value=m,h.value=!0},handleDialogSuccess:m=>{var i,x,f;const o=D.value!==null;D.value=null,m?o?(console.log("路由编辑成功，刷新列表:",m.routeName),(i=r.onRefresh)==null||i.call(r)):(console.log("添加新路由到列表:",m.routeName),(x=r.onAddRoute)==null||x.call(r,m)):(console.log("未返回路由数据，刷新列表"),(f=r.onRefresh)==null||f.call(r))},handleDelete:(m,o)=>{C.warning({title:"确认删除",content:`确定要删除路由 "${m.routeName}" 吗？删除后不可恢复。`,positiveText:"确定删除",negativeText:"取消",onPositiveClick:async()=>{var i;try{await o(m.routeConfigId),R.success("路由删除成功"),(i=r.onRefresh)==null||i.call(r)}catch(x){console.error("删除失败:",x),R.error("删除失败，请重试")}}})},handleBatchDelete:m=>{v.value.length!==0&&C.warning({title:"确认删除",content:`确定要删除选中的 ${v.value.length} 个路由配置吗？删除后不可恢复。`,positiveText:"确定删除",negativeText:"取消",onPositiveClick:async()=>{var o;try{S.value=!0,await m(v.value),R.success(`成功删除 ${v.value.length} 个路由配置`),v.value=[],(o=r.onRefresh)==null||o.call(r)}catch(i){console.error("批量删除失败:",i),R.error("批量删除失败，请重试")}finally{S.value=!1}}})},handleBatchEnable:async m=>{var o;if(v.value.length!==0)try{l.value=!0,await m(v.value,"Y"),R.success(`成功启用 ${v.value.length} 个路由配置`),v.value=[],(o=r.onRefresh)==null||o.call(r)}catch(i){console.error("批量启用失败:",i),R.error("批量启用失败，请重试")}finally{l.value=!1}},handleBatchDisable:async m=>{var o;if(v.value.length!==0)try{l.value=!0,await m(v.value,"N"),R.success(`成功禁用 ${v.value.length} 个路由配置`),v.value=[],(o=r.onRefresh)==null||o.call(r)}catch(i){console.error("批量禁用失败:",i),R.error("批量禁用失败，请重试")}finally{l.value=!1}},handleSelectionChange:m=>{v.value=m},resetState:()=>{D.value=null,w.value=null,h.value=!1,v.value=[],S.value=!1,l.value=!1},handleRouteConfig:()=>{var i;if(v.value.length!==1){R.warning("请选择一个路由进行配置管理");return}const m=v.value[0],o=(i=r.findRouteCallback)==null?void 0:i.call(r,m);if(!o){R.error("无法找到选中的路由信息");return}_.value=o}}}function Ia(r={}){const R=w=>{const _={0:"success",1:"info",2:"warning"},h={0:"精确",1:"前缀",2:"正则"};return{type:_[w]||"default",text:h[w]||"未知"}},C=w=>{const _=w==="Y";return{type:_?"success":"error",text:_?"启用":"禁用"}};return{columns:[{type:"selection",multiple:!0,width:50},{title:"路由名称",key:"routeName",width:180,ellipsis:{tooltip:!0},render:w=>U("span",{style:{cursor:"pointer",color:"#18a058",fontWeight:"500"},onClick:()=>{var _;return(_=r.onView)==null?void 0:_.call(r,w)}},w.routeName)},{title:"路由路径",key:"routePath",width:200,ellipsis:{tooltip:!0},render:w=>U("code",{style:{background:"#f6f8fa",padding:"2px 6px",borderRadius:"3px",fontSize:"12px",color:"#24292f",border:"1px solid #d1d9e0"}},w.routePath)},{title:"HTTP方法",key:"allowedMethods",width:120,render:w=>{let _=[];if(w.allowedMethods){if(Array.isArray(w.allowedMethods))_=w.allowedMethods;else if(typeof w.allowedMethods=="string")try{const h=JSON.parse(w.allowedMethods);Array.isArray(h)&&(_=h)}catch{_=w.allowedMethods.split(",").map(h=>h.trim()).filter(h=>h)}}return _.length===0?U("span",{style:"color: #909399; font-style: italic;"},"ALL"):U(de,{size:4,wrap:!1},{default:()=>_.slice(0,2).map(h=>U(Ce,{type:"info",size:"small"},{default:()=>h})).concat(_.length>2?[U("span",{style:"color: #909399; font-size: 12px;"},`+${_.length-2}`)]:[])})}},{title:"匹配类型",key:"matchType",width:100,render:w=>{const{type:_,text:h}=R(w.matchType);return U(Ce,{type:_,size:"small"},{default:()=>h})}},{title:"状态",key:"activeFlag",width:80,render:w=>{const{type:_,text:h}=C(w.activeFlag);return U(Ce,{type:_,size:"small"},{default:()=>h})}},{title:"关联服务",key:"serviceDefinitionId",width:180,ellipsis:{tooltip:!0},render:w=>{if(!w.serviceDefinitionId)return U("span",{style:"color: #909399; font-style: italic;"},"未关联");const _=w.serviceName||"未知服务";return U("div",{style:"display: flex; flex-direction: column; gap: 2px;"},[U("span",{style:"font-weight: 500; color: #18a058; font-size: 13px;"},_),U("code",{style:{background:"#f6f8fa",padding:"1px 4px",borderRadius:"2px",fontSize:"10px",color:"#6b7280",border:"1px solid #e5e7eb"}},w.serviceDefinitionId)])}},{title:"优先级",key:"routePriority",width:80,render:w=>{var _;return U("span",{style:"font-weight: bold; color: #0066cc;"},((_=w.routePriority)==null?void 0:_.toString())||"0")}},{title:"创建时间",key:"addTime",width:160,render:w=>w.addTime?new Date(w.addTime).toLocaleString():"-"},{title:"操作",key:"actions",width:220,fixed:"right",render:w=>U(de,{size:8},{default:()=>[U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"small",type:"info",secondary:!0,onClick:()=>{var _;return(_=r.onView)==null?void 0:_.call(r,w)}},{icon:()=>U(se,{},{default:()=>U(Ht)})}),default:()=>"查看详情"}),U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"small",type:"primary",secondary:!0,onClick:()=>{var _;return(_=r.onEdit)==null?void 0:_.call(r,w)}},{icon:()=>U(se,{},{default:()=>U(tt)})}),default:()=>"编辑路由"}),U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"small",type:"warning",secondary:!0,onClick:()=>{var _;return(_=r.onRouteConfig)==null?void 0:_.call(r,w)}},{icon:()=>U(se,{},{default:()=>U(Vt)})}),default:()=>"路由配置"}),U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"small",type:"error",secondary:!0,onClick:()=>{var _;return(_=r.onDelete)==null?void 0:_.call(r,w)}},{icon:()=>U(se,{},{default:()=>U(Le)})}),default:()=>"删除路由"})]})}],getMatchTypeTagProps:R,getStatusTagProps:C}}function xa(){const r=$(null),R=be({routeName:"",routePath:"",allowedMethods:["GET"],allowedHosts:"",matchType:1,routePriority:100,stripPathPrefix:"N",rewritePath:"",enableWebsocket:"N",timeoutMs:3e4,retryCount:0,retryIntervalMs:1e3,serviceDefinitionId:"",logConfigId:"",routeMetadata:{},activeFlag:"Y",noteText:""}),C=$(!1),D=$(""),w=$(!1),_=[{label:"GET",value:"GET"},{label:"POST",value:"POST"},{label:"PUT",value:"PUT"},{label:"DELETE",value:"DELETE"},{label:"PATCH",value:"PATCH"},{label:"HEAD",value:"HEAD"},{label:"OPTIONS",value:"OPTIONS"}],h=[{label:"精确匹配",value:0},{label:"前缀匹配",value:1},{label:"正则匹配",value:2}],v={routeName:[{required:!0,message:"请输入路由名称",trigger:"blur"},{min:2,max:100,message:"路由名称长度应在 2-100 字符之间",trigger:"blur"}],routePath:[{required:!0,message:"请输入路由路径",trigger:"blur"},{pattern:/^\/.*/,message:"路由路径必须以 / 开头",trigger:"blur"},{validator:(y,p)=>{if(R.matchType===2)try{return new RegExp(p),!0}catch{return new Error("请输入有效的正则表达式")}return!0},trigger:"blur"}],allowedMethods:[{type:"array",required:!0,message:"请选择至少一个HTTP方法",trigger:"change"}],matchType:[{required:!0,message:"请选择匹配类型",trigger:"change",validator:(y,p)=>(console.log("matchType validator - value:",p,"type:",typeof p),p==null?new Error("请选择匹配类型"):[0,1,2].includes(p)?!0:new Error("请选择有效的匹配类型"))}],routePriority:[{required:!0,message:"请输入路由优先级",trigger:"change",type:"number",min:1,max:999}],serviceDefinitionId:[{required:!0,message:"请选择关联的服务定义",trigger:"change"}]},S=te(()=>R.matchType===2),l=()=>({routeName:"",routePath:"",allowedMethods:["GET"],allowedHosts:"",matchType:1,routePriority:100,stripPathPrefix:"N",rewritePath:"",enableWebsocket:"N",timeoutMs:3e4,retryCount:0,retryIntervalMs:1e3,serviceDefinitionId:"",logConfigId:"",routeMetadata:{},activeFlag:"Y",noteText:""}),L=()=>{var y;Object.assign(R,l()),C.value=!1,D.value="",(y=r.value)==null||y.restoreValidation()},I=y=>{C.value=!0,D.value=y.routeConfigId;let p=["GET"];if(y.allowedMethods){if(Array.isArray(y.allowedMethods))p=y.allowedMethods;else if(typeof y.allowedMethods=="string")try{const b=JSON.parse(y.allowedMethods);Array.isArray(b)&&(p=b)}catch{p=y.allowedMethods.split(",").map(b=>b.trim()).filter(b=>b)}}Object.assign(R,{routeName:y.routeName,routePath:y.routePath,allowedMethods:p,allowedHosts:y.allowedHosts||"",matchType:y.matchType,routePriority:y.routePriority,stripPathPrefix:y.stripPathPrefix,rewritePath:y.rewritePath||"",enableWebsocket:y.enableWebsocket,timeoutMs:y.timeoutMs,retryCount:y.retryCount,retryIntervalMs:y.retryIntervalMs,serviceDefinitionId:y.serviceDefinitionId||"",logConfigId:y.logConfigId||"",routeMetadata:y.routeMetadata||{},activeFlag:y.activeFlag,noteText:y.noteText||""})},N=async()=>{var y;try{return await((y=r.value)==null?void 0:y.validate()),!0}catch{return!1}},O=()=>{const y={...R};return Array.isArray(y.allowedMethods)&&(y.allowedMethods=JSON.stringify(y.allowedMethods)),y},H=y=>{var p;console.log("handleMatchTypeChange called with:",y,"type:",typeof y),R.matchType=y,console.log("formData.matchType after assignment:",R.matchType),y!==1&&(R.stripPathPrefix="N"),(p=r.value)==null||p.restoreValidation()},j=y=>{R.routePath=y,y&&!y.startsWith("/")&&(R.routePath="/"+y)},z=te(()=>{switch(R.matchType){case 0:return"示例: /api/users/123";case 1:return"示例: /api/users (匹配 /api/users/*)";case 2:return"示例: ^/api/users/\\d+$";default:return""}}),F=te(()=>{switch(R.matchType){case 0:return"精确匹配：请求路径必须完全匹配配置的路径";case 1:return"前缀匹配：请求路径以配置的路径为前缀即可匹配";case 2:return"正则匹配：使用正则表达式匹配请求路径";default:return""}});return fe(()=>R.matchType,y=>{H(y)}),{formRef:r,formData:R,formRules:v,isEditMode:C,editingRouteId:D,loading:w,httpMethodOptions:_,matchTypeOptions:h,isRegexMatch:S,getPathExample:z,getMatchTypeDescription:F,resetForm:L,fillFormData:I,validateForm:N,getFormData:O,handleMatchTypeChange:H,handlePathInput:j}}function ka(r={}){const R=we(),{formRef:C,formData:D,formRules:w,isEditMode:_,editingRouteId:h,httpMethodOptions:v,matchTypeOptions:S,getPathExample:l,getMatchTypeDescription:L,resetForm:I,fillFormData:N,validateForm:O,getFormData:H,handleMatchTypeChange:j,handlePathInput:z}=xa(),F=$(!1),y=$(!1),p=$(null),b=$(""),g=$([]),m=$([]),o=$(!1),i=te({get:()=>D.activeFlag,set:q=>{D.activeFlag=q}}),x=async q=>{if(!q){m.value=[];return}try{o.value=!0;const T=await Et(q);if(T.oK&&T.bizData){const A=JSON.parse(T.bizData);m.value=A.map(B=>({label:`${B.serviceName} (${B.serviceDefinitionId})`,value:B.serviceDefinitionId,disabled:B.activeFlag!=="Y"}))}else m.value=[],console.warn("获取服务定义列表失败:",T.errMsg)}catch(T){console.error("加载服务定义列表失败:",T),m.value=[],R.error("加载服务定义列表失败")}finally{o.value=!1}},f=q=>{console.log("选择的服务定义ID:",q)},c=()=>({key:"",value:""}),s=(q,T)=>{if(y.value=!0,p.value=q||null,b.value=T||"",q){N(q);const A=q.routeMetadata||{};g.value=Object.entries(A).map(([B,n])=>({key:B,value:String(n)}))}else I(),g.value=[];T&&x(T),setTimeout(()=>{var A;(A=C.value)==null||A.restoreValidation()},100)},P=()=>{y.value=!1,p.value=null,b.value="",I(),g.value=[],m.value=[]},E=async()=>{var q,T;try{if(!await O()){R.warning("请检查表单输入");return}const B={};g.value.forEach(J=>{J.key.trim()&&J.value.trim()&&(B[J.key.trim()]=J.value.trim())}),D.routeMetadata=B;const n=H();if(F.value=!0,_.value){const J={...n,tenantId:"default",routeConfigId:h.value,gatewayInstanceId:b.value};console.log("Updating route with data:",J);const W=await ut(J);if(W.oK){R.success("路由更新成功");let ue=null;try{if(W.bizData){const oe=JSON.parse(W.bizData);oe&&typeof oe=="object"&&(ue=oe,console.log("解析到更新后的路由:",ue))}}catch(oe){console.error("解析更新后的路由数据失败:",oe,"bizData:",W.bizData)}P(),(q=r.onSuccess)==null||q.call(r,ue)}else R.error(W.errMsg||W.popMsg||"路由更新失败")}else{const J={...n,tenantId:"default",gatewayInstanceId:b.value};console.log("Creating route with data:",J);const W=await Dt(J);if(W.oK){R.success('路由创建成功！您可以通过"路由配置管理"功能配置高级选项');let ue=null;try{if(W.bizData){const oe=JSON.parse(W.bizData);oe&&typeof oe=="object"?(ue=oe,console.log("解析到新创建的路由:",ue)):console.warn("返回的路由数据格式不正确:",oe)}else console.warn("后端未返回路由数据")}catch(oe){console.error("解析返回的路由数据失败:",oe,"bizData:",W.bizData)}P(),(T=r.onSuccess)==null||T.call(r,ue)}else R.error(W.errMsg||W.popMsg||"路由创建失败")}}catch(A){console.error("路由操作失败:",A),R.error(A.message||"操作失败，请重试")}finally{F.value=!1}};return fe(y,q=>{q||setTimeout(()=>{p.value=null,b.value=""},200)}),{visible:y,editingRoute:p,gatewayInstanceId:b,formRef:C,formData:D,formRules:w,isEditMode:_,editingRouteId:h,httpMethodOptions:v,matchTypeOptions:S,getPathExample:l,getMatchTypeDescription:L,activeSwitch:i,metadataList:g,createMetadataItem:c,serviceDefinitionOptions:m,loadingServiceDefinitions:o,handleServiceDefinitionChange:f,submitting:F,openDialog:s,closeDialog:P,handleSubmit:E,handleMatchTypeChange:j,handlePathInput:z}}const Ra={class:"service-definition-selector"},Sa={key:0,class:"selected-service"},Oa={class:"service-card"},Na={class:"service-header"},Pa={class:"service-avatar"},Aa={class:"avatar-circle"},Da={class:"service-main-info"},Ea={class:"service-name"},Ma={class:"service-id"},Fa={class:"service-status"},za={class:"service-details"},Ua={class:"detail-row"},$a={class:"detail-item"},Ya={class:"detail-item"},Ha={class:"detail-value"},Va={class:"detail-row"},La={class:"detail-item full-width"},qa={class:"service-actions"},Ja={key:1,class:"empty-selector"},ja={class:"selector-toolbar"},Ba=ce({__name:"ServiceDefinitionSelector",props:{modelValue:{},gatewayInstanceId:{},loading:{type:Boolean}},emits:["update:modelValue","change"],setup(r,{emit:R}){const C=r,D=R,w=we(),_=$(!1),h=$(""),v=$([]),S=$([]),l=$(!1),L=o=>({style:"cursor: pointer",onClick:()=>b(o)}),I=te(()=>v.value.find(o=>o.serviceDefinitionId===C.modelValue)),N=te(()=>{const o=S.value[0];return o?v.value.find(i=>i.serviceDefinitionId===o):null}),O=te(()=>{if(!h.value)return v.value;const o=h.value.toLowerCase();return v.value.filter(i=>i.serviceName.toLowerCase().includes(o)||i.serviceDefinitionId.toLowerCase().includes(o)||i.serviceDesc&&i.serviceDesc.toLowerCase().includes(o))}),H=[{type:"selection",multiple:!1,width:50},{title:"服务ID",key:"serviceDefinitionId",width:150,render:o=>U("div",{class:"service-id-cell"},[U("div",{class:"service-id-text"},o.serviceDefinitionId),o.serviceDesc?U("div",{class:"service-desc"},o.serviceDesc):null])},{title:"服务名称",key:"serviceName",width:140,render:o=>U("div",{class:"service-name-cell"},o.serviceName)},{title:"服务类型",key:"serviceType",width:90,render:o=>{const i=o.serviceType===1?{text:"服务发现",type:"success"}:{text:"静态配置",type:"info"};return U("n-tag",{type:i.type,size:"small"},{default:()=>i.text})}},{title:"负载均衡",key:"loadBalanceAlgorithm",width:100,render:o=>U("span",{style:"font-size: 13px;"},z(o.loadBalanceAlgorithm))},{title:"健康检查",key:"healthCheckEnabled",width:90,render:o=>{const i=o.healthCheckEnabled==="Y";return U("div",{class:"health-check-cell",style:`color: ${i?"#18a058":"#8a8a8a"}; font-size: 12px; font-weight: 500;`},i?"已启用":"已禁用")}},{title:"状态",key:"activeFlag",width:70,render:o=>{const i=o.activeFlag==="Y";return U("div",{class:"active-status-cell",style:`color: ${i?"#18a058":"#d03050"}; font-size: 12px; font-weight: 500;`},i?"启用":"禁用")}}],j={pageSize:10,showSizePicker:!0,pageSizes:[8,10,15,20],showQuickJumper:!0,simple:!1,size:"small"},z=o=>({"round-robin":"轮询",random:"随机","ip-hash":"IP哈希","least-conn":"最少连接","weighted-round-robin":"加权轮询","consistent-hash":"一致性哈希"})[o]||o,F=o=>{if(!o)return"?";const i=o.charAt(0).toUpperCase();return/^[A-Z]$/.test(i)?i:o.charAt(0)},y=async()=>{if(!C.gatewayInstanceId)return v.value=[],Promise.resolve();try{l.value=!0;const o=await Et(C.gatewayInstanceId);if(o.oK&&o.bizData){const i=JSON.parse(o.bizData);v.value=i||[],C.modelValue&&!v.value.find(x=>x.serviceDefinitionId===C.modelValue)&&console.warn("当前选择的服务定义不在列表中:",C.modelValue)}else v.value=[],console.warn("获取服务定义列表失败:",o.errMsg)}catch(o){console.error("加载服务定义列表失败:",o),v.value=[],w.error("加载服务定义列表失败")}finally{l.value=!1}},p=o=>{S.value=o.map(i=>String(i))},b=o=>{S.value=[o.serviceDefinitionId]},g=()=>{N.value&&(D("update:modelValue",N.value.serviceDefinitionId),D("change",N.value),_.value=!1,w.success(`已选择服务: ${N.value.serviceName}`))},m=()=>{D("update:modelValue",null),D("change",null),w.info("已清除服务定义选择")};return fe(()=>C.gatewayInstanceId,o=>{o?y():v.value=[]}),fe(()=>_.value,o=>{o&&(S.value=C.modelValue?[C.modelValue]:[],h.value="",C.gatewayInstanceId&&y().then(()=>{C.modelValue&&(S.value=[C.modelValue])}))}),Ve(()=>{C.gatewayInstanceId&&y()}),(o,i)=>{const x=Ce,f=se,c=re,s=de,P=De,E=Ae,q=Ee,T=xe,A=at,B=Ie,n=$e;return k(),G("div",Ra,[e(E,{label:"关联服务",path:"serviceDefinitionId",required:""},{feedback:t(()=>[e(P,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>i[12]||(i[12]=[u(" 选择要关联的后端服务定义，如果没有可用选项，请先在服务管理中创建服务定义 ")])),_:1})]),default:t(()=>[e(s,{vertical:"",style:{width:"100%"}},{default:t(()=>[o.modelValue&&I.value?(k(),G("div",Sa,[d("div",Oa,[d("div",Na,[d("div",Pa,[d("div",Aa,V(F(I.value.serviceName)),1)]),d("div",Da,[d("div",Ea,V(I.value.serviceName),1),d("div",Ma,V(I.value.serviceDefinitionId),1)]),d("div",Fa,[d("div",{class:yt(["status-indicator",I.value.activeFlag==="Y"?"active":"inactive"])},V(I.value.activeFlag==="Y"?"启用":"禁用"),3)])]),d("div",za,[d("div",Ua,[d("div",$a,[i[6]||(i[6]=d("span",{class:"detail-label"},"服务类型",-1)),e(x,{type:I.value.serviceType===1?"success":"info",size:"small"},{default:t(()=>[u(V(I.value.serviceType===1?"服务发现":"静态配置"),1)]),_:1},8,["type"])]),d("div",Ya,[i[7]||(i[7]=d("span",{class:"detail-label"},"负载均衡",-1)),d("span",Ha,V(z(I.value.loadBalanceAlgorithm)),1)])]),d("div",Va,[d("div",La,[i[8]||(i[8]=d("span",{class:"detail-label"},"健康检查",-1)),d("div",{class:yt(["health-status",I.value.healthCheckEnabled==="Y"?"enabled":"disabled"])},V(I.value.healthCheckEnabled==="Y"?"已启用":"已禁用"),3)])])]),d("div",qa,[e(c,{onClick:i[0]||(i[0]=J=>_.value=!0),size:"small",secondary:""},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(Xe))]),_:1})]),default:t(()=>[i[9]||(i[9]=u(" 重新选择 "))]),_:1}),e(c,{onClick:m,size:"small",type:"error",secondary:""},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(bt))]),_:1})]),default:t(()=>[i[10]||(i[10]=u(" 清除 "))]),_:1})])])])):(k(),G("div",Ja,[e(c,{onClick:i[1]||(i[1]=J=>_.value=!0),loading:l.value,dashed:"",block:"",size:"large",class:"select-btn"},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(Ge))]),_:1})]),default:t(()=>[i[11]||(i[11]=u(" 点击选择服务定义 "))]),_:1},8,["loading"])]))]),_:1})]),_:1}),e(n,{show:_.value,"onUpdate:show":i[5]||(i[5]=J=>_.value=J),"mask-closable":!1,class:"service-selector-modal"},{default:t(()=>[e(B,{style:{width:"1000px","max-height":"80vh"},title:"选择服务定义",bordered:!1,size:"medium",role:"dialog","aria-modal":"true"},{"header-extra":t(()=>[e(c,{quaternary:"",circle:"",onClick:i[2]||(i[2]=J=>_.value=!1)},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(bt))]),_:1})]),_:1})]),footer:t(()=>[e(s,{justify:"space-between"},{default:t(()=>[e(P,{depth:"3"},{default:t(()=>{var J;return[u(V(S.value.length>0?`已选择: ${(J=N.value)==null?void 0:J.serviceName}`:"请选择一个服务定义"),1)]}),_:1}),e(s,null,{default:t(()=>[e(c,{onClick:i[4]||(i[4]=J=>_.value=!1)},{default:t(()=>i[15]||(i[15]=[u("取消")])),_:1}),e(c,{type:"primary",onClick:g,disabled:!N.value},{default:t(()=>i[16]||(i[16]=[u(" 确定选择 ")])),_:1},8,["disabled"])]),_:1})]),_:1})]),default:t(()=>[d("div",ja,[e(s,{align:"center",justify:"space-between",size:"medium"},{default:t(()=>[e(q,{value:h.value,"onUpdate:value":i[3]||(i[3]=J=>h.value=J),placeholder:"搜索服务名称、ID或描述",clearable:"",style:{width:"350px"},size:"medium"},{prefix:t(()=>[e(f,null,{default:t(()=>[e(a(Lt))]),_:1})]),_:1},8,["value"]),e(s,{size:"small"},{default:t(()=>[O.value.length>0?(k(),Y(x,{key:0,type:"info",size:"small"},{default:t(()=>[u(" 找到 "+V(O.value.length)+" 个服务定义 ",1)]),_:1})):ne("",!0),e(c,{onClick:y,loading:l.value,size:"small",secondary:""},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(Xe))]),_:1})]),default:t(()=>[i[13]||(i[13]=u(" 刷新 "))]),_:1},8,["loading"])]),_:1})]),_:1})]),e(A,{columns:H,data:O.value,loading:l.value,pagination:j,"row-key":J=>J.serviceDefinitionId,"checked-row-keys":S.value,"max-height":400,"scroll-x":800,striped:"",size:"small",class:"service-table","onUpdate:checkedRowKeys":p,onRowClick:b,"row-props":L},{empty:t(()=>[l.value?ne("",!0):(k(),Y(T,{key:0,description:"暂无服务定义数据",size:"small"},{extra:t(()=>[e(c,{size:"small",onClick:y},{default:t(()=>i[14]||(i[14]=[u("重新加载")])),_:1})]),_:1}))]),_:1},8,["data","loading","row-key","checked-row-keys"])]),_:1})]),_:1},8,["show"])])}}}),Ka=ge(Ba,[["__scopeId","data-v-fe8314bd"]]),Qa={style:{display:"flex","align-items":"center",width:"100%"}},Ga=ce({__name:"RouteConfigDialog",props:{editingRoute:{default:null},gatewayInstanceId:{default:""}},emits:["success"],setup(r,{expose:R,emit:C}){const D=C,{visible:w,formRef:_,formData:h,formRules:v,isEditMode:S,httpMethodOptions:l,matchTypeOptions:L,getPathExample:I,getMatchTypeDescription:N,activeSwitch:O,metadataList:H,createMetadataItem:j,submitting:z,openDialog:F,closeDialog:y,handleSubmit:p,handleMatchTypeChange:b,handlePathInput:g}=ka({onSuccess:()=>D("success")});return R({openDialog:F,closeDialog:y}),(m,o)=>{const i=se,x=re,f=Ee,c=vt,s=Me,P=De,E=Ot,q=de,T=St,A=lt,B=Je,n=qe,J=Ie,W=et,ue=Rt,oe=Ae,ie=Ze,me=Fe,le=Ye,X=$e;return k(),Y(X,{show:a(w),"onUpdate:show":o[11]||(o[11]=ee=>ze(w)?w.value=ee:null),style:{width:"70%",maxWidth:"900px",minWidth:"600px"}},{default:t(()=>[e(J,{title:a(S)?"编辑路由":"新建路由",bordered:!1,size:"huge",role:"dialog","aria-modal":"true"},{"header-extra":t(()=>[e(x,{quaternary:"",circle:"",onClick:a(y)},{icon:t(()=>[e(i,null,{default:t(()=>[e(a(pt))]),_:1})]),_:1},8,["onClick"])]),footer:t(()=>[e(q,{justify:"space-between"},{default:t(()=>[a(S)?(k(),Y(P,{key:0,depth:"3",style:{"font-size":"12px"}},{default:t(()=>o[22]||(o[22]=[u(' 提示：高级配置请使用"路由配置管理"功能 ')])),_:1})):ne("",!0),e(q,null,{default:t(()=>[e(x,{onClick:a(y)},{default:t(()=>o[23]||(o[23]=[u("取消")])),_:1},8,["onClick"]),e(x,{type:"primary",loading:a(z),onClick:a(p)},{default:t(()=>[u(V(a(S)?"更新路由":"创建路由"),1)]),_:1},8,["loading","onClick"])]),_:1})]),_:1})]),default:t(()=>[e(le,{ref_key:"formRef",ref:_,model:a(h),rules:a(v),"label-placement":"left","label-width":120,"require-mark-placement":"right-hanging"},{default:t(()=>[e(ie,{type:"line",animated:""},{default:t(()=>[e(W,{name:"basic",tab:"基本信息"},{default:t(()=>[e(J,{size:"small",title:"路由基本信息"},{default:t(()=>[e(n,{cols:2,"x-gap":24,"y-gap":16},{default:t(()=>[e(c,{label:"路由名称",path:"routeName"},{default:t(()=>[e(f,{value:a(h).routeName,"onUpdate:value":o[0]||(o[0]=ee=>a(h).routeName=ee),placeholder:"请输入路由名称",maxlength:"100","show-count":""},null,8,["value"])]),_:1}),e(c,{label:"匹配类型",path:"matchType"},{default:t(()=>[e(s,{value:a(h).matchType,"onUpdate:value":[o[1]||(o[1]=ee=>a(h).matchType=ee),a(b)],options:a(L),placeholder:"请选择匹配类型"},null,8,["value","options","onUpdate:value"])]),_:1}),e(c,{label:"路由路径",path:"routePath",span:2},{feedback:t(()=>[e(P,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>[u(V(a(N)),1)]),_:1}),o[12]||(o[12]=d("br",null,null,-1)),e(P,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>[u(V(a(I)),1)]),_:1})]),default:t(()=>[e(f,{value:a(h).routePath,"onUpdate:value":o[2]||(o[2]=ee=>a(h).routePath=ee),placeholder:"请输入路由路径",onInput:a(g)},null,8,["value","onInput"])]),_:1}),e(c,{label:"HTTP方法",path:"allowedMethods",span:2},{default:t(()=>[e(T,{value:a(h).allowedMethods,"onUpdate:value":o[3]||(o[3]=ee=>a(h).allowedMethods=ee)},{default:t(()=>[e(q,null,{default:t(()=>[(k(!0),G(Se,null,Oe(a(l),ee=>(k(),Y(E,{key:ee.value,value:ee.value,label:ee.label},null,8,["value","label"]))),128))]),_:1})]),_:1},8,["value"])]),_:1}),e(c,{label:"允许的主机",path:"allowedHosts"},{feedback:t(()=>[e(P,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>o[13]||(o[13]=[u(" 多个主机用逗号分隔，如：api.example.com,www.example.com ")])),_:1})]),default:t(()=>[e(f,{value:a(h).allowedHosts,"onUpdate:value":o[4]||(o[4]=ee=>a(h).allowedHosts=ee),placeholder:"留空表示允许所有主机"},null,8,["value"])]),_:1}),e(c,{label:"路由优先级",path:"routePriority"},{feedback:t(()=>[e(P,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>o[14]||(o[14]=[u(" 数值越小优先级越高，建议范围：1-999 ")])),_:1})]),default:t(()=>[e(A,{value:a(h).routePriority,"onUpdate:value":o[5]||(o[5]=ee=>a(h).routePriority=ee),min:1,max:999,placeholder:"数值越小优先级越高",style:{width:"100%"}},null,8,["value"])]),_:1}),e(c,{span:2},{default:t(()=>[e(Ka,{modelValue:a(h).serviceDefinitionId,"onUpdate:modelValue":o[6]||(o[6]=ee=>a(h).serviceDefinitionId=ee),"gateway-instance-id":m.gatewayInstanceId},null,8,["modelValue","gateway-instance-id"])]),_:1}),e(c,{label:"日志配置",path:"logConfigId"},{default:t(()=>[e(f,{value:a(h).logConfigId,"onUpdate:value":o[7]||(o[7]=ee=>a(h).logConfigId=ee),placeholder:"请输入日志配置ID（可选）"},null,8,["value"])]),_:1}),e(c,{label:"启用状态",span:2},{default:t(()=>[e(B,{value:a(O),"onUpdate:value":o[8]||(o[8]=ee=>ze(O)?O.value=ee:null),"checked-value":"Y","unchecked-value":"N"},{checked:t(()=>o[15]||(o[15]=[u("启用")])),unchecked:t(()=>o[16]||(o[16]=[u("禁用")])),_:1},8,["value"])]),_:1})]),_:1})]),_:1})]),_:1}),e(W,{name:"metadata",tab:"元数据配置"},{default:t(()=>[e(J,{size:"small",title:"元数据配置"},{default:t(()=>[e(q,{vertical:"",size:"medium"},{default:t(()=>[e(oe,{label:"路由元数据",path:"routeMetadata"},{feedback:t(()=>[e(P,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>o[17]||(o[17]=[u(" 用于存储路由的自定义元数据信息 ")])),_:1})]),default:t(()=>[e(ue,{value:a(H),"onUpdate:value":o[9]||(o[9]=ee=>ze(H)?H.value=ee:null),"on-create":a(j)},{default:t(({value:ee})=>[d("div",Qa,[e(f,{value:ee.key,"onUpdate:value":ae=>ee.key=ae,placeholder:"键",style:{"margin-right":"12px",flex:"1"}},null,8,["value","onUpdate:value"]),e(f,{value:ee.value,"onUpdate:value":ae=>ee.value=ae,placeholder:"值",style:{flex:"2"}},null,8,["value","onUpdate:value"])])]),_:1},8,["value","on-create"])]),_:1}),e(oe,{label:"备注信息",path:"noteText"},{default:t(()=>[e(f,{value:a(h).noteText,"onUpdate:value":o[10]||(o[10]=ee=>a(h).noteText=ee),type:"textarea",placeholder:"请输入备注信息",autosize:{minRows:3,maxRows:6},maxlength:"500","show-count":""},null,8,["value"])]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),a(S)?ne("",!0):(k(),Y(J,{key:0,size:"small",style:{"margin-top":"16px"}},{default:t(()=>[e(me,{type:"info","show-icon":!1},{header:t(()=>[e(P,{strong:""},{default:t(()=>o[18]||(o[18]=[u("高级配置说明")])),_:1})]),default:t(()=>[o[19]||(o[19]=u(' 路由创建成功后，您可以通过"路由配置管理"功能来配置： ')),o[20]||(o[20]=d("ul",{style:{margin:"8px 0","padding-left":"20px"}},[d("li",null,"断言设置（路由匹配条件）"),d("li",null,"过滤器配置（请求处理逻辑）"),d("li",null,"CORS跨域配置"),d("li",null,"认证授权配置"),d("li",null,"限流策略配置")],-1)),o[21]||(o[21]=u(" 这样可以确保在路由存在的基础上进行精确的配置管理。 "))]),_:1})]),_:1}))]),_:1},8,["model","rules"])]),_:1},8,["title"])]),_:1},8,["show"])}}}),Wa=ge(Ga,[["__scopeId","data-v-847974fe"]]);function Xa(r){const R=$(!1),C=te(()=>r?[{predicateType:"Header",activeFlag:"Y",predicateConfig:{headerName:"Authorization",headerValue:"Bearer *",operator:"matches"}},{predicateType:"Query",activeFlag:"Y",predicateConfig:{paramName:"version",paramValue:"v1",operator:"equals"}}]:[]),D=te(()=>r?[{filterType:"AddRequestHeader",executionTiming:1,filterPriority:100,activeFlag:"Y",filterConfig:{headerName:"X-Route-ID",headerValue:r.routeConfigId}},{filterType:"RateLimiter",executionTiming:1,filterPriority:50,activeFlag:"Y",filterConfig:{rateLimit:100,rateLimitUnit:"minute",burstSize:10}}]:[]),w=te(()=>r?{allowOrigins:["*"],allowMethods:["GET","POST","PUT","DELETE"],allowHeaders:["Content-Type","Authorization"],exposeHeaders:["X-Total-Count"],allowCredentials:!0,maxAge:3600,activeFlag:"Y"}:null),_=te(()=>r?{authType:"JWT",authConfig:{secretKey:"your-secret-key",algorithm:"HS256",expirationTime:3600,issuer:"api-gateway"},activeFlag:"Y"}:null),h=te(()=>r?{rateLimit:1e3,rateLimitUnit:"minute",burstSize:100,activeFlag:"Y"}:null);return{loading:R,routePredicates:C,routeFilters:D,routeCorsConfig:w,routeAuthConfig:_,routeRateLimitConfig:h,getExecutionTimingText:l=>({1:"请求前",2:"请求后",3:"响应前"})[l]||"未知",refreshData:async()=>{if(r){R.value=!0;try{console.log("Refreshing route detail data for:",r.routeConfigId)}catch(l){console.error("Failed to refresh route detail data:",l)}finally{R.value=!1}}}}}const Za={key:0,class:"route-detail"},el={key:0,class:"metadata-container"},tl={key:0,class:"note-text"},al={class:"config-section"},ll={key:1},ol={class:"config-section"},nl={key:1},rl={class:"config-section"},sl={class:"config-section"},il={class:"config-section"},ul={key:1,class:"empty-state"},dl=ce({__name:"RouteDetailDialog",props:{visible:{type:Boolean},route:{default:null}},emits:["update:visible"],setup(r,{emit:R}){const C=r,D=R,w=te(()=>{var z;return((z=C.route)==null?void 0:z.routeMetadata)&&Object.keys(C.route.routeMetadata).length>0}),_=te(()=>{var z;if(!((z=C.route)!=null&&z.allowedMethods))return["GET"];if(Array.isArray(C.route.allowedMethods))return C.route.allowedMethods;if(typeof C.route.allowedMethods=="string")try{const F=JSON.parse(C.route.allowedMethods);if(Array.isArray(F))return F}catch{return C.route.allowedMethods.split(",").map(F=>F.trim()).filter(F=>F)}return["GET"]}),{routePredicates:h,routeFilters:v,routeCorsConfig:S,routeAuthConfig:l,routeRateLimitConfig:L,getExecutionTimingText:I}=Xa(C.route),N=z=>({0:"精确匹配",1:"前缀匹配",2:"正则匹配"})[z]||"未知",O=z=>({0:"info",1:"success",2:"warning"})[z]||"default",H=z=>z?new Date(z).toLocaleString("zh-CN",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"}):"-",j=()=>{D("update:visible",!1)};return(z,F)=>{const y=se,p=re,b=It,g=De,m=Ce,o=de,i=Tt,x=xt,f=oa,c=et,s=xe,P=Ie,E=Ze,q=$e;return k(),Y(q,{show:C.visible,"onUpdate:show":F[0]||(F[0]=T=>C.visible=T),style:{width:"80%",maxWidth:"1200px",minWidth:"800px"}},{default:t(()=>[e(P,{title:"路由配置详情",bordered:!1,size:"huge",role:"dialog","aria-modal":"true"},{"header-extra":t(()=>[e(p,{quaternary:"",circle:"",onClick:j},{icon:t(()=>[e(y,null,{default:t(()=>[e(a(pt))]),_:1})]),_:1})]),footer:t(()=>[e(o,{justify:"end"},{default:t(()=>[e(p,{onClick:j},{default:t(()=>F[12]||(F[12]=[u("关闭")])),_:1})]),_:1})]),default:t(()=>[z.route?(k(),G("div",Za,[e(E,{type:"line",animated:""},{default:t(()=>[e(c,{name:"basic",tab:"基本信息"},{default:t(()=>[e(i,{column:2,bordered:""},{default:t(()=>[e(b,{label:"路由名称"},{default:t(()=>[u(V(z.route.routeName),1)]),_:1}),e(b,{label:"路由ID"},{default:t(()=>[e(g,{code:""},{default:t(()=>[u(V(z.route.routeConfigId),1)]),_:1})]),_:1}),e(b,{label:"路由路径",span:2},{default:t(()=>[e(g,{code:""},{default:t(()=>[u(V(z.route.routePath),1)]),_:1})]),_:1}),e(b,{label:"匹配类型"},{default:t(()=>[e(m,{type:O(z.route.matchType),size:"small"},{default:t(()=>[u(V(N(z.route.matchType)),1)]),_:1},8,["type"])]),_:1}),e(b,{label:"路由优先级"},{default:t(()=>[e(m,{type:"default",size:"small"},{default:t(()=>[u(V(z.route.routePriority),1)]),_:1})]),_:1}),e(b,{label:"HTTP方法",span:2},{default:t(()=>[e(o,{size:"small"},{default:t(()=>[(k(!0),G(Se,null,Oe(_.value,T=>(k(),Y(m,{key:T,type:"default",size:"small"},{default:t(()=>[u(V(T),1)]),_:2},1024))),128))]),_:1})]),_:1}),e(b,{label:"允许的主机"},{default:t(()=>[u(V(z.route.allowedHosts||"所有主机"),1)]),_:1}),e(b,{label:"状态"},{default:t(()=>[e(m,{type:z.route.activeFlag==="Y"?"success":"error",size:"small"},{default:t(()=>[u(V(z.route.activeFlag==="Y"?"启用":"禁用"),1)]),_:1},8,["type"])]),_:1})]),_:1}),e(x),e(i,{title:"关联信息",column:1,bordered:""},{default:t(()=>[e(b,{label:"关联服务"},{default:t(()=>[z.route.serviceDefinitionId?(k(),Y(g,{key:0,code:""},{default:t(()=>[u(V(z.route.serviceDefinitionId),1)]),_:1})):(k(),Y(g,{key:1,depth:"3"},{default:t(()=>F[1]||(F[1]=[u("未关联")])),_:1}))]),_:1}),e(b,{label:"日志配置"},{default:t(()=>[z.route.logConfigId?(k(),Y(g,{key:0,code:""},{default:t(()=>[u(V(z.route.logConfigId),1)]),_:1})):(k(),Y(g,{key:1,depth:"3"},{default:t(()=>F[2]||(F[2]=[u("使用实例级配置")])),_:1}))]),_:1})]),_:1}),e(x),e(i,{title:"元数据信息",column:1,bordered:""},{default:t(()=>[e(b,{label:"路由元数据"},{default:t(()=>[w.value?(k(),G("div",el,[e(f,{code:JSON.stringify(z.route.routeMetadata,null,2),language:"json","show-line-numbers":""},null,8,["code"])])):(k(),Y(g,{key:1,depth:"3"},{default:t(()=>F[3]||(F[3]=[u("无元数据")])),_:1}))]),_:1}),e(b,{label:"备注信息"},{default:t(()=>[z.route.noteText?(k(),G("div",tl,V(z.route.noteText),1)):(k(),Y(g,{key:1,depth:"3"},{default:t(()=>F[4]||(F[4]=[u("无备注")])),_:1}))]),_:1})]),_:1}),e(x),e(i,{title:"系统信息",column:2,bordered:""},{default:t(()=>[e(b,{label:"创建时间"},{default:t(()=>[u(V(H(z.route.addTime)),1)]),_:1}),e(b,{label:"创建人"},{default:t(()=>[u(V(z.route.addWho),1)]),_:1}),e(b,{label:"更新时间"},{default:t(()=>[u(V(H(z.route.editTime)),1)]),_:1}),e(b,{label:"更新人"},{default:t(()=>[u(V(z.route.editWho),1)]),_:1}),e(b,{label:"版本号"},{default:t(()=>[e(m,{type:"info",size:"small"},{default:t(()=>[u("v"+V(z.route.currentVersion),1)]),_:1})]),_:1}),e(b,{label:"操作序列"},{default:t(()=>[e(g,{code:""},{default:t(()=>[u(V(z.route.oprSeqFlag),1)]),_:1})]),_:1})]),_:1})]),_:1}),e(c,{name:"predicates",tab:"断言组配置"},{default:t(()=>[d("div",al,[a(h).length?(k(),G("div",ll,[(k(!0),G(Se,null,Oe(a(h),(T,A)=>(k(),Y(P,{key:A,title:`断言组 ${A+1}`,size:"small",style:{"margin-bottom":"16px"}},{default:t(()=>[e(i,{column:2,size:"small"},{default:t(()=>[e(b,{label:"断言类型"},{default:t(()=>[e(m,{type:"primary",size:"small"},{default:t(()=>[u(V(T.predicateType),1)]),_:2},1024)]),_:2},1024),e(b,{label:"状态"},{default:t(()=>[e(m,{type:T.activeFlag==="Y"?"success":"default",size:"small"},{default:t(()=>[u(V(T.activeFlag==="Y"?"启用":"禁用"),1)]),_:2},1032,["type"])]),_:2},1024),e(b,{label:"配置参数",span:2},{default:t(()=>[T.predicateConfig?(k(),Y(f,{key:0,code:JSON.stringify(T.predicateConfig,null,2),language:"json"},null,8,["code"])):(k(),Y(g,{key:1,depth:"3"},{default:t(()=>F[6]||(F[6]=[u("无配置")])),_:1}))]),_:2},1024)]),_:2},1024)]),_:2},1032,["title"]))),128))])):(k(),Y(s,{key:0,description:"暂无断言组配置"},{extra:t(()=>[e(g,{depth:"3"},{default:t(()=>F[5]||(F[5]=[u(" 断言组用于定义路由匹配的额外条件，如请求头、参数、时间等 ")])),_:1})]),_:1}))])]),_:1}),e(c,{name:"filters",tab:"过滤器配置"},{default:t(()=>[d("div",ol,[a(v).length?(k(),G("div",nl,[(k(!0),G(Se,null,Oe(a(v),(T,A)=>(k(),Y(P,{key:A,title:`过滤器 ${A+1}`,size:"small",style:{"margin-bottom":"16px"}},{default:t(()=>[e(i,{column:2,size:"small"},{default:t(()=>[e(b,{label:"过滤器类型"},{default:t(()=>[e(m,{type:"info",size:"small"},{default:t(()=>[u(V(T.filterType),1)]),_:2},1024)]),_:2},1024),e(b,{label:"执行时机"},{default:t(()=>[e(m,{type:"warning",size:"small"},{default:t(()=>[u(V(a(I)(T.executionTiming)),1)]),_:2},1024)]),_:2},1024),e(b,{label:"优先级"},{default:t(()=>[u(V(T.filterPriority),1)]),_:2},1024),e(b,{label:"状态"},{default:t(()=>[e(m,{type:T.activeFlag==="Y"?"success":"default",size:"small"},{default:t(()=>[u(V(T.activeFlag==="Y"?"启用":"禁用"),1)]),_:2},1032,["type"])]),_:2},1024),e(b,{label:"配置参数",span:2},{default:t(()=>[T.filterConfig?(k(),Y(f,{key:0,code:JSON.stringify(T.filterConfig,null,2),language:"json"},null,8,["code"])):(k(),Y(g,{key:1,depth:"3"},{default:t(()=>F[8]||(F[8]=[u("无配置")])),_:1}))]),_:2},1024)]),_:2},1024)]),_:2},1032,["title"]))),128))])):(k(),Y(s,{key:0,description:"暂无过滤器配置"},{extra:t(()=>[e(g,{depth:"3"},{default:t(()=>F[7]||(F[7]=[u(" 过滤器用于对请求和响应进行处理，如添加请求头、重写路径等 ")])),_:1})]),_:1}))])]),_:1}),e(c,{name:"cors",tab:"CORS配置"},{default:t(()=>[d("div",rl,[a(S)?(k(),Y(Nt,{key:1,"model-value":a(S),readonly:!0,"onUpdate:modelValue":()=>{}},null,8,["model-value"])):(k(),Y(s,{key:0,description:"暂无CORS配置"},{extra:t(()=>[e(g,{depth:"3"},{default:t(()=>F[9]||(F[9]=[u(" CORS配置用于处理跨域请求，配置允许的源、方法、头部等 ")])),_:1})]),_:1}))])]),_:1}),e(c,{name:"auth",tab:"认证配置"},{default:t(()=>[d("div",sl,[a(l)?(k(),Y(Pt,{key:1,"model-value":a(l),readonly:!0,"onUpdate:modelValue":()=>{}},null,8,["model-value"])):(k(),Y(s,{key:0,description:"暂无认证配置"},{extra:t(()=>[e(g,{depth:"3"},{default:t(()=>F[10]||(F[10]=[u(" 认证配置用于设置路由的身份验证方式，如JWT、OAuth等 ")])),_:1})]),_:1}))])]),_:1}),e(c,{name:"rateLimit",tab:"限流配置"},{default:t(()=>[d("div",il,[a(L)?(k(),Y(At,{key:1,"model-value":a(L),readonly:!0,"onUpdate:modelValue":()=>{}},null,8,["model-value"])):(k(),Y(s,{key:0,description:"暂无限流配置"},{extra:t(()=>[e(g,{depth:"3"},{default:t(()=>F[11]||(F[11]=[u(" 限流配置用于控制请求频率，防止系统过载 ")])),_:1})]),_:1}))])]),_:1})]),_:1})])):(k(),G("div",ul,[e(s,{description:"暂无数据"})]))]),_:1})]),_:1},8,["show"])}}}),cl=ge(dl,[["__scopeId","data-v-6704ba44"]]),gt=[{label:"请求头处理",value:"header",description:"添加、修改或删除HTTP请求头/响应头"},{label:"查询参数处理",value:"query-param",description:"处理URL查询参数"},{label:"请求体处理",value:"body",description:"处理和验证请求体内容"},{label:"前缀剥离",value:"strip",description:"移除请求路径中的指定前缀"},{label:"路径重写",value:"rewrite",description:"重写或转换请求路径"},{label:"HTTP方法控制",value:"method",description:"控制允许的HTTP方法"},{label:"Cookie处理",value:"cookie",description:"处理HTTP Cookie"},{label:"响应处理",value:"response",description:"处理后端响应"}],fl=[{label:"前置处理",value:"pre-routing",description:"在路由匹配前执行"},{label:"后置处理",value:"post-routing",description:"在路由匹配后执行"},{label:"响应前处理",value:"pre-response",description:"在响应返回前执行"}];fl.filter(r=>r.value==="pre-routing");const pl=[{label:"添加",value:"add",description:"添加新的请求头"},{label:"设置",value:"set",description:"设置请求头（替换现有值）"},{label:"移除",value:"remove",description:"移除指定请求头"},{label:"重命名",value:"rename",description:"重命名请求头"}],vl=[{label:"添加",value:"add",description:"添加新的查询参数"},{label:"设置",value:"set",description:"设置查询参数（替换现有值）"},{label:"移除",value:"remove",description:"移除指定查询参数"},{label:"重命名",value:"rename",description:"重命名查询参数"}],gl=[{label:"转换",value:"transform",description:"转换请求体格式"},{label:"验证",value:"validate",description:"验证请求体内容"},{label:"修改",value:"modify",description:"修改请求体字段"},{label:"过滤",value:"filter",description:"过滤请求体字段"}],ml=[{label:"添加",value:"add",description:"添加新的Cookie"},{label:"移除",value:"remove",description:"移除指定Cookie"},{label:"修改",value:"modify",description:"修改Cookie值"},{label:"验证",value:"validate",description:"验证Cookie格式"},{label:"过滤",value:"filter",description:"过滤Cookie内容"}],_l=[{label:"允许模式",value:"allow",description:"只允许指定的HTTP方法"},{label:"拒绝模式",value:"deny",description:"拒绝指定的HTTP方法"}],yl=[{label:"简单替换",value:"simple",description:"直接替换路径中的特定部分"},{label:"正则替换",value:"regex",description:"使用正则表达式匹配和替换路径"}],bl=[{label:"添加响应头",value:"add_headers",description:"添加HTTP响应头"},{label:"修改响应体",value:"modify_body",description:"修改响应体内容"},{label:"设置状态码",value:"set_status",description:"设置HTTP状态码"},{label:"过滤响应头",value:"filter_headers",description:"过滤响应头内容"},{label:"转换响应体",value:"transform_body",description:"转换响应体格式"},{label:"验证响应",value:"validate_response",description:"验证响应数据"}],hl=["GET","POST","PUT","DELETE","PATCH","HEAD","OPTIONS"],Cl=["application/json","application/xml","text/plain","text/html","application/x-www-form-urlencoded","multipart/form-data"],wl={class:"route-filter-list"},Tl=ce({__name:"RouteFilterList",props:{filters:{},loading:{type:Boolean,default:!1}},emits:["edit","delete","toggle-status","move-up","move-down"],setup(r,{emit:R}){const C=r,D=R,w=dt(),_=$(),h=$({page:1,pageSize:10,showSizePicker:!0,pageSizes:[10,20,50],showQuickJumper:!0,prefix:O=>`共 ${O.itemCount} 条`}),v=O=>{const H=gt.find(j=>j.value===O);return(H==null?void 0:H.label)||O},S=O=>({header:"primary","query-param":"info",body:"warning",strip:"success",rewrite:"success",method:"error",cookie:"default",response:"info"})[O]||"default",l=O=>({"pre-routing":"前置处理","post-routing":"后置处理","pre-response":"响应前处理"})[O]||O,L=O=>({"pre-routing":"success","post-routing":"info","pre-response":"warning"})[O]||"default",I=te(()=>[{title:"执行顺序",key:"filterOrder",width:100,render:(O,H)=>U(de,{align:"center"},{default:()=>[U("span",{style:"font-weight: bold; color: #0066cc;"},O.filterOrder),U(de,{size:4},{default:()=>[U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"tiny",tertiary:!0,circle:!0,disabled:H===0,onClick:()=>D("move-up",O)},{icon:()=>U(se,null,{default:()=>U(ot)})}),default:()=>"向上移动"}),U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"tiny",tertiary:!0,circle:!0,disabled:H===C.filters.length-1,onClick:()=>D("move-down",O)},{icon:()=>U(se,null,{default:()=>U(nt)})}),default:()=>"向下移动"})]})]})},{title:"过滤器名称",key:"filterName",width:200,ellipsis:{tooltip:!0}},{title:"类型",key:"filterType",width:140,render:O=>U(Ce,{type:S(O.filterType),size:"small"},{default:()=>v(O.filterType)})},{title:"执行时机",key:"filterAction",width:120,render:O=>U(Ce,{type:L(O.filterAction),size:"small"},{default:()=>l(O.filterAction)})},{title:"状态",key:"activeFlag",width:80,render:O=>U(Je,{value:O.activeFlag==="Y",onUpdateValue:()=>D("toggle-status",O)})},{title:"描述",key:"filterDesc",ellipsis:{tooltip:!0},render:O=>O.filterDesc||"-"},{title:"创建时间",key:"addTime",width:160,render:O=>O.addTime?new Date(O.addTime).toLocaleString():"-"},{title:"操作",key:"actions",width:120,fixed:"right",render:O=>U(de,{size:8},{default:()=>[U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"small",type:"primary",secondary:!0,onClick:()=>D("edit",O)},{icon:()=>U(se,null,{default:()=>U(tt)})}),default:()=>"编辑过滤器"}),U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"small",type:"error",secondary:!0,onClick:()=>N(O)},{icon:()=>U(se,null,{default:()=>U(Le)})}),default:()=>"删除过滤器"})]})}]),N=O=>{w.warning({title:"确认删除",content:`确定要删除过滤器"${O.filterName}"吗？此操作不可恢复。`,positiveText:"删除",negativeText:"取消",onPositiveClick:()=>{D("delete",O)}})};return(O,H)=>(k(),G("div",wl,[e(a(at),{ref_key:"dataTableRef",ref:_,columns:I.value,data:O.filters,pagination:h.value,loading:O.loading,"row-key":j=>j.filterConfigId,"scroll-x":1200,striped:"",size:"small"},{empty:t(()=>[e(a(xe),{description:"暂无路由过滤器配置"})]),_:1},8,["columns","data","pagination","loading","row-key"])]))}}),Il=ge(Tl,[["__scopeId","data-v-32798a9e"]]);var We=(r=>(r[r.EXACT=0]="EXACT",r[r.PREFIX=1]="PREFIX",r[r.REGEX=2]="REGEX",r))(We||{}),Z=(r=>(r.PATH="PATH",r.HEADER="HEADER",r.QUERY="QUERY",r.COOKIE="COOKIE",r.IP="IP",r))(Z||{}),K=(r=>(r.EQUAL="EQUAL",r.NOT_EQUAL="NOT_EQUAL",r.CONTAINS="CONTAINS",r.NOT_CONTAINS="NOT_CONTAINS",r.MATCHES="MATCHES",r.NOT_MATCHES="NOT_MATCHES",r.STARTS_WITH="STARTS_WITH",r.ENDS_WITH="ENDS_WITH",r.IN="IN",r.NOT_IN="NOT_IN",r))(K||{});function xl(r={}){const R=we(),C=$(),D=$(!1),w=$({assertionName:"",assertionType:Z.HEADER,assertionOperator:K.EQUAL,fieldName:"",expectedValue:"",patternValue:"",caseSensitive:"Y",assertionOrder:100,isRequired:"Y",assertionDesc:"",activeFlag:"Y",noteText:""}),_=[{label:"路径匹配",value:Z.PATH},{label:"请求头",value:Z.HEADER},{label:"查询参数",value:Z.QUERY},{label:"Cookie",value:Z.COOKIE},{label:"IP地址",value:Z.IP}],h=te(()=>{const g=[{label:"等于",value:K.EQUAL},{label:"不等于",value:K.NOT_EQUAL},{label:"包含",value:K.CONTAINS},{label:"不包含",value:K.NOT_CONTAINS},{label:"正则匹配",value:K.MATCHES},{label:"正则不匹配",value:K.NOT_MATCHES},{label:"开头匹配",value:K.STARTS_WITH},{label:"结尾匹配",value:K.ENDS_WITH}];return w.value.assertionType===Z.IP?[{label:"等于",value:K.EQUAL},{label:"不等于",value:K.NOT_EQUAL},{label:"在列表中",value:K.IN},{label:"不在列表中",value:K.NOT_IN},{label:"正则匹配",value:K.MATCHES}]:g}),v=te(()=>[Z.HEADER,Z.QUERY,Z.COOKIE].includes(w.value.assertionType)),S=te(()=>[K.EQUAL,K.NOT_EQUAL,K.CONTAINS,K.NOT_CONTAINS,K.STARTS_WITH,K.ENDS_WITH,K.IN,K.NOT_IN].includes(w.value.assertionOperator)),l=te(()=>[K.MATCHES,K.NOT_MATCHES].includes(w.value.assertionOperator)),L=te(()=>w.value.assertionType!==Z.IP),I=te(()=>{var i;const g=w.value.assertionType,m=w.value.assertionOperator;return((i={[Z.HEADER]:{[K.EQUAL]:{title:"请求头等值匹配示例",content:`字段名称: Authorization
期望值: Bearer token123
说明: 检查Authorization头是否等于"Bearer token123"`},[K.MATCHES]:{title:"请求头正则匹配示例",content:`字段名称: User-Agent
匹配模式: ^Mozilla.*Chrome.*$
说明: 检查User-Agent头是否匹配Chrome浏览器的模式`},[K.CONTAINS]:{title:"请求头包含匹配示例",content:`字段名称: Accept
期望值: application/json
说明: 检查Accept头是否包含"application/json"`}},[Z.QUERY]:{[K.EQUAL]:{title:"查询参数等值匹配示例",content:`字段名称: version
期望值: v1
说明: 检查URL查询参数version是否等于"v1"`},[K.IN]:{title:"查询参数列表匹配示例",content:`字段名称: type
期望值: user,admin,guest
说明: 检查type参数值是否在指定列表中（逗号分隔）`}},[Z.COOKIE]:{[K.EQUAL]:{title:"Cookie等值匹配示例",content:`字段名称: session_id
期望值: abc123
说明: 检查Cookie中session_id是否等于"abc123"`},[K.MATCHES]:{title:"Cookie正则匹配示例",content:`字段名称: user_role
匹配模式: ^(admin|user)$
说明: 检查user_role Cookie值是否为admin或user`}},[Z.PATH]:{[K.MATCHES]:{title:"路径正则匹配示例",content:`匹配模式: ^/api/v[1-9]/users/\\d+$
说明: 匹配类似"/api/v1/users/123"的路径格式`},[K.STARTS_WITH]:{title:"路径前缀匹配示例",content:`期望值: /api/admin
说明: 匹配所有以"/api/admin"开头的路径`}},[Z.IP]:{[K.EQUAL]:{title:"IP地址等值匹配示例",content:`期望值: 192.168.1.100
说明: 只允许特定IP地址访问`},[K.IN]:{title:"IP地址列表匹配示例",content:`期望值: 192.168.1.100,10.0.0.1,172.16.0.1
说明: 允许指定IP列表中的地址访问（逗号分隔）`},[K.MATCHES]:{title:"IP地址正则匹配示例",content:`匹配模式: ^192\\.168\\.1\\..+$
说明: 匹配192.168.1.x网段的所有IP地址`}}}[g])==null?void 0:i[m])||null}),N={assertionName:[{required:!0,message:"请输入断言名称",trigger:"blur"},{min:2,max:100,message:"断言名称长度应在2-100字符之间",trigger:"blur"}],assertionType:[{required:!0,message:"请选择断言类型",trigger:"change"}],assertionOperator:[{required:!0,message:"请选择操作符",trigger:"change"}],fieldName:[{required:!0,validator:(g,m)=>v.value&&!(m!=null&&m.trim())?new Error("请输入字段名称"):!0,trigger:"blur"}],expectedValue:[{required:!0,validator:(g,m)=>S.value&&!(m!=null&&m.trim())?new Error("请输入期望值"):!0,trigger:"blur"}],patternValue:[{required:!0,validator:(g,m)=>{if(l.value&&!(m!=null&&m.trim()))return new Error("请输入匹配模式");if(l.value&&(m!=null&&m.trim()))try{new RegExp(m.trim())}catch{return new Error("请输入有效的正则表达式")}return!0},trigger:"blur"}],assertionOrder:[{required:!0,type:"number",message:"请输入执行顺序",trigger:"blur"},{type:"number",min:0,max:9999,message:"执行顺序应在0-9999之间",trigger:"blur"}]},O=()=>({[Z.HEADER]:"请输入请求头名称，如：Authorization",[Z.QUERY]:"请输入查询参数名称，如：version",[Z.COOKIE]:"请输入Cookie名称，如：session_id"})[w.value.assertionType]||"请输入字段名称",H=()=>{const g=w.value.assertionType,m=w.value.assertionOperator;return m===K.IN||m===K.NOT_IN?"请输入值列表，用逗号分隔，如：value1,value2,value3":{[Z.HEADER]:"请输入期望的请求头值",[Z.QUERY]:"请输入期望的查询参数值",[Z.COOKIE]:"请输入期望的Cookie值",[Z.PATH]:"请输入期望的路径值",[Z.IP]:"请输入IP地址，如：192.168.1.100"}[g]||"请输入期望值"},j=g=>{w.value.fieldName="",w.value.expectedValue="",w.value.patternValue="",g===Z.IP?w.value.assertionOperator=K.EQUAL:g===Z.PATH?w.value.assertionOperator=K.MATCHES:w.value.assertionOperator=K.EQUAL},z=g=>{w.value.expectedValue="",w.value.patternValue=""},F=()=>{var g;w.value={assertionName:"",assertionType:Z.HEADER,assertionOperator:K.EQUAL,fieldName:"",expectedValue:"",patternValue:"",caseSensitive:"Y",assertionOrder:100,isRequired:"Y",assertionDesc:"",activeFlag:"Y",noteText:""},(g=C.value)==null||g.restoreValidation()};return{formRef:C,saving:D,formData:w,assertionTypeOptions:_,operatorOptions:h,needsFieldName:v,needsExpectedValue:S,needsPatternValue:l,supportsCaseSensitive:L,configExample:I,formRules:N,getFieldNamePlaceholder:O,getExpectedValuePlaceholder:H,handleAssertionTypeChange:j,handleOperatorChange:z,resetForm:F,initializeForm:g=>{g?w.value={assertionName:g.assertionName,assertionType:g.assertionType,assertionOperator:g.assertionOperator,fieldName:g.fieldName||"",expectedValue:g.expectedValue||"",patternValue:g.patternValue||"",caseSensitive:g.caseSensitive,assertionOrder:g.assertionOrder,isRequired:g.isRequired,assertionDesc:g.assertionDesc||"",activeFlag:g.activeFlag,noteText:g.noteText||""}:F()},handleSave:async()=>{var g;try{await((g=C.value)==null?void 0:g.validate()),D.value=!0,r.onSave&&await r.onSave({...w.value})}catch(m){console.error("表单验证失败:",m),R.error("请检查表单输入")}finally{D.value=!1}},handleDialogShow:g=>{g&&ye(()=>{var m;(m=C.value)==null||m.restoreValidation()})}}}const kl={class:"assertion-dialog-content"},Rl={style:{"margin-top":"8px"}},Sl={style:{margin:"0","font-size":"12px","white-space":"pre-wrap"}},Ol=ce({__name:"RouteAssertionDialog",props:{show:{type:Boolean},assertionData:{},routeConfigId:{}},emits:["update:show","save"],setup(r,{emit:R}){const C=r,D=R,{formRef:w,saving:_,formData:h,assertionTypeOptions:v,operatorOptions:S,needsFieldName:l,needsExpectedValue:L,needsPatternValue:I,supportsCaseSensitive:N,configExample:O,formRules:H,getFieldNamePlaceholder:j,getExpectedValuePlaceholder:z,handleAssertionTypeChange:F,handleOperatorChange:y,initializeForm:p,handleSave:b,handleDialogShow:g}=xl({onSave:async c=>{D("save",c)}}),m=te({get:()=>C.show,set:c=>D("update:show",c)}),o=te(()=>{var c;return!!((c=C.assertionData)!=null&&c.routeAssertionId)}),i=te(()=>o.value?"编辑路由断言":"新建路由断言"),x=()=>{m.value=!1},f=async()=>{await b(),_.value||(m.value=!1)};return fe(()=>C.assertionData,c=>{p(c)},{immediate:!0}),fe(()=>C.show,c=>{g(c)}),(c,s)=>{const P=Ee,E=Ae,q=Me,T=lt,A=ta,B=ea,n=Ie,J=se,W=ve,ue=Fe,oe=Ye,ie=re,me=de,le=$e;return k(),Y(le,{show:m.value,"onUpdate:show":s[12]||(s[12]=X=>m.value=X),preset:"dialog",title:i.value,style:{width:"800px"},"mask-closable":!1,"close-on-esc":!1},{action:t(()=>[e(me,null,{default:t(()=>[e(ie,{onClick:x},{default:t(()=>s[20]||(s[20]=[u("取消")])),_:1}),e(ie,{type:"primary",onClick:f,loading:a(_)},{default:t(()=>[u(V(o.value?"更新":"创建"),1)]),_:1},8,["loading"])]),_:1})]),default:t(()=>[d("div",kl,[e(oe,{ref_key:"formRef",ref:w,model:a(h),rules:a(H),"label-placement":"left","label-width":"120px","require-mark-placement":"right-hanging"},{default:t(()=>[e(n,{title:"基础信息",size:"small",style:{"margin-bottom":"16px"}},{default:t(()=>[e(E,{label:"断言名称",path:"assertionName"},{default:t(()=>[e(P,{value:a(h).assertionName,"onUpdate:value":s[0]||(s[0]=X=>a(h).assertionName=X),placeholder:"请输入断言名称",maxlength:"100","show-count":""},null,8,["value"])]),_:1}),e(E,{label:"断言类型",path:"assertionType"},{default:t(()=>[e(q,{value:a(h).assertionType,"onUpdate:value":[s[1]||(s[1]=X=>a(h).assertionType=X),a(F)],options:a(v),placeholder:"请选择断言类型"},null,8,["value","options","onUpdate:value"])]),_:1}),e(E,{label:"操作符",path:"assertionOperator"},{default:t(()=>[e(q,{value:a(h).assertionOperator,"onUpdate:value":[s[2]||(s[2]=X=>a(h).assertionOperator=X),a(y)],options:a(S),placeholder:"请选择操作符"},null,8,["value","options","onUpdate:value"])]),_:1}),e(E,{label:"执行顺序",path:"assertionOrder"},{default:t(()=>[e(T,{value:a(h).assertionOrder,"onUpdate:value":s[3]||(s[3]=X=>a(h).assertionOrder=X),min:0,max:9999,placeholder:"执行顺序",style:{width:"100%"}},null,8,["value"])]),_:1}),e(E,{label:"是否必须匹配",path:"isRequired"},{default:t(()=>[e(B,{value:a(h).isRequired,"onUpdate:value":s[4]||(s[4]=X=>a(h).isRequired=X)},{default:t(()=>[e(A,{value:"Y"},{default:t(()=>s[13]||(s[13]=[u("必须匹配")])),_:1}),e(A,{value:"N"},{default:t(()=>s[14]||(s[14]=[u("可选匹配")])),_:1})]),_:1},8,["value"])]),_:1})]),_:1}),e(n,{title:"断言配置",size:"small",style:{"margin-bottom":"16px"}},{default:t(()=>[a(l)?(k(),Y(E,{key:0,label:"字段名称",path:"fieldName"},{default:t(()=>[e(P,{value:a(h).fieldName,"onUpdate:value":s[5]||(s[5]=X=>a(h).fieldName=X),placeholder:a(j)(),maxlength:"100"},null,8,["value","placeholder"])]),_:1})):ne("",!0),a(L)?(k(),Y(E,{key:1,label:"期望值",path:"expectedValue"},{default:t(()=>[e(P,{value:a(h).expectedValue,"onUpdate:value":s[6]||(s[6]=X=>a(h).expectedValue=X),type:"textarea",placeholder:a(z)(),autosize:{minRows:2,maxRows:4},maxlength:"500","show-count":""},null,8,["value","placeholder"])]),_:1})):ne("",!0),a(I)?(k(),Y(E,{key:2,label:"匹配模式",path:"patternValue"},{suffix:t(()=>[e(W,{trigger:"hover"},{trigger:t(()=>[e(J,{style:{cursor:"help"}},{default:t(()=>[e(a(ia))]),_:1})]),default:t(()=>[s[15]||(s[15]=u(" 支持正则表达式，如：^Bearer\\s+.+$ 用于匹配Authorization头 "))]),_:1})]),default:t(()=>[e(P,{value:a(h).patternValue,"onUpdate:value":s[7]||(s[7]=X=>a(h).patternValue=X),type:"textarea",placeholder:"请输入正则表达式或匹配模式",autosize:{minRows:2,maxRows:4},maxlength:"500","show-count":""},null,8,["value"])]),_:1})):ne("",!0),a(N)?(k(),Y(E,{key:3,label:"区分大小写",path:"caseSensitive"},{default:t(()=>[e(B,{value:a(h).caseSensitive,"onUpdate:value":s[8]||(s[8]=X=>a(h).caseSensitive=X)},{default:t(()=>[e(A,{value:"Y"},{default:t(()=>s[16]||(s[16]=[u("区分大小写")])),_:1}),e(A,{value:"N"},{default:t(()=>s[17]||(s[17]=[u("不区分大小写")])),_:1})]),_:1},8,["value"])]),_:1})):ne("",!0)]),_:1}),e(n,{title:"高级配置",size:"small",style:{"margin-bottom":"16px"}},{default:t(()=>[e(E,{label:"断言描述",path:"assertionDesc"},{default:t(()=>[e(P,{value:a(h).assertionDesc,"onUpdate:value":s[9]||(s[9]=X=>a(h).assertionDesc=X),type:"textarea",placeholder:"请输入断言描述（可选）",autosize:{minRows:2,maxRows:3},maxlength:"200","show-count":""},null,8,["value"])]),_:1}),e(E,{label:"启用状态",path:"activeFlag"},{default:t(()=>[e(B,{value:a(h).activeFlag,"onUpdate:value":s[10]||(s[10]=X=>a(h).activeFlag=X)},{default:t(()=>[e(A,{value:"Y"},{default:t(()=>s[18]||(s[18]=[u("启用")])),_:1}),e(A,{value:"N"},{default:t(()=>s[19]||(s[19]=[u("禁用")])),_:1})]),_:1},8,["value"])]),_:1}),e(E,{label:"备注信息",path:"noteText"},{default:t(()=>[e(P,{value:a(h).noteText,"onUpdate:value":s[11]||(s[11]=X=>a(h).noteText=X),type:"textarea",placeholder:"请输入备注信息（可选）",autosize:{minRows:2,maxRows:3},maxlength:"500","show-count":""},null,8,["value"])]),_:1})]),_:1}),a(O)?(k(),Y(n,{key:0,title:"配置示例",size:"small"},{default:t(()=>[e(ue,{type:"info"},{header:t(()=>[u(V(a(O).title),1)]),default:t(()=>[d("div",Rl,[d("pre",Sl,V(a(O).content),1)])]),_:1})]),_:1})):ne("",!0)]),_:1},8,["model","rules"])])]),_:1},8,["show","title"])}}}),Nl=ge(Ol,[["__scopeId","data-v-5a2b8e12"]]);function Pl(r){const R=we(),C=ft(),D=$(!1),w=$(!1),_=$(null),h=$([]),v=$(!1),S={success:f=>{!v.value&&C&&!C.isUnmounted&&ye(()=>{v.value||R.success(f)})},error:f=>{!v.value&&C&&!C.isUnmounted&&ye(()=>{v.value||R.error(f)})},warning:f=>{!v.value&&C&&!C.isUnmounted&&ye(()=>{v.value||R.warning(f)})}},l=te(()=>[...h.value].sort((f,c)=>f.assertionOrder-c.assertionOrder)),L=f=>({[Z.PATH]:"primary",[Z.HEADER]:"info",[Z.QUERY]:"success",[Z.COOKIE]:"warning",[Z.IP]:"error"})[f]||"default",I=f=>({[Z.PATH]:"路径",[Z.HEADER]:"请求头",[Z.QUERY]:"查询参数",[Z.COOKIE]:"Cookie",[Z.IP]:"IP地址"})[f]||f,N=f=>({[K.EQUAL]:"等于",[K.NOT_EQUAL]:"不等于",[K.CONTAINS]:"包含",[K.NOT_CONTAINS]:"不包含",[K.MATCHES]:"正则匹配",[K.NOT_MATCHES]:"正则不匹配",[K.STARTS_WITH]:"开头匹配",[K.ENDS_WITH]:"结尾匹配",[K.IN]:"在列表中",[K.NOT_IN]:"不在列表中"})[f]||f,O=f=>{const c=l.value;return c.length>0&&c[0].routeAssertionId===f.routeAssertionId},H=f=>{const c=l.value;return c.length>0&&c[c.length-1].routeAssertionId===f.routeAssertionId},j=async()=>{if(!(!r.routeConfigId||v.value)){D.value=!0;try{const f=await _a(r.routeConfigId,"default");if(v.value)return;if(f!=null&&f.oK&&f.bizData){const c=JSON.parse(f.bizData)||[];h.value=c.sort((s,P)=>s.assertionOrder-P.assertionOrder)}else h.value=[]}catch(f){v.value||(console.error("加载路由断言失败:",f),S.error("加载路由断言失败"),h.value=[])}finally{v.value||(D.value=!1)}}},z=()=>{v.value||(_.value=null,w.value=!0)},F=f=>{v.value||(_.value=f,w.value=!0)},y=async f=>{if(!v.value)try{D.value=!0;const c=await ya(f.routeAssertionId,"default");if(v.value)return;c!=null&&c.oK?(S.success("删除断言成功"),await j()):S.error((c==null?void 0:c.errMsg)||"删除断言失败")}catch(c){v.value||(console.error("删除断言失败:",c),S.error("删除断言失败"))}finally{v.value||(D.value=!1)}},p=async f=>{if(!v.value)try{const c=f.activeFlag==="Y"?"N":"Y",s={...f,activeFlag:c},P=await Qe({tenantId:s.tenantId,routeAssertionId:s.routeAssertionId,routeConfigId:s.routeConfigId,assertionName:s.assertionName,assertionType:s.assertionType,assertionOperator:s.assertionOperator,fieldName:s.fieldName||"",expectedValue:s.expectedValue||"",patternValue:s.patternValue||"",caseSensitive:s.caseSensitive,assertionOrder:s.assertionOrder,isRequired:s.isRequired,assertionDesc:s.assertionDesc||"",activeFlag:c,noteText:s.noteText||""});if(v.value)return;P!=null&&P.oK?(S.success(`断言已${c==="Y"?"启用":"禁用"}`),await j()):S.error((P==null?void 0:P.errMsg)||"更新断言状态失败")}catch(c){v.value||(console.error("更新断言状态失败:",c),S.error("更新断言状态失败"))}},b=async f=>{if(v.value)return;const c=l.value,s=c.findIndex(E=>E.routeAssertionId===f.routeAssertionId);if(s<=0)return;const P=c[s-1];await m(f,P)},g=async f=>{if(v.value)return;const c=l.value,s=c.findIndex(E=>E.routeAssertionId===f.routeAssertionId);if(s>=c.length-1)return;const P=c[s+1];await m(f,P)},m=async(f,c)=>{if(!v.value)try{D.value=!0;const s=f.assertionOrder,P={...f,assertionOrder:c.assertionOrder},E={...c,assertionOrder:s},[q,T]=await Promise.all([Qe({tenantId:P.tenantId,routeAssertionId:P.routeAssertionId,routeConfigId:P.routeConfigId,assertionName:P.assertionName,assertionType:P.assertionType,assertionOperator:P.assertionOperator,fieldName:P.fieldName||"",expectedValue:P.expectedValue||"",patternValue:P.patternValue||"",caseSensitive:P.caseSensitive,assertionOrder:P.assertionOrder,isRequired:P.isRequired,assertionDesc:P.assertionDesc||"",activeFlag:P.activeFlag,noteText:P.noteText||""}),Qe({tenantId:E.tenantId,routeAssertionId:E.routeAssertionId,routeConfigId:E.routeConfigId,assertionName:E.assertionName,assertionType:E.assertionType,assertionOperator:E.assertionOperator,fieldName:E.fieldName||"",expectedValue:E.expectedValue||"",patternValue:E.patternValue||"",caseSensitive:E.caseSensitive,assertionOrder:E.assertionOrder,isRequired:E.isRequired,assertionDesc:E.assertionDesc||"",activeFlag:E.activeFlag,noteText:E.noteText||""})]);if(v.value)return;q!=null&&q.oK&&(T!=null&&T.oK)?(S.success("调整执行顺序成功"),await j()):S.error("调整执行顺序失败")}catch(s){v.value||(console.error("调整执行顺序失败:",s),S.error("调整执行顺序失败"))}finally{v.value||(D.value=!1)}},o=async f=>{var c;if(!v.value)try{const s={tenantId:"default",routeConfigId:r.routeConfigId,assertionName:f.assertionName,assertionType:f.assertionType,assertionOperator:f.assertionOperator,fieldName:f.fieldName||"",expectedValue:f.expectedValue||"",patternValue:f.patternValue||"",caseSensitive:f.caseSensitive,assertionOrder:f.assertionOrder,isRequired:f.isRequired,assertionDesc:f.assertionDesc||"",activeFlag:f.activeFlag,addWho:"admin",editWho:"admin",oprSeqFlag:Date.now().toString(),currentVersion:1,noteText:f.noteText||""};let P;const E=!!((c=_.value)!=null&&c.routeAssertionId);if(E?P=await Qe({...s,routeAssertionId:_.value.routeAssertionId}):P=await ma(s),v.value)return;if(P!=null&&P.oK){const q=E?"编辑":"创建";if(S.success(`${q}断言成功`),w.value=!1,E)await j();else if(P.bizData)try{const T=JSON.parse(P.bizData),A={tenantId:T.tenantId||"default",routeAssertionId:T.routeAssertionId,routeConfigId:T.routeConfigId,assertionName:T.assertionName||f.assertionName,assertionType:f.assertionType,assertionOperator:f.assertionOperator,fieldName:f.fieldName||"",expectedValue:f.expectedValue||"",patternValue:f.patternValue||"",caseSensitive:f.caseSensitive,assertionOrder:f.assertionOrder,isRequired:f.isRequired,assertionDesc:f.assertionDesc||"",activeFlag:f.activeFlag,addTime:new Date().toISOString(),addWho:"admin",editTime:new Date().toISOString(),editWho:"admin",oprSeqFlag:s.oprSeqFlag,currentVersion:1,noteText:f.noteText||""};h.value.push(A),h.value.sort((B,n)=>B.assertionOrder-n.assertionOrder),console.log("新断言已添加到列表:",A)}catch(T){console.error("解析返回数据失败，回退到重新加载:",T),await j()}else console.warn("后端未返回完整数据，回退到重新加载"),await j()}else S.error((P==null?void 0:P.errMsg)||`${E?"编辑":"创建"}断言失败`)}catch(s){v.value||(console.error("保存断言失败:",s),S.error("保存断言失败"))}},i=async()=>{v.value||(await j(),S.success("刷新完成"))},x=async()=>{v.value||await j()};return fe(()=>r.routeConfigId,async f=>{f&&!v.value&&await j()},{immediate:!0}),Ve(()=>{r.routeConfigId&&console.log("路由断言管理器初始化，路由ID:",r.routeConfigId)}),ct(()=>{v.value=!0}),{loading:D,dialogVisible:w,currentAssertion:_,assertions:h,sortedAssertions:l,getAssertionTypeColor:L,getAssertionTypeLabel:I,getOperatorLabel:N,isFirstAssertion:O,isLastAssertion:H,loadRouteAssertions:j,handleCreate:z,handleEdit:F,handleDelete:y,handleToggleStatus:p,handleMoveUp:b,handleMoveDown:g,handleSaveAssertion:o,handleRefresh:i,refresh:x}}const Al={class:"route-assertion-list"},Dl={class:"toolbar"},El={class:"toolbar-left"},Ml={class:"toolbar-right"},Fl={class:"assertion-content"},zl={key:0},Ul={colspan:"10",style:{"text-align":"center",padding:"40px"}},$l={key:1},Yl={colspan:"10",style:{"text-align":"center",padding:"40px"}},Hl={class:"order-column"},Vl={class:"order-number"},Ll={class:"order-controls"},ql={class:"value-display"},Jl=ce({__name:"RouteAssertionList",props:{routeConfigId:{}},setup(r,{expose:R}){const C=r,{loading:D,dialogVisible:w,currentAssertion:_,assertions:h,sortedAssertions:v,getAssertionTypeColor:S,getAssertionTypeLabel:l,getOperatorLabel:L,isFirstAssertion:I,isLastAssertion:N,handleCreate:O,handleEdit:H,handleDelete:j,handleToggleStatus:z,handleMoveUp:F,handleMoveDown:y,handleSaveAssertion:p,handleRefresh:b,refresh:g}=Pl({routeConfigId:C.routeConfigId});return R({refresh:g}),(m,o)=>{const i=De,x=de,f=se,c=re,s=kt,P=xe,E=ve,q=qt,T=Ce,A=ra,B=Fe;return k(),G("div",Al,[d("div",Dl,[d("div",El,[e(x,null,{default:t(()=>[e(i,{strong:""},{default:t(()=>o[1]||(o[1]=[u("路由断言配置")])),_:1}),e(i,{depth:"3"},{default:t(()=>o[2]||(o[2]=[u("定义路由匹配的额外条件，如请求头、参数、Cookie等")])),_:1})]),_:1})]),d("div",Ml,[e(x,null,{default:t(()=>[e(c,{type:"primary",onClick:a(O),disabled:!m.routeConfigId},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(rt))]),_:1})]),default:t(()=>[o[3]||(o[3]=u(" 新建断言 "))]),_:1},8,["onClick","disabled"]),e(c,{onClick:a(b),loading:a(D)},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(Ue))]),_:1})]),default:t(()=>[o[4]||(o[4]=u(" 刷新 "))]),_:1},8,["onClick","loading"])]),_:1})])]),d("div",Fl,[e(A,{bordered:!1,"single-line":!1,striped:""},{default:t(()=>[o[13]||(o[13]=d("thead",null,[d("tr",null,[d("th",{style:{width:"100px"}},"执行顺序"),d("th",{style:{width:"150px"}},"断言名称"),d("th",{style:{width:"180px"}},"描述"),d("th",{style:{width:"100px"}},"断言类型"),d("th",{style:{width:"100px"}},"操作符"),d("th",{style:{width:"120px"}},"字段名称"),d("th",{style:{width:"180px"}},"期望值/模式"),d("th",{style:{width:"80px"}},"必须匹配"),d("th",{style:{width:"80px"}},"状态"),d("th",{style:{width:"180px"}},"操作")])],-1)),d("tbody",null,[a(D)?(k(),G("tr",zl,[d("td",Ul,[e(s,{size:"medium"})])])):a(h).length?(k(!0),G(Se,{key:2},Oe(a(v),n=>(k(),G("tr",{key:n.routeAssertionId},[d("td",null,[d("div",Hl,[d("div",Vl,[e(i,{strong:"",style:{color:"#2080f0"}},{default:t(()=>[u(V(n.assertionOrder),1)]),_:2},1024)]),d("div",Ll,[e(q,{size:"small"},{default:t(()=>[e(E,{trigger:"hover"},{trigger:t(()=>[e(c,{type:"info",size:"small",onClick:J=>a(F)(n),disabled:a(I)(n)},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(ot))]),_:1})]),_:2},1032,["onClick","disabled"])]),default:t(()=>[o[6]||(o[6]=u(" 向上移动 "))]),_:2},1024),e(E,{trigger:"hover"},{trigger:t(()=>[e(c,{type:"info",size:"small",onClick:J=>a(y)(n),disabled:a(N)(n)},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(nt))]),_:1})]),_:2},1032,["onClick","disabled"])]),default:t(()=>[o[7]||(o[7]=u(" 向下移动 "))]),_:2},1024)]),_:2},1024)])])]),d("td",null,[e(i,{strong:""},{default:t(()=>[u(V(n.assertionName),1)]),_:2},1024)]),d("td",null,[n.assertionDesc?(k(),Y(i,{key:0,depth:"2",style:{"font-size":"13px"}},{default:t(()=>[u(V(n.assertionDesc),1)]),_:2},1024)):(k(),Y(i,{key:1,depth:"3",style:{"font-style":"italic"}},{default:t(()=>o[8]||(o[8]=[u("无描述")])),_:1}))]),d("td",null,[e(T,{type:a(S)(n.assertionType)},{default:t(()=>[u(V(a(l)(n.assertionType)),1)]),_:2},1032,["type"])]),d("td",null,[e(T,{type:"info",size:"small"},{default:t(()=>[u(V(a(L)(n.assertionOperator)),1)]),_:2},1024)]),d("td",null,[n.fieldName?(k(),Y(i,{key:0,code:""},{default:t(()=>[u(V(n.fieldName),1)]),_:2},1024)):(k(),Y(i,{key:1,depth:"3"},{default:t(()=>o[9]||(o[9]=[u("-")])),_:1}))]),d("td",null,[d("div",ql,[n.expectedValue?(k(),Y(i,{key:0,code:"",style:{"font-size":"12px"}},{default:t(()=>[u(V(n.expectedValue),1)]),_:2},1024)):n.patternValue?(k(),Y(i,{key:1,code:"",style:{"font-size":"12px"}},{default:t(()=>[u(V(n.patternValue),1)]),_:2},1024)):(k(),Y(i,{key:2,depth:"3"},{default:t(()=>o[10]||(o[10]=[u("-")])),_:1}))])]),d("td",null,[e(T,{type:n.isRequired==="Y"?"error":"default",size:"small"},{default:t(()=>[u(V(n.isRequired==="Y"?"必须":"可选"),1)]),_:2},1032,["type"])]),d("td",null,[e(T,{type:n.activeFlag==="Y"?"success":"default",size:"small"},{default:t(()=>[u(V(n.activeFlag==="Y"?"启用":"禁用"),1)]),_:2},1032,["type"])]),d("td",null,[e(x,{size:"small"},{default:t(()=>[e(E,{trigger:"hover"},{trigger:t(()=>[e(c,{type:"primary",size:"small",onClick:J=>a(H)(n)},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(tt))]),_:1})]),_:2},1032,["onClick"])]),default:t(()=>[o[11]||(o[11]=u(" 编辑断言 "))]),_:2},1024),e(E,{trigger:"hover"},{trigger:t(()=>[e(c,{type:n.activeFlag==="Y"?"warning":"success",size:"small",onClick:J=>a(z)(n)},{icon:t(()=>[e(f,null,{default:t(()=>[n.activeFlag==="Y"?(k(),Y(a(fa),{key:0})):(k(),Y(a(Kt),{key:1}))]),_:2},1024)]),_:2},1032,["type","onClick"])]),default:t(()=>[u(" "+V(n.activeFlag==="Y"?"禁用断言":"启用断言"),1)]),_:2},1024),e(E,{trigger:"hover"},{trigger:t(()=>[e(c,{type:"error",size:"small",onClick:J=>a(j)(n)},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(Le))]),_:1})]),_:2},1032,["onClick"])]),default:t(()=>[o[12]||(o[12]=u(" 删除断言 "))]),_:2},1024)]),_:2},1024)])]))),128)):(k(),G("tr",$l,[d("td",Yl,[e(P,{description:"暂无断言配置"},{extra:t(()=>[e(c,{type:"primary",onClick:a(O),disabled:!m.routeConfigId},{default:t(()=>o[5]||(o[5]=[u(" 新建断言 ")])),_:1},8,["onClick","disabled"])]),_:1})])]))])]),_:1})]),e(B,{type:"info",style:{"margin-top":"16px"}},{header:t(()=>o[14]||(o[14]=[u("路由断言说明")])),default:t(()=>[o[15]||(o[15]=u(" 路由断言用于定义路由匹配的额外条件，支持以下类型： ")),o[16]||(o[16]=d("ul",{style:{margin:"8px 0","padding-left":"20px"}},[d("li",null,[d("strong",null,"PATH"),u("：路径匹配断言，用于复杂路径匹配规则")]),d("li",null,[d("strong",null,"HEADER"),u("：请求头断言，检查特定请求头的值")]),d("li",null,[d("strong",null,"QUERY"),u("：查询参数断言，检查URL查询参数")]),d("li",null,[d("strong",null,"COOKIE"),u("：Cookie断言，检查特定Cookie的值")]),d("li",null,[d("strong",null,"IP"),u("：IP地址断言，基于客户端IP进行匹配")])],-1)),o[17]||(o[17]=u(" 支持的操作符：EQUAL（等于）、CONTAINS（包含）、MATCHES（正则匹配）、STARTS_WITH（开头匹配）等 "))]),_:1}),e(Nl,{show:a(w),"onUpdate:show":o[0]||(o[0]=n=>ze(w)?w.value=n:null),"assertion-data":a(_),"route-config-id":m.routeConfigId,onSave:a(p)},null,8,["show","assertion-data","route-config-id","onSave"])])}}}),jl=ge(Jl,[["__scopeId","data-v-b3ae6b50"]]);function Bl(r={}){const R=we(),C=ft(),D=$(!1),w=$(!1),_=$(!1),h=$(),v=$(null),S={success:T=>{!_.value&&C&&!C.isUnmounted&&ye(()=>{_.value||R.success(T)})},error:T=>{!_.value&&C&&!C.isUnmounted&&ye(()=>{_.value||R.error(T)})}},l=te(()=>!!v.value),L=gt.map(T=>({label:T.label,value:T.value,disabled:!1})),I=Cl.map(T=>({label:T,value:T})),N=be({filterName:"",filterType:"header",filterAction:"pre-routing",filterOrder:1,filterDesc:"",activeFlag:"Y",config:{}}),O=te({get:()=>N.activeFlag==="Y",set:T=>{N.activeFlag=T?"Y":"N"}}),H=be({modifierType:"add",headerName:"",headerValue:"",targetHeaderName:"",isRequestHeader:!0}),j=be({modifierType:"add",paramName:"",paramValue:"",targetParamName:""}),z=be({modifierType:"transform",operation:"",allowedContentTypes:[],maxBodySize:0,filterConfigJson:""}),F=be({prefix:""}),y=be({mode:"simple",from:"",to:""}),p=be({mode:"allow",allowedMethods:[],deniedMethods:[],rejectStatusCode:405,rejectMessage:"Method Not Allowed",caseSensitive:!1}),b=be({operation:"add",cookieName:"",cookieValue:"",applyToResponse:!1,cookieAttributes:{domain:"",path:"",maxAge:0,secure:!1,httpOnly:!1,sameSite:"Lax"}}),g=be({operation:"add_headers",setInRequestPhase:!1,filterConfigJson:"",conditionsJson:""}),m={filterName:[{required:!0,message:"请输入过滤器名称",trigger:"blur"},{min:2,max:50,message:"过滤器名称长度在 2 到 50 个字符",trigger:"blur"}],filterType:[{required:!0,message:"请选择过滤器类型",trigger:"change"}],filterOrder:[{validator:(T,A)=>{if(console.log("filterOrder 验证:",{value:A,type:typeof A}),A==null)return console.log("filterOrder 验证失败: 值为空"),new Error("请输入执行顺序");const B=typeof A=="number"?A:Number(A);return console.log("filterOrder 转换后的数字:",{num:B,isNaN:isNaN(B),isInteger:Number.isInteger(B)}),isNaN(B)?(console.log("filterOrder 验证失败: 不是数字"),new Error("执行顺序必须是数字")):Number.isInteger(B)?B<1||B>1e3?(console.log("filterOrder 验证失败: 超出范围",{num:B}),new Error("执行顺序必须在 1 到 1000 之间")):(console.log("filterOrder 验证通过"),!0):(console.log("filterOrder 验证失败: 不是整数"),new Error("执行顺序必须是整数"))},trigger:["blur","input","change"]}]},o=()=>{_.value||(Object.assign(H,{modifierType:"add",headerName:"",headerValue:"",targetHeaderName:"",isRequestHeader:!0}),Object.assign(j,{modifierType:"add",paramName:"",paramValue:"",targetParamName:""}),Object.assign(z,{modifierType:"transform",operation:"",allowedContentTypes:[],maxBodySize:0,filterConfigJson:""}),F.prefix="",Object.assign(y,{mode:"simple",from:"",to:""}),Object.assign(p,{mode:"allow",allowedMethods:[],deniedMethods:[],rejectStatusCode:405,rejectMessage:"Method Not Allowed",caseSensitive:!1}),Object.assign(b,{operation:"add",cookieName:"",cookieValue:"",applyToResponse:!1,cookieAttributes:{domain:"",path:"",maxAge:0,secure:!1,httpOnly:!1,sameSite:"Lax"}}),Object.assign(g,{operation:"add_headers",setInRequestPhase:!1,filterConfigJson:"",conditionsJson:""}))},i=()=>{var T;_.value||(Object.assign(N,{filterConfigId:void 0,gatewayInstanceId:void 0,routeConfigId:void 0,filterName:"",filterType:"header",filterAction:"pre-routing",filterOrder:1,filterDesc:"",activeFlag:"Y",config:{}}),o(),(T=h.value)==null||T.restoreValidation())},x=(T,A)=>{if(!_.value)switch(o(),T){case"header":A.headerConfig&&Object.assign(H,A.headerConfig);break;case"query-param":A.queryParamConfig&&Object.assign(j,A.queryParamConfig);break;case"body":A.bodyConfig&&Object.assign(z,{...A.bodyConfig,filterConfigJson:JSON.stringify(A.bodyConfig.filterConfig||{},null,2)});break;case"strip":A.stripConfig&&Object.assign(F,A.stripConfig);break;case"rewrite":A.rewriteConfig&&Object.assign(y,A.rewriteConfig);break;case"method":A.methodConfig&&Object.assign(p,A.methodConfig);break;case"cookie":A.cookieConfig&&Object.assign(b,A.cookieConfig);break;case"response":A.responseConfig&&Object.assign(g,{...A.responseConfig,filterConfigJson:JSON.stringify(A.responseConfig.filterConfig||{},null,2),conditionsJson:JSON.stringify(A.responseConfig.conditions||{},null,2)});break}},f=T=>{if(!_.value){Object.assign(N,{filterConfigId:T.filterConfigId,gatewayInstanceId:T.gatewayInstanceId,routeConfigId:T.routeConfigId,filterName:T.filterName,filterType:T.filterType,filterAction:T.filterAction,filterOrder:T.filterOrder,filterDesc:T.filterDesc||"",activeFlag:T.activeFlag});try{const A=JSON.parse(T.filterConfig||"{}");x(T.filterType,A)}catch(A){console.error("解析过滤器配置失败:",A)}}},c=()=>{_.value||o()},s=()=>{const T={};switch(N.filterType){case"header":T.headerConfig={...H};break;case"query-param":T.queryParamConfig={...j};break;case"body":T.bodyConfig={...z,filterConfig:z.filterConfigJson?JSON.parse(z.filterConfigJson):{}},delete T.bodyConfig.filterConfigJson;break;case"strip":T.stripConfig={...F};break;case"rewrite":T.rewriteConfig={...y};break;case"method":T.methodConfig={...p};break;case"cookie":T.cookieConfig={...b};break;case"response":T.responseConfig={...g,filterConfig:g.filterConfigJson?JSON.parse(g.filterConfigJson):{},conditions:g.conditionsJson?JSON.parse(g.conditionsJson):{}},delete T.responseConfig.filterConfigJson,delete T.responseConfig.conditionsJson;break}return T},P=T=>{D.value=!0,v.value=T||null,T?f(T):i()},E=()=>{_.value||(D.value=!1,v.value=null,i())},q=async()=>{var T,A;if(!_.value)try{console.log("开始表单验证，当前formData:",N),await((T=h.value)==null?void 0:T.validate()),console.log("表单验证通过"),w.value=!0;const B=s(),n={...N,config:B};console.log("准备保存数据:",n),(A=r.onSave)==null||A.call(r,n),E()}catch(B){console.error("保存失败:",B),_.value||S.error("请检查表单填写是否正确")}finally{_.value||(w.value=!1)}};return ct(()=>{_.value=!0}),{visible:D,saving:w,formRef:h,isEdit:l,formData:N,formRules:m,activeFlagValue:O,headerConfig:H,queryParamConfig:j,bodyConfig:z,stripConfig:F,rewriteConfig:y,methodConfig:p,cookieConfig:b,responseConfig:g,filterTypeOptions:L,contentTypeOptions:I,HEADER_MODIFIER_OPTIONS:pl,QUERY_PARAM_MODIFIER_OPTIONS:vl,BODY_MODIFIER_OPTIONS:gl,COOKIE_OPERATION_OPTIONS:ml,METHOD_FILTER_MODE_OPTIONS:_l,PATH_REWRITE_MODE_OPTIONS:yl,RESPONSE_OPERATION_OPTIONS:bl,HTTP_METHODS:hl,openDialog:P,closeDialog:E,handleSave:q,handleFilterTypeChange:c}}const Kl={key:0},Ql={key:1},Gl={key:2},Wl={key:3},Xl={key:4},Zl={key:5},eo={key:6},to={key:7},ao={key:8},lo=ce({__name:"FilterConfigDialog",props:{show:{type:Boolean,default:!1},filterData:{default:null}},emits:["update:show","save"],setup(r,{expose:R,emit:C}){const D=r,w=C,{visible:_,saving:h,formRef:v,isEdit:S,formData:l,formRules:L,activeFlagValue:I,headerConfig:N,queryParamConfig:O,bodyConfig:H,stripConfig:j,rewriteConfig:z,methodConfig:F,cookieConfig:y,responseConfig:p,filterTypeOptions:b,contentTypeOptions:g,HEADER_MODIFIER_OPTIONS:m,QUERY_PARAM_MODIFIER_OPTIONS:o,BODY_MODIFIER_OPTIONS:i,COOKIE_OPERATION_OPTIONS:x,METHOD_FILTER_MODE_OPTIONS:f,PATH_REWRITE_MODE_OPTIONS:c,RESPONSE_OPERATION_OPTIONS:s,HTTP_METHODS:P,openDialog:E,closeDialog:q,handleSave:T,handleFilterTypeChange:A}=Bl({onSave:B=>w("save",B)});return fe(()=>D.show,B=>{B?E(D.filterData||void 0):q()}),fe(_,B=>{w("update:show",B)}),R({openDialog:E,closeDialog:q}),(B,n)=>{const J=Ee,W=vt,ue=lt,oe=qe,ie=Me,me=Je,le=Ae,X=de,ee=Ot,ae=St,Q=Ie,he=xe,Te=Ye,ke=re,Be=$e;return k(),Y(Be,{show:a(_),"onUpdate:show":n[43]||(n[43]=M=>ze(_)?_.value=M:null),"mask-closable":!1,preset:"dialog",title:a(S)?"编辑过滤器":"新建过滤器",style:{width:"900px"}},{action:t(()=>[e(X,null,{default:t(()=>[e(ke,{onClick:a(q)},{default:t(()=>n[48]||(n[48]=[u("取消")])),_:1},8,["onClick"]),e(ke,{type:"primary",loading:a(h),onClick:a(T)},{default:t(()=>[u(V(a(S)?"保存":"创建"),1)]),_:1},8,["loading","onClick"])]),_:1})]),default:t(()=>[e(Te,{ref_key:"formRef",ref:v,model:a(l),rules:a(L),"label-placement":"left","label-width":"120px","require-mark-placement":"right-hanging"},{default:t(()=>[e(oe,{cols:2,"x-gap":16},{default:t(()=>[e(W,{label:"过滤器名称",path:"filterName"},{default:t(()=>[e(J,{value:a(l).filterName,"onUpdate:value":n[0]||(n[0]=M=>a(l).filterName=M),placeholder:"请输入过滤器名称",clearable:""},null,8,["value"])]),_:1}),e(W,{label:"执行顺序",path:"filterOrder"},{default:t(()=>[e(ue,{value:a(l).filterOrder,"onUpdate:value":n[1]||(n[1]=M=>a(l).filterOrder=M),placeholder:"请输入执行顺序",min:1,max:1e3,style:{width:"100%"}},null,8,["value"])]),_:1})]),_:1}),e(oe,{cols:2,"x-gap":16},{default:t(()=>[e(W,{label:"过滤器类型",path:"filterType"},{default:t(()=>[e(ie,{value:a(l).filterType,"onUpdate:value":[n[2]||(n[2]=M=>a(l).filterType=M),a(A)],options:a(b),placeholder:"请选择过滤器类型"},null,8,["value","options","onUpdate:value"])]),_:1}),e(W,{label:"状态",path:"activeFlag"},{default:t(()=>[e(me,{value:a(I),"onUpdate:value":n[3]||(n[3]=M=>ze(I)?I.value=M:null),"checked-value":!0,"unchecked-value":!1},{checked:t(()=>n[44]||(n[44]=[u("启用")])),unchecked:t(()=>n[45]||(n[45]=[u("禁用")])),_:1},8,["value"])]),_:1})]),_:1}),e(le,{label:"描述",path:"filterDesc"},{default:t(()=>[e(J,{value:a(l).filterDesc,"onUpdate:value":n[4]||(n[4]=M=>a(l).filterDesc=M),type:"textarea",placeholder:"请输入过滤器描述",rows:2},null,8,["value"])]),_:1}),e(Q,{title:"过滤器配置",embedded:""},{default:t(()=>[a(l).filterType==="header"?(k(),G("div",Kl,[e(X,{vertical:"",size:"large"},{default:t(()=>[e(oe,{cols:2,"x-gap":16},{default:t(()=>[e(W,{label:"修改类型"},{default:t(()=>[e(ie,{value:a(N).modifierType,"onUpdate:value":n[5]||(n[5]=M=>a(N).modifierType=M),options:a(m),placeholder:"请选择修改类型"},null,8,["value","options"])]),_:1}),e(W,{label:"作用范围"},{default:t(()=>[e(me,{value:a(N).isRequestHeader,"onUpdate:value":n[6]||(n[6]=M=>a(N).isRequestHeader=M),"checked-value":!0,"unchecked-value":!1},{checked:t(()=>n[46]||(n[46]=[u("请求头")])),unchecked:t(()=>n[47]||(n[47]=[u("响应头")])),_:1},8,["value"])]),_:1})]),_:1}),e(le,{label:"Header名称"},{default:t(()=>[e(J,{value:a(N).headerName,"onUpdate:value":n[7]||(n[7]=M=>a(N).headerName=M),placeholder:"请输入Header名称"},null,8,["value"])]),_:1}),a(N).modifierType!=="remove"?(k(),Y(le,{key:0,label:"Header值"},{default:t(()=>[e(J,{value:a(N).headerValue,"onUpdate:value":n[8]||(n[8]=M=>a(N).headerValue=M),placeholder:"请输入Header值"},null,8,["value"])]),_:1})):ne("",!0),a(N).modifierType==="rename"?(k(),Y(le,{key:1,label:"目标Header名称"},{default:t(()=>[e(J,{value:a(N).targetHeaderName,"onUpdate:value":n[9]||(n[9]=M=>a(N).targetHeaderName=M),placeholder:"请输入重命名后的Header名称"},null,8,["value"])]),_:1})):ne("",!0)]),_:1})])):a(l).filterType==="query-param"?(k(),G("div",Ql,[e(X,{vertical:"",size:"large"},{default:t(()=>[e(le,{label:"修改类型"},{default:t(()=>[e(ie,{value:a(O).modifierType,"onUpdate:value":n[10]||(n[10]=M=>a(O).modifierType=M),options:a(o),placeholder:"请选择修改类型"},null,8,["value","options"])]),_:1}),e(le,{label:"参数名称"},{default:t(()=>[e(J,{value:a(O).paramName,"onUpdate:value":n[11]||(n[11]=M=>a(O).paramName=M),placeholder:"请输入参数名称"},null,8,["value"])]),_:1}),a(O).modifierType!=="remove"?(k(),Y(le,{key:0,label:"参数值"},{default:t(()=>[e(J,{value:a(O).paramValue,"onUpdate:value":n[12]||(n[12]=M=>a(O).paramValue=M),placeholder:"请输入参数值"},null,8,["value"])]),_:1})):ne("",!0),a(O).modifierType==="rename"?(k(),Y(le,{key:1,label:"目标参数名称"},{default:t(()=>[e(J,{value:a(O).targetParamName,"onUpdate:value":n[13]||(n[13]=M=>a(O).targetParamName=M),placeholder:"请输入重命名后的参数名称"},null,8,["value"])]),_:1})):ne("",!0)]),_:1})])):a(l).filterType==="body"?(k(),G("div",Gl,[e(X,{vertical:"",size:"large"},{default:t(()=>[e(le,{label:"修改类型"},{default:t(()=>[e(ie,{value:a(H).modifierType,"onUpdate:value":n[14]||(n[14]=M=>a(H).modifierType=M),options:a(i),placeholder:"请选择修改类型"},null,8,["value","options"])]),_:1}),e(le,{label:"操作描述"},{default:t(()=>[e(J,{value:a(H).operation,"onUpdate:value":n[15]||(n[15]=M=>a(H).operation=M),placeholder:"请输入操作描述"},null,8,["value"])]),_:1}),e(le,{label:"允许的内容类型"},{default:t(()=>[e(ie,{value:a(H).allowedContentTypes,"onUpdate:value":n[16]||(n[16]=M=>a(H).allowedContentTypes=M),options:a(g),multiple:"",placeholder:"请选择允许的内容类型"},null,8,["value","options"])]),_:1}),e(le,{label:"最大请求体大小(字节)"},{default:t(()=>[e(ue,{value:a(H).maxBodySize,"onUpdate:value":n[17]||(n[17]=M=>a(H).maxBodySize=M),placeholder:"请输入最大请求体大小",min:0,style:{width:"100%"}},null,8,["value"])]),_:1}),e(le,{label:"过滤器配置"},{default:t(()=>[e(J,{value:a(H).filterConfigJson,"onUpdate:value":n[18]||(n[18]=M=>a(H).filterConfigJson=M),type:"textarea",placeholder:"请输入JSON格式的过滤器配置",rows:4},null,8,["value"])]),_:1})]),_:1})])):a(l).filterType==="strip"?(k(),G("div",Wl,[e(le,{label:"要剥离的前缀"},{default:t(()=>[e(J,{value:a(j).prefix,"onUpdate:value":n[19]||(n[19]=M=>a(j).prefix=M),placeholder:"请输入要剥离的路径前缀，如：/api/v1"},null,8,["value"])]),_:1})])):a(l).filterType==="rewrite"?(k(),G("div",Xl,[e(X,{vertical:"",size:"large"},{default:t(()=>[e(le,{label:"重写模式"},{default:t(()=>[e(ie,{value:a(z).mode,"onUpdate:value":n[20]||(n[20]=M=>a(z).mode=M),options:a(c),placeholder:"请选择重写模式"},null,8,["value","options"])]),_:1}),e(le,{label:"查找内容"},{default:t(()=>[e(J,{value:a(z).from,"onUpdate:value":n[21]||(n[21]=M=>a(z).from=M),placeholder:a(z).mode==="regex"?"请输入正则表达式":"请输入要替换的字符串"},null,8,["value","placeholder"])]),_:1}),e(le,{label:"替换内容"},{default:t(()=>[e(J,{value:a(z).to,"onUpdate:value":n[22]||(n[22]=M=>a(z).to=M),placeholder:"请输入替换后的内容"},null,8,["value"])]),_:1})]),_:1})])):a(l).filterType==="method"?(k(),G("div",Zl,[e(X,{vertical:"",size:"large"},{default:t(()=>[e(le,{label:"过滤模式"},{default:t(()=>[e(ie,{value:a(F).mode,"onUpdate:value":n[23]||(n[23]=M=>a(F).mode=M),options:a(f),placeholder:"请选择过滤模式"},null,8,["value","options"])]),_:1}),a(F).mode==="allow"?(k(),Y(le,{key:0,label:"允许的方法"},{default:t(()=>[e(ae,{value:a(F).allowedMethods,"onUpdate:value":n[24]||(n[24]=M=>a(F).allowedMethods=M)},{default:t(()=>[e(X,null,{default:t(()=>[(k(!0),G(Se,null,Oe(a(P),M=>(k(),Y(ee,{key:M,value:M},{default:t(()=>[u(V(M),1)]),_:2},1032,["value"]))),128))]),_:1})]),_:1},8,["value"])]),_:1})):ne("",!0),a(F).mode==="deny"?(k(),Y(le,{key:1,label:"拒绝的方法"},{default:t(()=>[e(ae,{value:a(F).deniedMethods,"onUpdate:value":n[25]||(n[25]=M=>a(F).deniedMethods=M)},{default:t(()=>[e(X,null,{default:t(()=>[(k(!0),G(Se,null,Oe(a(P),M=>(k(),Y(ee,{key:M,value:M},{default:t(()=>[u(V(M),1)]),_:2},1032,["value"]))),128))]),_:1})]),_:1},8,["value"])]),_:1})):ne("",!0),e(oe,{cols:2,"x-gap":16},{default:t(()=>[e(W,{label:"拒绝时状态码"},{default:t(()=>[e(ue,{value:a(F).rejectStatusCode,"onUpdate:value":n[26]||(n[26]=M=>a(F).rejectStatusCode=M),placeholder:"默认405",min:400,max:599,style:{width:"100%"}},null,8,["value"])]),_:1}),e(W,{label:"区分大小写"},{default:t(()=>[e(me,{value:a(F).caseSensitive,"onUpdate:value":n[27]||(n[27]=M=>a(F).caseSensitive=M),"checked-value":!0,"unchecked-value":!1},null,8,["value"])]),_:1})]),_:1}),e(le,{label:"拒绝时消息"},{default:t(()=>[e(J,{value:a(F).rejectMessage,"onUpdate:value":n[28]||(n[28]=M=>a(F).rejectMessage=M),placeholder:"请输入拒绝时的错误消息"},null,8,["value"])]),_:1})]),_:1})])):a(l).filterType==="cookie"?(k(),G("div",eo,[e(X,{vertical:"",size:"large"},{default:t(()=>[e(oe,{cols:2,"x-gap":16},{default:t(()=>[e(W,{label:"操作类型"},{default:t(()=>[e(ie,{value:a(y).operation,"onUpdate:value":n[29]||(n[29]=M=>a(y).operation=M),options:a(x),placeholder:"请选择操作类型"},null,8,["value","options"])]),_:1}),e(W,{label:"应用到响应"},{default:t(()=>[e(me,{value:a(y).applyToResponse,"onUpdate:value":n[30]||(n[30]=M=>a(y).applyToResponse=M),"checked-value":!0,"unchecked-value":!1},null,8,["value"])]),_:1})]),_:1}),e(le,{label:"Cookie名称"},{default:t(()=>[e(J,{value:a(y).cookieName,"onUpdate:value":n[31]||(n[31]=M=>a(y).cookieName=M),placeholder:"请输入Cookie名称"},null,8,["value"])]),_:1}),a(y).operation!=="remove"?(k(),Y(le,{key:0,label:"Cookie值"},{default:t(()=>[e(J,{value:a(y).cookieValue,"onUpdate:value":n[32]||(n[32]=M=>a(y).cookieValue=M),placeholder:"请输入Cookie值"},null,8,["value"])]),_:1})):ne("",!0),a(y).operation==="add"||a(y).operation==="modify"?(k(),Y(Q,{key:1,title:"Cookie属性",size:"small"},{default:t(()=>[e(oe,{cols:2,"x-gap":16},{default:t(()=>[e(W,{label:"域名"},{default:t(()=>[e(J,{value:a(y).cookieAttributes.domain,"onUpdate:value":n[33]||(n[33]=M=>a(y).cookieAttributes.domain=M),placeholder:"如：.example.com"},null,8,["value"])]),_:1}),e(W,{label:"路径"},{default:t(()=>[e(J,{value:a(y).cookieAttributes.path,"onUpdate:value":n[34]||(n[34]=M=>a(y).cookieAttributes.path=M),placeholder:"如：/"},null,8,["value"])]),_:1})]),_:1}),e(oe,{cols:3,"x-gap":16},{default:t(()=>[e(W,{label:"最大年龄(秒)"},{default:t(()=>[e(ue,{value:a(y).cookieAttributes.maxAge,"onUpdate:value":n[35]||(n[35]=M=>a(y).cookieAttributes.maxAge=M),placeholder:"如：3600",min:0,style:{width:"100%"}},null,8,["value"])]),_:1}),e(W,{label:"安全传输"},{default:t(()=>[e(me,{value:a(y).cookieAttributes.secure,"onUpdate:value":n[36]||(n[36]=M=>a(y).cookieAttributes.secure=M),"checked-value":!0,"unchecked-value":!1},null,8,["value"])]),_:1}),e(W,{label:"仅HTTP"},{default:t(()=>[e(me,{value:a(y).cookieAttributes.httpOnly,"onUpdate:value":n[37]||(n[37]=M=>a(y).cookieAttributes.httpOnly=M),"checked-value":!0,"unchecked-value":!1},null,8,["value"])]),_:1})]),_:1}),e(le,{label:"SameSite"},{default:t(()=>[e(ie,{value:a(y).cookieAttributes.sameSite,"onUpdate:value":n[38]||(n[38]=M=>a(y).cookieAttributes.sameSite=M),options:[{label:"Strict",value:"Strict"},{label:"Lax",value:"Lax"},{label:"None",value:"None"}],placeholder:"请选择SameSite属性"},null,8,["value"])]),_:1})]),_:1})):ne("",!0)]),_:1})])):a(l).filterType==="response"?(k(),G("div",to,[e(X,{vertical:"",size:"large"},{default:t(()=>[e(oe,{cols:2,"x-gap":16},{default:t(()=>[e(W,{label:"操作类型"},{default:t(()=>[e(ie,{value:a(p).operation,"onUpdate:value":n[39]||(n[39]=M=>a(p).operation=M),options:a(s),placeholder:"请选择操作类型"},null,8,["value","options"])]),_:1}),e(W,{label:"请求阶段设置"},{default:t(()=>[e(me,{value:a(p).setInRequestPhase,"onUpdate:value":n[40]||(n[40]=M=>a(p).setInRequestPhase=M),"checked-value":!0,"unchecked-value":!1},null,8,["value"])]),_:1})]),_:1}),e(le,{label:"过滤器配置"},{default:t(()=>[e(J,{value:a(p).filterConfigJson,"onUpdate:value":n[41]||(n[41]=M=>a(p).filterConfigJson=M),type:"textarea",placeholder:"请输入JSON格式的过滤器配置",rows:4},null,8,["value"])]),_:1}),e(le,{label:"条件配置"},{default:t(()=>[e(J,{value:a(p).conditionsJson,"onUpdate:value":n[42]||(n[42]=M=>a(p).conditionsJson=M),type:"textarea",placeholder:"请输入JSON格式的条件配置",rows:3},null,8,["value"])]),_:1})]),_:1})])):(k(),G("div",ao,[e(he,{description:"请先选择过滤器类型"})]))]),_:1})]),_:1},8,["model","rules"])]),_:1},8,["show","title"])}}}),Mt=ge(lo,[["__scopeId","data-v-5aa0a028"]]),je=wt("/gateway/hub0021");function oo(r,R="default"){return je.post("/filterConfigs/byInstance",{gatewayInstanceId:r,tenantId:R})}function no(r,R="default"){return je.post("/filterConfigs/byRoute",{routeConfigId:r,tenantId:R})}function Ft(r){return je.post("/addFilterConfig",r)}function Re(r){return je.post("/editFilterConfig",r)}function zt(r,R="default"){return je.post("/deleteFilterConfig",{filterConfigId:r,tenantId:R})}const ro={key:0},so={class:"config-section"},io={class:"config-section"},uo={class:"config-section"},co={class:"config-section"},fo={class:"config-section"},po={class:"config-section"},vo={class:"filter-toolbar"},go={class:"toolbar-left"},mo={class:"toolbar-right"},_o={key:1},yo=ce({__name:"RouteAdvancedConfigDialog",props:{route:{default:null}},emits:["update:visible"],setup(r,{expose:R,emit:C}){const D=r,w=C,_=we(),h=$(!1),v=$([]),S=$(!1),l=$(!1),L=$(null),I=te(()=>{var c;return((c=D.route)==null?void 0:c.routeConfigId)||""}),N=te(()=>{var c;return((c=D.route)==null?void 0:c.routeName)||"未知路由"}),O=te(()=>{var c;return((c=D.route)==null?void 0:c.gatewayInstanceId)||""}),H=async()=>{if(I.value){S.value=!0;try{const c=await no(I.value);if(c!=null&&c.oK&&c.bizData){const s=JSON.parse(c.bizData)||[];v.value=s.filter(P=>["post-routing","pre-response"].includes(P.filterAction)).sort((P,E)=>P.filterOrder-E.filterOrder)}else v.value=[]}catch(c){console.error("加载路由过滤器失败:",c),_.error("加载路由过滤器失败"),v.value=[]}finally{S.value=!1}}},j=()=>{L.value=null,l.value=!0,ye(()=>{})},z=c=>{L.value=c,l.value=!0},F=async c=>{try{S.value=!0;const s=await zt(c.filterConfigId);s!=null&&s.oK?(_.success("删除过滤器成功"),await H()):_.error((s==null?void 0:s.errMsg)||"删除过滤器失败")}catch(s){console.error("删除过滤器失败:",s),_.error("删除过滤器失败")}finally{S.value=!1}},y=async c=>{try{const s=c.activeFlag==="Y"?"N":"Y",P={...c,activeFlag:s},E=await Re(P);E!=null&&E.oK?(_.success(`过滤器已${s==="Y"?"启用":"禁用"}`),await H()):_.error((E==null?void 0:E.errMsg)||"更新过滤器状态失败")}catch(s){console.error("更新过滤器状态失败:",s),_.error("更新过滤器状态失败")}},p=async c=>{const s=v.value.findIndex(E=>E.filterConfigId===c.filterConfigId);if(s<=0)return;const P=v.value[s-1];await g(c,P)},b=async c=>{const s=v.value.findIndex(E=>E.filterConfigId===c.filterConfigId);if(s>=v.value.length-1)return;const P=v.value[s+1];await g(c,P)},g=async(c,s)=>{try{S.value=!0;const P=c.filterOrder,E={...c,filterOrder:s.filterOrder},q={...s,filterOrder:P},[T,A]=await Promise.all([Re(E),Re(q)]);T!=null&&T.oK&&(A!=null&&A.oK)?(_.success("调整执行顺序成功"),await H()):_.error("调整执行顺序失败")}catch(P){console.error("调整执行顺序失败:",P),_.error("调整执行顺序失败")}finally{S.value=!1}},m=async()=>{await H(),_.success("刷新完成")},o=async c=>{try{const s=c.filterConfigId?c.filterAction:"post-routing",P={tenantId:"default",routeConfigId:I.value,filterName:c.filterName,filterType:c.filterType,filterAction:s,filterOrder:c.filterOrder,filterConfig:JSON.stringify(c.config),filterDesc:c.filterDesc,activeFlag:c.activeFlag,addWho:"admin",editWho:"admin"};let E;c.filterConfigId?E=await Re({...P,filterConfigId:c.filterConfigId}):E=await Ft(P),E!=null&&E.oK?(_.success(`${c.filterConfigId?"编辑":"创建"}过滤器成功`),l.value=!1,await H()):_.error((E==null?void 0:E.errMsg)||`${c.filterConfigId?"编辑":"创建"}过滤器失败`)}catch(s){console.error("保存过滤器失败:",s),_.error("保存过滤器失败")}},i=c=>{if(!c){console.warn("无法打开路由配置管理：缺少路由信息");return}h.value=!0,H()},x=()=>{h.value=!1,w("update:visible",!1),v.value=[],l.value=!1,L.value=null},f=()=>{console.log("配置已变更")};return fe(()=>h.value,c=>{w("update:visible",c)}),fe(()=>D.route,c=>{c&&h.value&&H()}),R({openDialog:i,closeDialog:x}),(c,s)=>{const P=se,E=re,q=De,T=xt,A=de,B=Fe,n=et,J=Ze,W=xe,ue=Ie,oe=$e;return k(),Y(oe,{show:h.value,"onUpdate:show":s[1]||(s[1]=ie=>h.value=ie),style:{width:"90%",maxWidth:"1400px",minWidth:"1000px"}},{default:t(()=>[e(ue,{title:`路由配置管理 - ${N.value}`,bordered:!1,size:"huge",role:"dialog","aria-modal":"true"},{"header-extra":t(()=>[e(E,{quaternary:"",circle:"",onClick:x},{icon:t(()=>[e(P,null,{default:t(()=>[e(a(pt))]),_:1})]),_:1})]),footer:t(()=>[e(A,{justify:"end"},{default:t(()=>[e(E,{onClick:x},{default:t(()=>s[16]||(s[16]=[u("关闭")])),_:1})]),_:1})]),default:t(()=>[I.value?(k(),G("div",ro,[e(B,{type:"info",style:{"margin-bottom":"16px"},"show-icon":!1},{header:t(()=>[e(q,{strong:""},{default:t(()=>s[2]||(s[2]=[u("配置说明")])),_:1})]),default:t(()=>[e(A,null,{default:t(()=>[e(q,{depth:"3"},{default:t(()=>[u("路由ID："+V(I.value),1)]),_:1}),e(T,{vertical:""}),e(q,{depth:"3"},{default:t(()=>[u("网关实例："+V(O.value),1)]),_:1}),e(T,{vertical:""}),e(q,{depth:"3"},{default:t(()=>s[3]||(s[3]=[u("配置级别：路由级（优先级高于实例级配置）")])),_:1})]),_:1})]),_:1}),e(J,{type:"line",animated:""},{default:t(()=>[e(n,{name:"predicates",tab:"断言配置"},{default:t(()=>[d("div",so,[e(jl,{"route-config-id":I.value},null,8,["route-config-id"])])]),_:1}),e(n,{name:"cors",tab:"CORS配置"},{default:t(()=>[d("div",io,[e(Nt,{"route-config-id":I.value,onDataChange:f},null,8,["route-config-id"])])]),_:1}),e(n,{name:"security",tab:"安全设置"},{default:t(()=>[d("div",uo,[e(aa,{"route-config-id":I.value,"gateway-instance-id":O.value},null,8,["route-config-id","gateway-instance-id"]),e(B,{type:"info",style:{"margin-top":"16px"}},{header:t(()=>s[4]||(s[4]=[u("路由安全配置说明")])),default:t(()=>[s[5]||(s[5]=u(" 路由安全配置仅作用于当前路由，支持多种安全策略： ")),s[6]||(s[6]=d("ul",{style:{margin:"8px 0","padding-left":"20px"}},[d("li",null,[d("strong",null,"IP访问控制"),u("：基于客户端IP地址的白名单/黑名单策略")]),d("li",null,[d("strong",null,"域名访问控制"),u("：限制特定域名的访问权限")]),d("li",null,[d("strong",null,"User-Agent过滤"),u("：基于浏览器标识的访问控制")]),d("li",null,[d("strong",null,"API访问控制"),u("：基于API密钥的访问验证")]),d("li",null,"路由级安全配置优先级高于网关实例级配置")],-1)),s[7]||(s[7]=u(" 支持的配置类型：IP_ACCESS、DOMAIN_ACCESS、USER_AGENT_ACCESS、API_ACCESS "))]),_:1})])]),_:1}),e(n,{name:"auth",tab:"认证配置"},{default:t(()=>[d("div",co,[e(Pt,{"route-config-id":I.value,onDataChange:f},null,8,["route-config-id"])])]),_:1}),e(n,{name:"rateLimit",tab:"限流配置"},{default:t(()=>[d("div",fo,[e(At,{"route-config-id":I.value,onDataChange:f},null,8,["route-config-id"])])]),_:1}),e(n,{name:"filters",tab:"过滤器配置"},{default:t(()=>[d("div",po,[d("div",vo,[d("div",go,[e(A,null,{default:t(()=>[e(q,{strong:""},{default:t(()=>s[8]||(s[8]=[u("路由过滤器管理")])),_:1}),e(q,{depth:"3"},{default:t(()=>s[9]||(s[9]=[u("管理作用于当前路由的后置处理过滤器")])),_:1})]),_:1})]),d("div",mo,[e(A,null,{default:t(()=>[e(E,{type:"primary",onClick:j,disabled:!I.value},{icon:t(()=>[e(P,null,{default:t(()=>[e(a(rt))]),_:1})]),default:t(()=>[s[10]||(s[10]=u(" 新建过滤器 "))]),_:1},8,["disabled"]),e(E,{onClick:m,loading:S.value},{icon:t(()=>[e(P,null,{default:t(()=>[e(a(Ue))]),_:1})]),default:t(()=>[s[11]||(s[11]=u(" 刷新 "))]),_:1},8,["loading"])]),_:1})])]),e(Il,{filters:v.value,loading:S.value,onEdit:z,onDelete:F,onToggleStatus:y,onMoveUp:p,onMoveDown:b},null,8,["filters","loading"]),e(B,{type:"info",style:{"margin-top":"16px"}},{header:t(()=>s[12]||(s[12]=[u("路由过滤器说明")])),default:t(()=>[s[13]||(s[13]=u(" 路由过滤器配置仅作用于当前路由，支持多种执行时机： ")),s[14]||(s[14]=d("ul",{style:{margin:"8px 0","padding-left":"20px"}},[d("li",null,[d("strong",null,"后置处理"),u("：在路由匹配后、转发到后端服务前执行")]),d("li",null,[d("strong",null,"响应前处理"),u("：在返回响应给客户端前执行")]),d("li",null,"支持多个过滤器，按执行顺序依次处理"),d("li",null,"路由级过滤器优先级高于全局过滤器")],-1)),s[15]||(s[15]=u(" 支持的过滤器类型：header、query-param、body、strip、rewrite、method、cookie、response "))]),_:1})])]),_:1})]),_:1})])):(k(),G("div",_o,[e(W,{description:"请选择一个路由进行配置管理"})])),e(Mt,{show:l.value,"onUpdate:show":s[0]||(s[0]=ie=>l.value=ie),"filter-data":L.value,onSave:o},null,8,["show","filter-data"])]),_:1},8,["title"])]),_:1},8,["show"])}}}),bo=ge(yo,[["__scopeId","data-v-d83bee2a"]]),ho={class:"route-config-manager"},Co={class:"statistics-cards"},wo={class:"toolbar",style:{display:"flex","justify-content":"space-between","align-items":"center"}},To={class:"toolbar-left"},Io={class:"toolbar-right"},xo=ce({__name:"RouteConfigManager",props:{gatewayInstanceId:{}},setup(r,{expose:R}){const C=r,D=$(),w=$(),{routes:_,loading:h,statistics:v,queryParams:S,matchTypeOptions:l,statusOptions:L,getRoutes:I,deleteRoute:N,batchDeleteRoutes:O,batchToggleRoutes:H,resetQuery:j,total:z}=wa(),{naiveConfig:F,setTotal:y}=Gt({initialPage:S.pageIndex||1,initialPageSize:S.pageSize||20,onPageChange:ae=>{S.pageIndex=ae,I()},onPageSizeChange:(ae,Q)=>{S.pageIndex=ae,S.pageSize=Q,I()}}),{editingRoute:p,viewingRoute:b,showDetailDialog:g,selectedRoutes:m,batchDeleting:o,batchToggling:i,hasSelection:x,handleView:f,handleDialogSuccess:c,handleDelete:s,handleBatchDelete:P,handleBatchEnable:E,handleBatchDisable:q,handleSelectionChange:T,configManagementRoute:A}=Ta({onRefresh:()=>{I()},onAddRoute:async()=>{await I()},findRouteCallback:ae=>_.value.find(Q=>Q.routeConfigId===ae)}),B=()=>{S.pageIndex=1,I()},n=()=>{j(),I()},J=()=>{I()},W=()=>{var ae;(ae=D.value)==null||ae.openDialog(void 0,C.gatewayInstanceId)},ue=ae=>{var Q;(Q=D.value)==null||Q.openDialog(ae,C.gatewayInstanceId)},oe=()=>{P(O)},ie=()=>{E(H)},me=()=>{q(H)},le=ae=>{s(ae,N)},X=ae=>{ae||(A.value=null)},{columns:ee}=Ia({onView:f,onEdit:ue,onDelete:le,onRouteConfig:ae=>{A.value=null,ye(()=>{A.value=ae})}});return fe(()=>C.gatewayInstanceId,ae=>{ae&&(S.gatewayInstanceId=ae,I())},{immediate:!0}),fe(()=>A.value,(ae,Q)=>{var he;ae&&ae!==Q&&((he=w.value)==null||he.openDialog(ae))}),fe(z,ae=>{y(ae)}),R({refresh:J}),(ae,Q)=>{const he=na,Te=Ie,ke=it,Be=qe,M=it,mt=Ee,He=Ae,_t=Me,Ne=se,Pe=re,st=de,Ut=Ye,$t=xe,Yt=at;return k(),G("div",ho,[e(Be,{cols:1,"x-gap":0,"y-gap":16},{default:t(()=>[e(M,null,{default:t(()=>[d("div",Co,[e(Be,{cols:6,"x-gap":16},{default:t(()=>[e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"总路由数",value:a(v).totalRoutes},{suffix:t(()=>Q[6]||(Q[6]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1}),e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"启用路由",value:a(v).activeRoutes},{suffix:t(()=>Q[7]||(Q[7]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1}),e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"禁用路由",value:a(v).inactiveRoutes},{suffix:t(()=>Q[8]||(Q[8]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1}),e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"精确匹配",value:a(v).exactMatchRoutes},{suffix:t(()=>Q[9]||(Q[9]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1}),e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"前缀匹配",value:a(v).prefixMatchRoutes},{suffix:t(()=>Q[10]||(Q[10]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1}),e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"正则匹配",value:a(v).regexMatchRoutes},{suffix:t(()=>Q[11]||(Q[11]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1})]),_:1})])]),_:1}),e(M,null,{default:t(()=>[e(Te,{bordered:!1},{default:t(()=>[e(Ut,{inline:"","label-width":80},{default:t(()=>[e(He,{label:"路由名称"},{default:t(()=>[e(mt,{value:a(S).routeName,"onUpdate:value":Q[0]||(Q[0]=_e=>a(S).routeName=_e),placeholder:"请输入路由名称",clearable:""},null,8,["value"])]),_:1}),e(He,{label:"路由路径"},{default:t(()=>[e(mt,{value:a(S).routePath,"onUpdate:value":Q[1]||(Q[1]=_e=>a(S).routePath=_e),placeholder:"请输入路由路径",clearable:""},null,8,["value"])]),_:1}),e(He,{label:"匹配类型"},{default:t(()=>[e(_t,{value:a(S).matchType,"onUpdate:value":Q[2]||(Q[2]=_e=>a(S).matchType=_e),options:a(l),placeholder:"请选择匹配类型",clearable:"",style:{width:"120px"}},null,8,["value","options"])]),_:1}),e(He,{label:"状态"},{default:t(()=>[e(_t,{value:a(S).activeFlag,"onUpdate:value":Q[3]||(Q[3]=_e=>a(S).activeFlag=_e),options:a(L),placeholder:"请选择状态",clearable:"",style:{width:"100px"}},null,8,["value","options"])]),_:1}),e(He,null,{default:t(()=>[e(st,null,{default:t(()=>[e(Pe,{type:"primary",onClick:B},{icon:t(()=>[e(Ne,{component:a(Jt)},null,8,["component"])]),default:t(()=>[Q[12]||(Q[12]=u(" 搜索 "))]),_:1}),e(Pe,{onClick:n},{icon:t(()=>[e(Ne,{component:a(Ue)},null,8,["component"])]),default:t(()=>[Q[13]||(Q[13]=u(" 重置 "))]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),e(M,null,{default:t(()=>[d("div",wo,[d("div",To,[e(st,null,{default:t(()=>[e(Pe,{type:"primary",onClick:W},{icon:t(()=>[e(Ne,{component:a(rt)},null,8,["component"])]),default:t(()=>[Q[14]||(Q[14]=u(" 新建路由 "))]),_:1}),e(Pe,{type:"error",disabled:!a(x),onClick:oe,loading:a(o)},{icon:t(()=>[e(Ne,{component:a(Le)},null,8,["component"])]),default:t(()=>[Q[15]||(Q[15]=u(" 批量删除 "))]),_:1},8,["disabled","loading"]),e(Pe,{type:"success",disabled:!a(x),onClick:ie,loading:a(i)},{icon:t(()=>[e(Ne,{component:a(Wt)},null,8,["component"])]),default:t(()=>[Q[16]||(Q[16]=u(" 批量启用 "))]),_:1},8,["disabled","loading"]),e(Pe,{type:"warning",disabled:!a(x),onClick:me,loading:a(i)},{icon:t(()=>[e(Ne,{component:a(Xt)},null,8,["component"])]),default:t(()=>[Q[17]||(Q[17]=u(" 批量禁用 "))]),_:1},8,["disabled","loading"])]),_:1})]),d("div",Io,[e(st,null,{default:t(()=>[e(Pe,{onClick:J,loading:a(h)},{icon:t(()=>[e(Ne,{component:a(Ue)},null,8,["component"])]),default:t(()=>[Q[18]||(Q[18]=u(" 刷新 "))]),_:1},8,["loading"])]),_:1})])])]),_:1}),e(M,null,{default:t(()=>[e(Te,{bordered:!1},{default:t(()=>[e(Yt,{ref:"tableRef",columns:a(ee),data:a(_),loading:a(h),pagination:a(F),"row-key":_e=>_e.routeConfigId,"checked-row-keys":a(m),"onUpdate:checkedRowKeys":Q[4]||(Q[4]=_e=>a(T)(_e)),"scroll-x":1400,striped:"",size:"small","flex-height":"",style:{"min-height":"400px"},remote:""},{empty:t(()=>[e($t,{description:"暂无路由配置"})]),_:1},8,["columns","data","loading","pagination","row-key","checked-row-keys"])]),_:1})]),_:1})]),_:1}),e(Wa,{ref_key:"routeConfigDialogRef",ref:D,"editing-route":a(p),"gateway-instance-id":C.gatewayInstanceId,onSuccess:a(c)},null,8,["editing-route","gateway-instance-id","onSuccess"]),e(bo,{ref_key:"routeAdvancedConfigDialogRef",ref:w,route:a(A),"onUpdate:visible":X},null,8,["route"]),e(cl,{visible:a(g),route:a(b),"onUpdate:visible":Q[5]||(Q[5]=_e=>g.value=_e)},null,8,["visible","route"])])}}}),ko=ge(xo,[["__scopeId","data-v-e6c6cf3f"]]),Ro={class:"router-config-manager"},So={key:1},Oo={class:"header"},No={class:"header-left"},Po={class:"header-right"},Ao=ce({__name:"RouterConfigManager",props:{gatewayInstanceId:{}},setup(r){const R=r;R.gatewayInstanceId||console.warn("RouterConfigManager: gatewayInstanceId is required");const C=we(),D=$(!1),w=$(!1),_=$(),h=$(null),v=$(!1),S=$(!1),l=be({gatewayInstanceId:"",routerConfigId:"",routerName:"默认Router",routerDesc:"",defaultPriority:100,enableRouteCache:"Y",routeCacheTtlSeconds:300,maxRoutes:1e3,routeMatchTimeout:5e3,enableStrictMode:"N",enableMetrics:"Y",enableTracing:"N",caseSensitive:"N",removeTrailingSlash:"Y",enableGlobalFilters:"Y",filterExecutionMode:"SEQUENTIAL",maxFilterChainDepth:10,enableRoutePooling:"N",routePoolSize:100,enableAsyncProcessing:"N",enableFallback:"N",fallbackRoute:"",notFoundStatusCode:404,notFoundMessage:"Route not found",activeFlag:"Y",noteText:""}),L=[{label:"顺序执行",value:"SEQUENTIAL"},{label:"并行执行",value:"PARALLEL"}],I={routerName:[{required:!0,message:"请输入Router名称",trigger:"blur"}],defaultPriority:[{required:!0,type:"number",message:"请输入默认优先级",trigger:"blur"}],routeCacheTtlSeconds:[{required:!0,type:"number",message:"请输入缓存TTL",trigger:"blur"}],notFoundStatusCode:[{required:!0,type:"number",message:"请输入404状态码",trigger:"blur"}],notFoundMessage:[{required:!0,message:"请输入404消息",trigger:"blur"}]},N=async()=>{if(!(!R.gatewayInstanceId||v.value)){D.value=!0,S.value=!1;try{console.log("开始加载Router配置，网关实例ID:",R.gatewayInstanceId);const y=await ba(R.gatewayInstanceId);if(console.log("API响应:",y),v.value)return;if(y!=null&&y.oK){if(!y.bizData){console.warn("No bizData in response"),S.value=!1,h.value=JSON.parse(JSON.stringify(l));return}let p;try{p=JSON.parse(y.bizData)}catch(g){console.error("Error parsing bizData:",g),C.error("解析Router配置数据失败"),S.value=!1;return}let b=[];if(Array.isArray(p)?b=p:p&&p.routerConfigs&&Array.isArray(p.routerConfigs)&&(b=p.routerConfigs,console.log("Router configs data:",p)),b.length>0){const g=b[0];S.value=!0,console.log("Loading router config:",g),Object.assign(l,{routerConfigId:g.routerConfigId||"",routerName:g.routerName||"默认Router",routerDesc:g.routerDesc||"",defaultPriority:g.defaultPriority||100,enableRouteCache:g.enableRouteCache||"Y",routeCacheTtlSeconds:g.routeCacheTtlSeconds||300,maxRoutes:g.maxRoutes||1e3,routeMatchTimeout:g.routeMatchTimeout||5e3,enableStrictMode:g.enableStrictMode||"N",enableMetrics:g.enableMetrics||"Y",enableTracing:g.enableTracing||"N",caseSensitive:g.caseSensitive||"N",removeTrailingSlash:g.removeTrailingSlash||"Y",enableGlobalFilters:g.enableGlobalFilters||"Y",filterExecutionMode:g.filterExecutionMode||"SEQUENTIAL",maxFilterChainDepth:g.maxFilterChainDepth||10,enableRoutePooling:g.enableRoutePooling||"N",routePoolSize:g.routePoolSize||100,enableAsyncProcessing:g.enableAsyncProcessing||"N",enableFallback:g.enableFallback||"N",fallbackRoute:g.fallbackRoute||"",notFoundStatusCode:g.notFoundStatusCode||404,notFoundMessage:g.notFoundMessage||"Route not found",activeFlag:g.activeFlag||"Y",noteText:g.noteText||""}),console.log("Router config loaded successfully. configExists:",S.value),console.log("Form data updated:",{routerConfigId:l.routerConfigId,routerName:l.routerName})}else console.log("No router configs found for instance:",R.gatewayInstanceId),S.value=!1;h.value=JSON.parse(JSON.stringify(l))}else{const p=(y==null?void 0:y.errMsg)||"加载Router配置失败";console.error("API response error:",y),C.error(p)}}catch(y){console.error("Error loading router config:",y),C.error("加载Router配置时发生错误: "+(y instanceof Error?y.message:String(y)))}finally{D.value=!1}}},O=te(()=>h.value?JSON.stringify(l)!==JSON.stringify(h.value):!1);fe(()=>R.gatewayInstanceId,async y=>{if(y){l.gatewayInstanceId=y;try{await N()}catch(p){console.error("Error in watcher callback:",p),C.error("加载Router配置时发生错误")}}},{immediate:!0});const H=async()=>{if(_.value)try{await _.value.validate(),w.value=!0;const y={routerConfigId:l.routerConfigId,gatewayInstanceId:l.gatewayInstanceId,routerName:l.routerName,routerDesc:l.routerDesc,defaultPriority:l.defaultPriority,enableRouteCache:l.enableRouteCache,routeCacheTtlSeconds:l.routeCacheTtlSeconds,maxRoutes:l.maxRoutes,routeMatchTimeout:l.routeMatchTimeout,enableStrictMode:l.enableStrictMode,enableMetrics:l.enableMetrics,enableTracing:l.enableTracing,caseSensitive:l.caseSensitive,removeTrailingSlash:l.removeTrailingSlash,enableGlobalFilters:l.enableGlobalFilters,filterExecutionMode:l.filterExecutionMode,maxFilterChainDepth:l.maxFilterChainDepth,enableRoutePooling:l.enableRoutePooling,routePoolSize:l.routePoolSize,enableAsyncProcessing:l.enableAsyncProcessing,enableFallback:l.enableFallback,fallbackRoute:l.fallbackRoute,notFoundStatusCode:l.notFoundStatusCode,notFoundMessage:l.notFoundMessage,activeFlag:l.activeFlag,noteText:l.noteText,routerMetadata:{},customConfig:{}};let p;if(l.routerConfigId?p=await ha(y):p=await Ct(y),p.oK)if(C.success("Router配置保存成功"),p.bizData)try{const b=JSON.parse(p.bizData);b&&(Object.assign(l,{routerConfigId:b.routerConfigId||l.routerConfigId,routerName:b.routerName||l.routerName,routerDesc:b.routerDesc||l.routerDesc,defaultPriority:b.defaultPriority||l.defaultPriority,enableRouteCache:b.enableRouteCache||l.enableRouteCache,routeCacheTtlSeconds:b.routeCacheTtlSeconds||l.routeCacheTtlSeconds,maxRoutes:b.maxRoutes||l.maxRoutes,routeMatchTimeout:b.routeMatchTimeout||l.routeMatchTimeout,enableStrictMode:b.enableStrictMode||l.enableStrictMode,enableMetrics:b.enableMetrics||l.enableMetrics,enableTracing:b.enableTracing||l.enableTracing,caseSensitive:b.caseSensitive||l.caseSensitive,removeTrailingSlash:b.removeTrailingSlash||l.removeTrailingSlash,enableGlobalFilters:b.enableGlobalFilters||l.enableGlobalFilters,filterExecutionMode:b.filterExecutionMode||l.filterExecutionMode,maxFilterChainDepth:b.maxFilterChainDepth||l.maxFilterChainDepth,enableRoutePooling:b.enableRoutePooling||l.enableRoutePooling,routePoolSize:b.routePoolSize||l.routePoolSize,enableAsyncProcessing:b.enableAsyncProcessing||l.enableAsyncProcessing,enableFallback:b.enableFallback||l.enableFallback,fallbackRoute:b.fallbackRoute||l.fallbackRoute,notFoundStatusCode:b.notFoundStatusCode||l.notFoundStatusCode,notFoundMessage:b.notFoundMessage||l.notFoundMessage,activeFlag:b.activeFlag||l.activeFlag,noteText:b.noteText||l.noteText}),h.value=JSON.parse(JSON.stringify(l)))}catch(b){console.error("Error parsing updated config:",b),await N()}else await N();else C.error("保存Router配置失败")}catch(y){console.error("Error saving router config:",y),C.error("保存Router配置时发生错误")}finally{w.value=!1}},j=async()=>{await N(),C.success("刷新完成")},z=()=>{h.value&&(Object.assign(l,JSON.parse(JSON.stringify(h.value))),C.success("配置已重置"))},F=async()=>{if(!R.gatewayInstanceId){C.error("网关实例ID不能为空");return}w.value=!0;try{const y={gatewayInstanceId:R.gatewayInstanceId,routerName:l.routerName,routerDesc:l.routerDesc,defaultPriority:l.defaultPriority,enableRouteCache:l.enableRouteCache,routeCacheTtlSeconds:l.routeCacheTtlSeconds,maxRoutes:l.maxRoutes,routeMatchTimeout:l.routeMatchTimeout,enableStrictMode:l.enableStrictMode,enableMetrics:l.enableMetrics,enableTracing:l.enableTracing,caseSensitive:l.caseSensitive,removeTrailingSlash:l.removeTrailingSlash,enableGlobalFilters:l.enableGlobalFilters,filterExecutionMode:l.filterExecutionMode,maxFilterChainDepth:l.maxFilterChainDepth,enableRoutePooling:l.enableRoutePooling,routePoolSize:l.routePoolSize,enableAsyncProcessing:l.enableAsyncProcessing,enableFallback:l.enableFallback,fallbackRoute:l.fallbackRoute,notFoundStatusCode:l.notFoundStatusCode,notFoundMessage:l.notFoundMessage,activeFlag:l.activeFlag,noteText:l.noteText,routerMetadata:{},customConfig:{}},p=await Ct(y);if(p.oK)if(C.success("Router配置创建成功"),S.value=!0,p.bizData)try{const b=JSON.parse(p.bizData);b&&(l.routerConfigId=b.routerConfigId,h.value=JSON.parse(JSON.stringify(l)))}catch(b){console.error("Error parsing new config:",b),await N()}else await N();else C.error("创建Router配置失败")}catch(y){console.error("Error creating router config:",y),C.error("创建Router配置时发生错误")}finally{w.value=!1}};return Ve(()=>{R.gatewayInstanceId&&console.log("Router配置管理器初始化，网关实例ID:",R.gatewayInstanceId)}),jt(()=>{v.value=!0}),(y,p)=>{const b=re,g=xe,m=De,o=de,i=se,x=Ee,f=vt,c=lt,s=qe,P=Ae,E=Ye,q=Ie,T=Je,A=Me,B=kt;return k(),G("div",Ro,[!S.value&&!D.value?(k(),Y(g,{key:0,description:"当前网关实例暂无Router配置"},{extra:t(()=>[e(b,{type:"primary",onClick:F,loading:w.value},{default:t(()=>p[24]||(p[24]=[u(" 创建Router配置 ")])),_:1},8,["loading"])]),_:1})):S.value?(k(),G("div",So,[d("div",Oo,[d("div",No,[e(o,null,{default:t(()=>[e(m,{strong:""},{default:t(()=>p[25]||(p[25]=[u("Router配置")])),_:1}),e(m,{depth:"3"},{default:t(()=>p[26]||(p[26]=[u("配置当前网关实例的Router级别设置")])),_:1})]),_:1})]),d("div",Po,[e(o,null,{default:t(()=>[e(b,{type:"primary",onClick:H,loading:w.value,disabled:!R.gatewayInstanceId},{icon:t(()=>[e(i,null,{default:t(()=>[e(a(la))]),_:1})]),default:t(()=>[p[27]||(p[27]=u(" 保存配置 "))]),_:1},8,["loading","disabled"]),e(b,{onClick:j,loading:D.value},{icon:t(()=>[e(i,null,{default:t(()=>[e(a(Ue))]),_:1})]),default:t(()=>[p[28]||(p[28]=u(" 刷新 "))]),_:1},8,["loading"]),e(b,{onClick:z,disabled:!O.value},{icon:t(()=>[e(i,null,{default:t(()=>[e(a(Xe))]),_:1})]),default:t(()=>[p[29]||(p[29]=u(" 重置 "))]),_:1},8,["disabled"])]),_:1})])]),e(q,{title:"Router基础配置",style:{"margin-bottom":"16px"}},{default:t(()=>[e(E,{ref_key:"formRef",ref:_,model:l,rules:I,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(s,{cols:2,"x-gap":24},{default:t(()=>[e(f,{label:"Router名称",path:"routerName"},{default:t(()=>[e(x,{value:l.routerName,"onUpdate:value":p[0]||(p[0]=n=>l.routerName=n),placeholder:"请输入Router名称"},null,8,["value"])]),_:1}),e(f,{label:"默认优先级",path:"defaultPriority"},{default:t(()=>[e(c,{value:l.defaultPriority,"onUpdate:value":p[1]||(p[1]=n=>l.defaultPriority=n),min:0,max:9999,placeholder:"默认路由优先级",style:{width:"100%"}},null,8,["value"])]),_:1})]),_:1}),e(P,{label:"Router描述",path:"routerDesc"},{default:t(()=>[e(x,{value:l.routerDesc,"onUpdate:value":p[2]||(p[2]=n=>l.routerDesc=n),type:"textarea",rows:2,placeholder:"请输入Router描述信息"},null,8,["value"])]),_:1})]),_:1},8,["model"])]),_:1}),e(q,{title:"路由缓存配置",style:{"margin-bottom":"16px"}},{default:t(()=>[e(E,{model:l,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(s,{cols:2,"x-gap":24},{default:t(()=>[e(f,{label:"启用路由缓存"},{default:t(()=>[e(T,{value:l.enableRouteCache==="Y","onUpdate:value":p[3]||(p[3]=n=>l.enableRouteCache=n?"Y":"N")},null,8,["value"])]),_:1}),l.enableRouteCache==="Y"?(k(),Y(f,{key:0,label:"缓存TTL(秒)"},{default:t(()=>[e(c,{value:l.routeCacheTtlSeconds,"onUpdate:value":p[4]||(p[4]=n=>l.routeCacheTtlSeconds=n),min:1,max:86400,placeholder:"缓存存活时间",style:{width:"100%"}},null,8,["value"])]),_:1})):ne("",!0)]),_:1}),l.enableRouteCache==="Y"?(k(),Y(s,{key:0,cols:2,"x-gap":24},{default:t(()=>[e(f,{label:"最大路由数"},{default:t(()=>[e(c,{value:l.maxRoutes,"onUpdate:value":p[5]||(p[5]=n=>l.maxRoutes=n),min:1,max:1e4,placeholder:"最大缓存路由数",style:{width:"100%"}},null,8,["value"])]),_:1}),e(f,{label:"路由匹配超时(ms)"},{default:t(()=>[e(c,{value:l.routeMatchTimeout,"onUpdate:value":p[6]||(p[6]=n=>l.routeMatchTimeout=n),min:100,max:3e4,placeholder:"路由匹配超时时间",style:{width:"100%"}},null,8,["value"])]),_:1})]),_:1})):ne("",!0)]),_:1},8,["model"])]),_:1}),e(q,{title:"全局过滤器配置",style:{"margin-bottom":"16px"}},{default:t(()=>[e(E,{model:l,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(s,{cols:2,"x-gap":24},{default:t(()=>[e(f,{label:"启用全局过滤器"},{default:t(()=>[e(T,{value:l.enableGlobalFilters==="Y","onUpdate:value":p[7]||(p[7]=n=>l.enableGlobalFilters=n?"Y":"N")},null,8,["value"])]),_:1}),l.enableGlobalFilters==="Y"?(k(),Y(f,{key:0,label:"过滤器执行模式"},{default:t(()=>[e(A,{value:l.filterExecutionMode,"onUpdate:value":p[8]||(p[8]=n=>l.filterExecutionMode=n),options:L,placeholder:"选择执行模式"},null,8,["value"])]),_:1})):ne("",!0)]),_:1}),l.enableGlobalFilters==="Y"?(k(),Y(s,{key:0,cols:2,"x-gap":24},{default:t(()=>[e(f,{label:"最大过滤器链深度"},{default:t(()=>[e(c,{value:l.maxFilterChainDepth,"onUpdate:value":p[9]||(p[9]=n=>l.maxFilterChainDepth=n),min:1,max:100,placeholder:"过滤器链最大深度",style:{width:"100%"}},null,8,["value"])]),_:1}),e(f,{label:"启用异步处理"},{default:t(()=>[e(T,{value:l.enableAsyncProcessing==="Y","onUpdate:value":p[10]||(p[10]=n=>l.enableAsyncProcessing=n?"Y":"N")},null,8,["value"])]),_:1})]),_:1})):ne("",!0)]),_:1},8,["model"])]),_:1}),e(q,{title:"性能优化配置",style:{"margin-bottom":"16px"}},{default:t(()=>[e(E,{model:l,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(s,{cols:2,"x-gap":24},{default:t(()=>[e(f,{label:"启用严格模式"},{default:t(()=>[e(T,{value:l.enableStrictMode==="Y","onUpdate:value":p[11]||(p[11]=n=>l.enableStrictMode=n?"Y":"N")},null,8,["value"])]),_:1}),e(f,{label:"启用路由池"},{default:t(()=>[e(T,{value:l.enableRoutePooling==="Y","onUpdate:value":p[12]||(p[12]=n=>l.enableRoutePooling=n?"Y":"N")},null,8,["value"])]),_:1})]),_:1}),e(s,{cols:2,"x-gap":24},{default:t(()=>[l.enableRoutePooling==="Y"?(k(),Y(f,{key:0,label:"路由池大小"},{default:t(()=>[e(c,{value:l.routePoolSize,"onUpdate:value":p[13]||(p[13]=n=>l.routePoolSize=n),min:10,max:1e3,placeholder:"路由对象池大小",style:{width:"100%"}},null,8,["value"])]),_:1})):ne("",!0),e(f,{label:"大小写敏感"},{default:t(()=>[e(T,{value:l.caseSensitive==="Y","onUpdate:value":p[14]||(p[14]=n=>l.caseSensitive=n?"Y":"N")},null,8,["value"])]),_:1})]),_:1}),e(s,{cols:2,"x-gap":24},{default:t(()=>[e(f,{label:"移除尾部斜杠"},{default:t(()=>[e(T,{value:l.removeTrailingSlash==="Y","onUpdate:value":p[15]||(p[15]=n=>l.removeTrailingSlash=n?"Y":"N")},null,8,["value"])]),_:1}),e(f,{label:"启用监控指标"},{default:t(()=>[e(T,{value:l.enableMetrics==="Y","onUpdate:value":p[16]||(p[16]=n=>l.enableMetrics=n?"Y":"N")},null,8,["value"])]),_:1})]),_:1})]),_:1},8,["model"])]),_:1}),e(q,{title:"错误处理配置",style:{"margin-bottom":"16px"}},{default:t(()=>[e(E,{model:l,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(s,{cols:2,"x-gap":24},{default:t(()=>[e(f,{label:"启用降级处理"},{default:t(()=>[e(T,{value:l.enableFallback==="Y","onUpdate:value":p[17]||(p[17]=n=>l.enableFallback=n?"Y":"N")},null,8,["value"])]),_:1}),l.enableFallback==="Y"?(k(),Y(f,{key:0,label:"降级路由"},{default:t(()=>[e(x,{value:l.fallbackRoute,"onUpdate:value":p[18]||(p[18]=n=>l.fallbackRoute=n),placeholder:"降级路由路径"},null,8,["value"])]),_:1})):ne("",!0)]),_:1}),e(s,{cols:2,"x-gap":24},{default:t(()=>[e(f,{label:"404状态码"},{default:t(()=>[e(c,{value:l.notFoundStatusCode,"onUpdate:value":p[19]||(p[19]=n=>l.notFoundStatusCode=n),min:400,max:599,placeholder:"未找到路由的状态码",style:{width:"100%"}},null,8,["value"])]),_:1}),e(f,{label:"404消息"},{default:t(()=>[e(x,{value:l.notFoundMessage,"onUpdate:value":p[20]||(p[20]=n=>l.notFoundMessage=n),placeholder:"未找到路由的错误消息"},null,8,["value"])]),_:1})]),_:1})]),_:1},8,["model"])]),_:1}),e(q,{title:"其他配置"},{default:t(()=>[e(E,{model:l,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(s,{cols:2,"x-gap":24},{default:t(()=>[e(f,{label:"启用链路追踪"},{default:t(()=>[e(T,{value:l.enableTracing==="Y","onUpdate:value":p[21]||(p[21]=n=>l.enableTracing=n?"Y":"N")},null,8,["value"])]),_:1}),e(f,{label:"配置状态"},{default:t(()=>[e(T,{value:l.activeFlag==="Y","onUpdate:value":p[22]||(p[22]=n=>l.activeFlag=n?"Y":"N")},null,8,["value"])]),_:1})]),_:1}),e(P,{label:"备注信息"},{default:t(()=>[e(x,{value:l.noteText,"onUpdate:value":p[23]||(p[23]=n=>l.noteText=n),type:"textarea",rows:3,placeholder:"请输入备注信息"},null,8,["value"])]),_:1})]),_:1},8,["model"])]),_:1})])):D.value?(k(),Y(B,{key:2,size:"large",style:{width:"100%","min-height":"200px"}})):ne("",!0)])}}}),Do=ge(Ao,[["__scopeId","data-v-697af8a8"]]),Eo={class:"global-filter-list"},Mo=ce({__name:"GlobalFilterList",props:{filters:{},loading:{type:Boolean,default:!1}},emits:["edit","delete","toggle-status","move-up","move-down"],setup(r,{emit:R}){const C=r,D=R,w=dt(),_=$(),h=$({page:1,pageSize:10,showSizePicker:!0,pageSizes:[10,20,50],showQuickJumper:!0,prefix:I=>`共 ${I.itemCount} 条`}),v=I=>{const N=gt.find(O=>O.value===I);return(N==null?void 0:N.label)||I},S=I=>({header:"primary","query-param":"info",body:"warning",strip:"success",rewrite:"success",method:"error",cookie:"default",response:"info"})[I]||"default",l=te(()=>[{title:"执行顺序",key:"filterOrder",width:100,render:(I,N)=>U(de,{align:"center"},{default:()=>[U("span",{style:"font-weight: bold; color: #0066cc;"},I.filterOrder),U(de,{size:4},{default:()=>[U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"tiny",tertiary:!0,circle:!0,disabled:N===0,onClick:()=>D("move-up",I)},{icon:()=>U(se,null,{default:()=>U(ot)})}),default:()=>"向上移动"}),U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"tiny",tertiary:!0,circle:!0,disabled:N===C.filters.length-1,onClick:()=>D("move-down",I)},{icon:()=>U(se,null,{default:()=>U(nt)})}),default:()=>"向下移动"})]})]})},{title:"过滤器名称",key:"filterName",width:200,ellipsis:{tooltip:!0}},{title:"类型",key:"filterType",width:140,render:I=>U(Ce,{type:S(I.filterType),size:"small"},{default:()=>v(I.filterType)})},{title:"执行时机",key:"filterAction",width:120,render:()=>U(Ce,{type:"success",size:"small"},{default:()=>"前置处理"})},{title:"状态",key:"activeFlag",width:80,render:I=>U(Je,{value:I.activeFlag==="Y",onUpdateValue:()=>D("toggle-status",I)})},{title:"描述",key:"filterDesc",ellipsis:{tooltip:!0},render:I=>I.filterDesc||"-"},{title:"创建时间",key:"addTime",width:160,render:I=>I.addTime?new Date(I.addTime).toLocaleString():"-"},{title:"操作",key:"actions",width:120,fixed:"right",render:I=>U(de,{size:8},{default:()=>[U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"small",type:"primary",secondary:!0,onClick:()=>D("edit",I)},{icon:()=>U(se,null,{default:()=>U(tt)})}),default:()=>"编辑过滤器"}),U(ve,{trigger:"hover"},{trigger:()=>U(re,{size:"small",type:"error",secondary:!0,onClick:()=>L(I)},{icon:()=>U(se,null,{default:()=>U(Le)})}),default:()=>"删除过滤器"})]})}]),L=I=>{w.warning({title:"确认删除",content:`确定要删除过滤器"${I.filterName}"吗？此操作不可恢复。`,positiveText:"删除",negativeText:"取消",onPositiveClick:()=>{D("delete",I)}})};return(I,N)=>(k(),G("div",Eo,[e(a(at),{ref_key:"dataTableRef",ref:_,columns:l.value,data:I.filters,pagination:h.value,loading:I.loading,"row-key":O=>O.filterConfigId,"scroll-x":1200,striped:"",size:"small"},{empty:t(()=>[e(a(xe),{description:"暂无过滤器配置"})]),_:1},8,["columns","data","pagination","loading","row-key"])]))}}),Fo=ge(Mo,[["__scopeId","data-v-3ea047be"]]),zo={class:"global-filter-manager"},Uo={class:"toolbar"},$o={class:"toolbar-left"},Yo={class:"toolbar-right"},Ho={class:"filter-content"},Vo=ce({__name:"GlobalFilterManager",props:{gatewayInstanceId:{}},setup(r,{expose:R}){const C=r,D=we(),w=ft(),_=$(!1),h=$(!1),v=$(null),S=$([]),l=$(!1),L={success:m=>{!l.value&&w&&!w.isUnmounted&&ye(()=>{l.value||D.success(m)})},error:m=>{!l.value&&w&&!w.isUnmounted&&ye(()=>{l.value||D.error(m)})},warning:m=>{!l.value&&w&&!w.isUnmounted&&ye(()=>{l.value||D.warning(m)})}},I=async()=>{if(!(!C.gatewayInstanceId||l.value)){_.value=!0;try{const m=await oo(C.gatewayInstanceId);if(l.value)return;if(m!=null&&m.oK&&m.bizData){const o=JSON.parse(m.bizData)||[];S.value=o.filter(i=>i.filterAction==="pre-routing").sort((i,x)=>i.filterOrder-x.filterOrder)}else S.value=[]}catch(m){l.value||(console.error("加载全局过滤器失败:",m),L.error("加载全局过滤器失败"),S.value=[])}finally{l.value||(_.value=!1)}}},N=()=>{l.value||(v.value=null,h.value=!0)},O=m=>{l.value||(v.value=m,h.value=!0)},H=async m=>{if(!l.value)try{_.value=!0;const o=await zt(m.filterConfigId);if(l.value)return;o!=null&&o.oK?(L.success("删除过滤器成功"),await I()):L.error((o==null?void 0:o.errMsg)||"删除过滤器失败")}catch(o){l.value||(console.error("删除过滤器失败:",o),L.error("删除过滤器失败"))}finally{l.value||(_.value=!1)}},j=async m=>{if(!l.value)try{const o=m.activeFlag==="Y"?"N":"Y",i={...m,activeFlag:o},x=await Re(i);if(l.value)return;x!=null&&x.oK?(L.success(`过滤器已${o==="Y"?"启用":"禁用"}`),await I()):L.error((x==null?void 0:x.errMsg)||"更新过滤器状态失败")}catch(o){l.value||(console.error("更新过滤器状态失败:",o),L.error("更新过滤器状态失败"))}},z=async m=>{if(l.value)return;const o=S.value.findIndex(x=>x.filterConfigId===m.filterConfigId);if(o<=0)return;const i=S.value[o-1];await y(m,i)},F=async m=>{if(l.value)return;const o=S.value.findIndex(x=>x.filterConfigId===m.filterConfigId);if(o>=S.value.length-1)return;const i=S.value[o+1];await y(m,i)},y=async(m,o)=>{if(!l.value)try{_.value=!0;const i=m.filterOrder,x={...m,filterOrder:o.filterOrder},f={...o,filterOrder:i},[c,s]=await Promise.all([Re(x),Re(f)]);if(l.value)return;c!=null&&c.oK&&(s!=null&&s.oK)?(L.success("调整执行顺序成功"),await I()):L.error("调整执行顺序失败")}catch(i){l.value||(console.error("调整执行顺序失败:",i),L.error("调整执行顺序失败"))}finally{l.value||(_.value=!1)}},p=async m=>{if(!l.value)try{const o={tenantId:"default",gatewayInstanceId:C.gatewayInstanceId,filterName:m.filterName,filterType:m.filterType,filterAction:"pre-routing",filterOrder:m.filterOrder,filterConfig:JSON.stringify(m.config),filterDesc:m.filterDesc,activeFlag:m.activeFlag,addWho:"admin",editWho:"admin"};let i;if(m.filterConfigId?i=await Re({...o,filterConfigId:m.filterConfigId}):i=await Ft(o),l.value)return;i!=null&&i.oK?(L.success(`${m.filterConfigId?"编辑":"创建"}过滤器成功`),h.value=!1,await I()):L.error((i==null?void 0:i.errMsg)||`${m.filterConfigId?"编辑":"创建"}过滤器失败`)}catch(o){l.value||(console.error("保存过滤器失败:",o),L.error("保存过滤器失败"))}},b=async()=>{l.value||(await I(),L.success("刷新完成"))},g=async()=>{l.value||await I()};return fe(()=>C.gatewayInstanceId,async m=>{m&&!l.value&&await I()},{immediate:!0}),Ve(()=>{C.gatewayInstanceId&&console.log("全局过滤器管理器初始化，网关实例ID:",C.gatewayInstanceId)}),ct(()=>{l.value=!0}),R({refresh:g,loadGlobalFilters:I}),(m,o)=>{const i=De,x=de,f=se,c=re,s=Fe;return k(),G("div",zo,[d("div",Uo,[d("div",$o,[e(x,null,{default:t(()=>[e(i,{strong:""},{default:t(()=>o[1]||(o[1]=[u("全局过滤器管理")])),_:1}),e(i,{depth:"3"},{default:t(()=>o[2]||(o[2]=[u("管理作用于所有路由的全局前置过滤器")])),_:1})]),_:1})]),d("div",Yo,[e(x,null,{default:t(()=>[e(c,{type:"primary",onClick:N,disabled:!m.gatewayInstanceId},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(rt))]),_:1})]),default:t(()=>[o[3]||(o[3]=u(" 新建过滤器 "))]),_:1},8,["disabled"]),e(c,{onClick:b,loading:_.value},{icon:t(()=>[e(f,null,{default:t(()=>[e(a(Ue))]),_:1})]),default:t(()=>[o[4]||(o[4]=u(" 刷新 "))]),_:1},8,["loading"])]),_:1})])]),d("div",Ho,[e(Fo,{filters:S.value,loading:_.value,onEdit:O,onDelete:H,onToggleStatus:j,onMoveUp:z,onMoveDown:F},null,8,["filters","loading"])]),e(s,{type:"info",style:{"margin-top":"16px"}},{header:t(()=>o[5]||(o[5]=[u("全局过滤器说明")])),default:t(()=>[o[6]||(o[6]=u(" 全局过滤器配置作用于该网关实例的所有路由，仅支持前置处理类型： ")),o[7]||(o[7]=d("ul",{style:{margin:"8px 0","padding-left":"20px"}},[d("li",null,[d("strong",null,"前置处理"),u("：在路由匹配前执行，如认证、限流、请求头处理、参数验证等")]),d("li",null,"支持多个前置过滤器，按执行顺序依次处理"),d("li",null,"路由级别的过滤器为后置处理类型，在路由匹配后执行")],-1)),o[8]||(o[8]=u(" 支持的过滤器类型：header、query-param、body、strip、rewrite、method、cookie、response "))]),_:1}),e(Mt,{show:h.value,"onUpdate:show":o[0]||(o[0]=P=>h.value=P),"filter-data":v.value,onSave:p},null,8,["show","filter-data"])])}}}),Lo=ge(Vo,[["__scopeId","data-v-29f3fde4"]]),qo={class:"route-test-panel"},Jo={style:{display:"flex","align-items":"center",width:"100%"}},jo={style:{display:"flex","align-items":"center",width:"100%"}},Bo={key:0},Ko={key:1},Qo={key:0},Go=ce({__name:"RouteTestPanel",props:{gatewayInstanceId:{}},setup(r){const R=r,C=$(!1),D=$(null),w=$({method:"GET",path:"",host:"",headers:{},queryParams:{}}),_=$([]),h=$([]),v=[{label:"GET",value:"GET"},{label:"POST",value:"POST"},{label:"PUT",value:"PUT"},{label:"DELETE",value:"DELETE"},{label:"PATCH",value:"PATCH"},{label:"OPTIONS",value:"OPTIONS"},{label:"HEAD",value:"HEAD"}],S=async()=>{if(!R.gatewayInstanceId){console.warn("请先选择网关实例");return}C.value=!0;try{await new Promise(I=>setTimeout(I,1e3)),D.value={matched:Math.random()>.3,routeName:"用户管理API",priority:100,executionTime:Math.floor(Math.random()*50)+10,conflictRoutes:[]}}catch(I){console.error("测试执行失败",I)}finally{C.value=!1}},l=()=>{w.value={method:"GET",path:"",host:"",headers:{},queryParams:{}},_.value=[],h.value=[],D.value=null},L=I=>I===void 0?"未知":{[We.EXACT]:"精确匹配",[We.PREFIX]:"前缀匹配",[We.REGEX]:"正则匹配"}[I]||"未知";return(I,N)=>{const O=Fe,H=Me,j=Ae,z=it,F=Ee,y=qe,p=Rt,b=Ye,g=re,m=se,o=de,i=Ie;return k(),G("div",qo,[e(o,{vertical:"",size:"large"},{default:t(()=>[e(O,{type:"info"},{header:t(()=>N[5]||(N[5]=[u("路由测试工具")])),default:t(()=>[N[6]||(N[6]=u(" 输入请求信息，测试路由匹配规则，验证路由配置是否正确。 "))]),_:1}),e(i,{title:"测试请求",bordered:!1},{footer:t(()=>[e(o,{justify:"end"},{default:t(()=>[e(g,{onClick:l},{default:t(()=>N[7]||(N[7]=[u("重置")])),_:1}),e(g,{type:"primary",loading:C.value,onClick:S},{icon:t(()=>[e(m,{component:a(da)},null,8,["component"])]),default:t(()=>[N[8]||(N[8]=u(" 执行测试 "))]),_:1},8,["loading"])]),_:1})]),default:t(()=>[e(b,{model:w.value,"label-placement":"left","label-width":100},{default:t(()=>[e(y,{cols:2,"x-gap":16},{default:t(()=>[e(z,null,{default:t(()=>[e(j,{label:"请求方法"},{default:t(()=>[e(H,{value:w.value.method,"onUpdate:value":N[0]||(N[0]=x=>w.value.method=x),options:v},null,8,["value"])]),_:1})]),_:1}),e(z,null,{default:t(()=>[e(j,{label:"请求路径"},{default:t(()=>[e(F,{value:w.value.path,"onUpdate:value":N[1]||(N[1]=x=>w.value.path=x),placeholder:"/api/users"},null,8,["value"])]),_:1})]),_:1})]),_:1}),e(j,{label:"Host"},{default:t(()=>[e(F,{value:w.value.host,"onUpdate:value":N[2]||(N[2]=x=>w.value.host=x),placeholder:"api.example.com"},null,8,["value"])]),_:1}),e(j,{label:"请求头"},{default:t(()=>[e(p,{value:_.value,"onUpdate:value":N[3]||(N[3]=x=>_.value=x),"on-create":()=>({key:"",value:""})},{default:t(({value:x})=>[d("div",Jo,[e(F,{value:x.key,"onUpdate:value":f=>x.key=f,type:"text",placeholder:"Header Name",style:{"margin-right":"12px"}},null,8,["value","onUpdate:value"]),e(F,{value:x.value,"onUpdate:value":f=>x.value=f,type:"text",placeholder:"Header Value"},null,8,["value","onUpdate:value"])])]),_:1},8,["value"])]),_:1}),e(j,{label:"查询参数"},{default:t(()=>[e(p,{value:h.value,"onUpdate:value":N[4]||(N[4]=x=>h.value=x),"on-create":()=>({key:"",value:""})},{default:t(({value:x})=>[d("div",jo,[e(F,{value:x.key,"onUpdate:value":f=>x.key=f,type:"text",placeholder:"Param Name",style:{"margin-right":"12px"}},null,8,["value","onUpdate:value"]),e(F,{value:x.value,"onUpdate:value":f=>x.value=f,type:"text",placeholder:"Param Value"},null,8,["value","onUpdate:value"])])]),_:1},8,["value"])]),_:1})]),_:1},8,["model"])]),_:1}),D.value?(k(),Y(i,{key:0,title:"测试结果",bordered:!1},{default:t(()=>[e(O,{type:D.value.matched?"success":"warning"},{header:t(()=>[u(V(D.value.matched?"路由匹配成功":"路由匹配失败"),1)]),default:t(()=>[D.value.matched?(k(),G("div",Bo,[d("p",null,[N[9]||(N[9]=d("strong",null,"匹配路由:",-1)),u(" "+V(D.value.routeName),1)]),d("p",null,[N[10]||(N[10]=d("strong",null,"匹配类型:",-1)),u(" "+V(L(D.value.matchType)),1)]),d("p",null,[N[11]||(N[11]=d("strong",null,"优先级:",-1)),u(" "+V(D.value.priority),1)]),d("p",null,[N[12]||(N[12]=d("strong",null,"执行时间:",-1)),u(" "+V(D.value.executionTime)+"ms",1)])])):(k(),G("div",Ko,[N[14]||(N[14]=d("p",null,"没有找到匹配的路由规则",-1)),D.value.conflictRoutes&&D.value.conflictRoutes.length>0?(k(),G("div",Qo,[N[13]||(N[13]=d("p",null,[d("strong",null,"可能的冲突路由:")],-1)),d("ul",null,[(k(!0),G(Se,null,Oe(D.value.conflictRoutes,x=>(k(),G("li",{key:x.routeConfigId},V(x.routeName)+" ("+V(x.routePath)+") ",1))),128))])])):ne("",!0)]))]),_:1},8,["type"])]),_:1})):ne("",!0)]),_:1})])}}}),Wo=ge(Go,[["__scopeId","data-v-57030c57"]]),Xo={class:"route-management"},Zo={class:"instance-header"},en={class:"instance-selector"},tn={class:"select-empty"},an={class:"instance-content"},ln={class:"instance-details"},on={class:"tab-content"},nn={class:"tab-description"},rn={class:"info-content"},sn={class:"tab-content"},un={class:"tab-description"},dn={class:"info-content"},cn={class:"tab-content"},fn={class:"tab-description"},pn={class:"info-content"},vn={class:"tab-content"},gn={class:"tab-description"},mn={class:"info-content"},_n=ce({__name:"RouteManagement",setup(r){const R=we(),C=$(""),D=$([]),w=$([]),_=$(!1),h=$("routes"),v=$(!1),S=$(),l=$(),L=$(),I=$(),N=te(()=>!!C.value),O=te(()=>w.value.find(p=>p.gatewayInstanceId===C.value)||null),H=()=>{v.value=!v.value},j=async()=>{_.value=!0;try{const p=await pa({activeFlag:"Y",page:1,size:100});if(p.oK){const b=JSON.parse(p.bizData);w.value=b,D.value=b.map(g=>{const m=g.tlsEnabled==="Y"?g.httpsPort:g.httpPort;return{label:`${g.instanceName||"未命名"} (${g.bindAddress||"-"}:${m||"-"})`,value:g.gatewayInstanceId,healthStatus:g.healthStatus,disabled:g.healthStatus!=="Y"}}),b.length>0&&z(b[0].gatewayInstanceId)}else R.error("获取网关实例列表失败")}catch(p){console.error("Error loading gateway instances:",p),R.error("获取网关实例列表时发生错误")}finally{_.value=!1}},z=p=>{C.value=p,h.value="routes",ye(()=>{F()})},F=async()=>{if(N.value){await ye();try{switch(h.value){case"routes":S.value&&typeof S.value.refresh=="function"&&await S.value.refresh();break;case"router":l.value&&typeof l.value.loadRouterConfig=="function"&&await l.value.loadRouterConfig();break;case"globalFilters":L.value&&typeof L.value.refresh=="function"&&await L.value.refresh();break;case"test":I.value&&typeof I.value.refresh=="function"&&await I.value.refresh();break}}catch(p){console.error("刷新组件时发生错误:",p)}}},y=p=>{h.value=p,setTimeout(()=>{F()},200)};return Ve(()=>{j()}),(p,b)=>{const g=se,m=Me,o=re,i=Ie,x=Ce,f=It,c=Tt,s=Zt,P=Fe,E=et,q=Ze,T=xe;return k(),G("div",Xo,[e(i,{class:"instance-selector-card",size:"small"},{header:t(()=>[d("div",Zo,[e(g,{size:"20",color:"#18a058"},{default:t(()=>[e(a(Ge))]),_:1}),b[2]||(b[2]=d("span",null,"网关实例选择",-1))])]),default:t(()=>[d("div",en,[e(m,{value:C.value,"onUpdate:value":[b[0]||(b[0]=A=>C.value=A),z],placeholder:"请选择网关实例",options:D.value,loading:_.value,filterable:"",clearable:""},{empty:t(()=>[d("div",tn,[e(g,{size:"16",color:"#d03050"},{default:t(()=>[e(a(Qt))]),_:1}),b[3]||(b[3]=d("span",null,"暂无可用的网关实例",-1))])]),_:1},8,["value","options","loading"]),e(o,{onClick:j,disabled:_.value},{icon:t(()=>[e(g,{component:a(Xe)},null,8,["component"])]),default:t(()=>[b[4]||(b[4]=u(" 刷新列表 "))]),_:1},8,["disabled"])])]),_:1}),N.value?(k(),Y(i,{key:0,class:"instance-info-card",size:"small"},{header:t(()=>[d("div",{class:"instance-header",onClick:H,style:{cursor:"pointer"}},[e(g,{size:"20",color:"#18a058"},{default:t(()=>[e(a(Ge))]),_:1}),b[5]||(b[5]=d("span",null,"网关实例信息",-1)),b[6]||(b[6]=d("div",{class:"flex-spacer"},null,-1)),e(g,{size:"16",color:v.value?"#18a058":"#999"},{default:t(()=>[(k(),Y(Bt(v.value?a(ot):a(nt))))]),_:1},8,["color"])])]),default:t(()=>[e(s,{show:v.value},{default:t(()=>[d("div",an,[d("div",ln,[e(c,{column:3,size:"small",bordered:""},{default:t(()=>[e(f,{label:"实例ID"},{default:t(()=>[e(x,{type:"info",size:"small"},{default:t(()=>[u(V(C.value),1)]),_:1})]),_:1}),e(f,{label:"实例名称"},{default:t(()=>[e(x,{type:"success",size:"small"},{default:t(()=>{var A;return[u(V(((A=O.value)==null?void 0:A.instanceName)||"未命名"),1)]}),_:1})]),_:1}),e(f,{label:"状态"},{default:t(()=>{var A;return[e(x,{type:((A=O.value)==null?void 0:A.activeFlag)==="Y"?"success":"error",size:"small"},{default:t(()=>{var B;return[u(V(((B=O.value)==null?void 0:B.activeFlag)==="Y"?"运行中":"已停用"),1)]}),_:1},8,["type"])]}),_:1}),e(f,{label:"绑定地址"},{default:t(()=>{var A;return[u(V(((A=O.value)==null?void 0:A.bindAddress)||"-"),1)]}),_:1}),e(f,{label:"监听端口"},{default:t(()=>{var A,B,n;return[u(V(((A=O.value)==null?void 0:A.tlsEnabled)==="Y"?((B=O.value)==null?void 0:B.httpsPort)||"-":((n=O.value)==null?void 0:n.httpPort)||"-"),1)]}),_:1}),e(f,{label:"健康状态"},{default:t(()=>{var A;return[e(x,{type:((A=O.value)==null?void 0:A.healthStatus)==="Y"?"success":"warning",size:"small"},{default:t(()=>{var B;return[u(V(((B=O.value)==null?void 0:B.healthStatus)==="Y"?"健康":"异常"),1)]}),_:1},8,["type"])]}),_:1})]),_:1})])])]),_:1},8,["show"])]),_:1})):ne("",!0),N.value?(k(),Y(i,{key:1,class:"main-content"},{default:t(()=>[e(q,{type:"segment",size:"large",value:h.value,"onUpdate:value":[b[1]||(b[1]=A=>h.value=A),y]},{default:t(()=>[e(E,{name:"routes",tab:"路由配置"},{default:t(()=>[d("div",on,[d("div",nn,[e(P,{type:"info","show-icon":!1},{default:t(()=>[d("div",rn,[e(g,{size:"16",color:"#2080f0"},{default:t(()=>[e(a(Ke))]),_:1}),b[7]||(b[7]=d("span",null,"配置路由规则，包括路径匹配、请求转发、过滤器等。路由是网关的核心功能。",-1))])]),_:1})]),(k(),Y(ko,{ref_key:"routeConfigRef",ref:S,"gateway-instance-id":C.value,key:`routes-${C.value}`},null,8,["gateway-instance-id"]))])]),_:1}),e(E,{name:"router",tab:"Router配置"},{default:t(()=>[d("div",sn,[d("div",un,[e(P,{type:"info","show-icon":!1},{default:t(()=>[d("div",dn,[e(g,{size:"16",color:"#2080f0"},{default:t(()=>[e(a(Ke))]),_:1}),b[8]||(b[8]=d("span",null,"配置Router级别设置，包括路由缓存、全局过滤器开关、性能优化等。Router是路由管理的核心引擎。",-1))])]),_:1})]),(k(),Y(Do,{ref_key:"routerConfigRef",ref:l,"gateway-instance-id":C.value,key:`router-${C.value}`},null,8,["gateway-instance-id"]))])]),_:1}),e(E,{name:"globalFilters",tab:"全局过滤器"},{default:t(()=>[d("div",cn,[d("div",fn,[e(P,{type:"info","show-icon":!1},{default:t(()=>[d("div",pn,[e(g,{size:"16",color:"#2080f0"},{default:t(()=>[e(a(Ke))]),_:1}),b[9]||(b[9]=d("span",null,"配置全局过滤器，作用于所有路由。全局过滤器仅支持前置处理，在路由匹配前执行。",-1))])]),_:1})]),(k(),Y(Lo,{ref_key:"globalFilterRef",ref:L,"gateway-instance-id":C.value,key:`filters-${C.value}`},null,8,["gateway-instance-id"]))])]),_:1}),e(E,{name:"test",tab:"路由测试"},{default:t(()=>[d("div",vn,[d("div",gn,[e(P,{type:"info","show-icon":!1},{default:t(()=>[d("div",mn,[e(g,{size:"16",color:"#2080f0"},{default:t(()=>[e(a(Ke))]),_:1}),b[10]||(b[10]=d("span",null,"测试路由匹配和转发功能，验证路由配置是否正确。支持模拟各种HTTP请求。",-1))])]),_:1})]),(k(),Y(Wo,{ref_key:"routeTestRef",ref:I,"gateway-instance-id":C.value,key:`test-${C.value}`},null,8,["gateway-instance-id"]))])]),_:1})]),_:1},8,["value"])]),_:1})):(k(),Y(i,{key:2,class:"empty-state-card"},{default:t(()=>[e(T,{description:"请先选择网关实例以开始管理路由配置"},{icon:t(()=>[e(g,{size:"60",color:"#d0d0d0"},{default:t(()=>[e(a(Ge))]),_:1})]),extra:t(()=>[e(o,{onClick:j,loading:_.value},{default:t(()=>b[11]||(b[11]=[u(" 重新加载网关实例 ")])),_:1},8,["loading"])]),_:1})]),_:1}))])}}}),Mn=ge(_n,[["__scopeId","data-v-fb704687"]]);export{Mn as default};
