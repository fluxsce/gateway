import{d as ce,c as X,o as x,a as c,$ as wt,b as we,r as z,f as be,g as ae,cT as dt,ag as M,ac as Ce,a7 as de,a3 as ve,I as se,v as ie,dg as Vt,cQ as Ht,R as fe,h as He,m as e,C as De,w as t,x as J,p as _t,J as u,n as l,cO as Ge,cz as Ae,al as $e,V as Ie,E as Ee,cU as Lt,q as Y,t as re,U as xe,_ as ge,ao as ze,B as Ye,M as Ze,A as et,aa as Se,ab as Ne,a8 as Tt,a9 as It,Y as xt,O as _e,T as ct,c8 as ft,H as kt,cE as qt,dh as Jt,aD as jt,a4 as Bt}from"./index-CzIbiPcR.js";import{C as tt}from"./CreateOutline-BFkdrBh9.js";import{T as Le}from"./TrashOutline-2R_Ts6Ka.js";import{u as Kt}from"./usePagination-rBGSs64l.js";import{R as Xe}from"./RefreshOutline-CA3Zk8OZ.js";import{C as bt,_ as Rt}from"./CloseOutline-D_yIhE7x.js";import{_ as at,a as St,b as Nt}from"./DataTable-CMD0QL_W.js";import{C as pt}from"./Close-VYvydJSP.js";import{_ as qe,a as it}from"./Grid-DtPWGMN9.js";import{_ as vt}from"./FormItemGridItem-B8BBWZsl.js";import{_ as Me,a as Qt,b as Gt}from"./RadioGroup-BBKwhzSS.js";import{N as lt}from"./InputNumber-DYqA-vrb.js";import{N as Je}from"./Switch-DmPX386B.js";import{_ as Fe}from"./Alert-B2DIZRvN.js";import{C as Ot,A as Pt,R as Dt,S as Wt,a as Xt}from"./RateLimitConfigForm-BXWmq9qw.js";import{N as Zt}from"./Code-C9OmRaPm.js";import{C as ot}from"./ChevronUpOutline-BNduPpW9.js";import{C as nt}from"./ChevronDownOutline-DbTRakv4.js";import{A as rt,R as Ue}from"./Refresh-DcjLw4Lw.js";import{P as ea}from"./PlayOutline-Cd76hMiY.js";import{_ as ta}from"./Table-43iCAxnl.js";import{C as aa}from"./CheckmarkCircleOutline-DaZKMTJF.js";import{S as la}from"./StopCircleOutline-iTB1pYp7.js";import{_ as oa}from"./Statistic-BLv2tZo5.js";import{A as na}from"./AlertCircleOutline-BptlU4rj.js";import{I as Ke}from"./InformationCircleOutline-DB_x5CQ_.js";import{N as ra}from"./CollapseTransition-Dv8Ngul9.js";import"./index-C9U1NGvg.js";import"./DynamicTags-BE01c2Nw.js";import"./AddOutline-DReI0b2u.js";const sa={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 512 512"},ia=ce({name:"InformationCircle",render:function(N,_){return x(),X("svg",sa,_[0]||(_[0]=[c("path",{d:"M256 56C145.72 56 56 145.72 56 256s89.72 200 200 200s200-89.72 200-200S366.28 56 256 56zm0 82a26 26 0 1 1-26 26a26 26 0 0 1 26-26zm48 226h-88a16 16 0 0 1 0-32h28v-88h-16a16 16 0 0 1 0-32h32a16 16 0 0 1 16 16v104h28a16 16 0 0 1 0 32z",fill:"currentColor"},null,-1)]))}}),ua={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 512 512"},da=ce({name:"PlayCircle",render:function(N,_){return x(),X("svg",ua,_[0]||(_[0]=[c("path",{d:"M256 48C141.31 48 48 141.31 48 256s93.31 208 208 208s208-93.31 208-208S370.69 48 256 48zm74.77 217.3l-114.45 69.14a10.78 10.78 0 0 1-16.32-9.31V186.87a10.78 10.78 0 0 1 16.32-9.31l114.45 69.14a10.89 10.89 0 0 1 0 18.6z",fill:"currentColor"},null,-1)]))}}),ca={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 512 512"},fa=ce({name:"PowerOutline",render:function(N,_){return x(),X("svg",ca,_[0]||(_[0]=[c("path",{d:"M378 108a191.41 191.41 0 0 1 70 148c0 106-86 192-192 192S64 362 64 256a192 192 0 0 1 69-148",fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"32"},null,-1),c("path",{fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"32",d:"M256 64v192"},null,-1)]))}}),pe=wt("/gateway/hub0021");async function pa(s={}){return pe.post("/queryAllGatewayInstances",s)}async function va(s){return pe.post("/queryRouteConfigs",s)}async function ga(s,N){return pe.post("/routeConfig",{routeConfigId:s,tenantId:N})}async function At(s){return pe.post("/addRouteConfig",s)}async function ut(s){return pe.post("/editRouteConfig",s)}async function ht(s,N){return pe.post("/deleteRouteConfig",{routeConfigId:s,tenantId:N})}async function ma(s){return pe.post("/addRouteAssertion",s)}async function ya(s,N){return pe.post("/routeAssertions",{routeConfigId:s,tenantId:N})}async function Qe(s){return pe.post("/editRouteAssertion",s)}async function _a(s,N){return pe.post("/deleteRouteAssertion",{routeAssertionId:s,tenantId:N})}async function ba(s){return pe.post("/routerConfigs/byInstance",{gatewayInstanceId:s})}async function Ct(s){return pe.post("/addRouterConfig",s)}async function ha(s){return pe.post("/editRouterConfig",s)}async function Et(s,N="default"){return pe.post("/serviceDefinitions/byInstance",{gatewayInstanceId:s,tenantId:N})}async function Ca(s){return pe.post("/routeStatistics",s)}function wa(){const s=we(),N=z(!1),_=z(!1),O=z([]),m=z(0),v=z([]),g=z({totalRoutes:0,activeRoutes:0,inactiveRoutes:0,exactMatchRoutes:0,prefixMatchRoutes:0,regexMatchRoutes:0}),p=be({tenantId:"default",gatewayInstanceId:"",routeName:"",routePath:"",matchType:void 0,activeFlag:void 0,pageIndex:1,pageSize:20}),R=[{label:"精确匹配",value:0},{label:"前缀匹配",value:1},{label:"正则匹配",value:2}],I=[{label:"启用",value:"Y"},{label:"禁用",value:"N"}],V=ae(()=>v.value.length>0),h=async()=>{try{N.value=!0;const a=await va(p);if(a.oK){let n=[];if(a.bizData)try{n=JSON.parse(a.bizData),Array.isArray(n)||(n=[])}catch(y){console.error("解析路由数据失败:",y),n=[]}let b={};if(a.pageQueryData)try{b=JSON.parse(a.pageQueryData)}catch(y){console.error("解析分页数据失败:",y),b={}}O.value=n,m.value=b.totalCount||n.length,await o(),console.log("路由列表加载成功:",{routeCount:n.length,totalCount:b.totalCount,pageIndex:b.pageIndex,pageSize:b.pageSize})}else console.warn("获取路由列表失败:",a.errMsg||a.popMsg),O.value=[],m.value=0,S()}catch(a){console.error("获取路由列表失败:",a),s.error("获取路由列表失败"),O.value=[],m.value=0,S()}finally{N.value=!1}},o=async()=>{try{const a={tenantId:p.tenantId||"default",gatewayInstanceId:p.gatewayInstanceId,routeName:p.routeName,routePath:p.routePath,matchType:p.matchType,activeFlag:p.activeFlag},n=await Ca(a);if(n.oK&&n.bizData)try{const b=JSON.parse(n.bizData);g.value={totalRoutes:b.totalRoutes||0,activeRoutes:b.activeRoutes||0,inactiveRoutes:b.inactiveRoutes||0,exactMatchRoutes:b.exactMatchRoutes||0,prefixMatchRoutes:b.prefixMatchRoutes||0,regexMatchRoutes:b.regexMatchRoutes||0},console.log("统计信息获取成功:",g.value)}catch(b){console.error("解析统计数据失败:",b),S()}else console.warn("获取统计信息失败:",n.errMsg||n.popMsg),S()}catch(a){console.error("获取统计信息失败:",a),S()}},S=()=>{g.value={totalRoutes:0,activeRoutes:0,inactiveRoutes:0,exactMatchRoutes:0,prefixMatchRoutes:0,regexMatchRoutes:0}};return{loading:N,submitting:_,routes:O,total:m,statistics:g,queryParams:p,selectedRoutes:v,matchTypeOptions:R,statusOptions:I,hasSelection:V,getRoutes:h,getStatistics:o,deleteRoute:async a=>{try{_.value=!0,await ht(a,p.tenantId||"default"),s.success("删除成功"),await h()}catch(n){console.error("删除失败:",n),s.error("删除失败")}finally{_.value=!1}},batchDeleteRoutes:async a=>{try{_.value=!0,await Promise.all(a.map(n=>ht(n,p.tenantId||"default"))),s.success(`成功删除 ${a.length} 个路由`),v.value=[],await h()}catch(n){console.error("批量删除失败:",n),s.error("批量删除失败")}finally{_.value=!1}},toggleRoute:async(a,n)=>{try{_.value=!0,await ut({tenantId:p.tenantId||"default",routeConfigId:a,gatewayInstanceId:p.gatewayInstanceId||"",activeFlag:n}),s.success(`${n==="Y"?"启用":"禁用"}成功`),await h()}catch(b){console.error("切换状态失败:",b),s.error("切换状态失败")}finally{_.value=!1}},batchToggleRoutes:async(a,n)=>{try{_.value=!0,await Promise.all(a.map(b=>ut({tenantId:p.tenantId||"default",routeConfigId:b,gatewayInstanceId:p.gatewayInstanceId||"",activeFlag:n}))),s.success(`成功${n==="Y"?"启用":"禁用"} ${a.length} 个路由`),v.value=[],await h()}catch(b){console.error("批量切换状态失败:",b),s.error("批量切换状态失败")}finally{_.value=!1}},copyRoute:async(a,n)=>{try{_.value=!0;const b=await ga(a,p.tenantId||"default");if(b.oK&&b.bizData){const y=JSON.parse(b.bizData);await At({...y,routeName:n,routePath:`${y.routePath}_copy`,tenantId:p.tenantId||"default",gatewayInstanceId:p.gatewayInstanceId||""}),s.success("复制成功"),await h()}}catch(b){console.error("复制失败:",b),s.error("复制失败")}finally{_.value=!1}},resetQuery:()=>{p.routeName="",p.routePath="",p.matchType=void 0,p.activeFlag=void 0,p.pageIndex=1},handleSelectionChange:a=>{v.value=a},handlePageChange:a=>{p.pageIndex=a,h()},handlePageSizeChange:a=>{p.pageSize=a,p.pageIndex=1,h()}}}function Ta(s={}){const N=we(),_=dt(),O=z(null),m=z(null),v=z(null),g=z(!1),p=z([]),R=z(!1),I=z(!1),V=ae(()=>p.value.length>0),h=ae(()=>p.value.length===1);return{editingRoute:O,viewingRoute:m,configManagementRoute:v,showDetailDialog:g,selectedRoutes:p,batchDeleting:R,batchToggling:I,hasSelection:V,hasSingleSelection:h,handleEdit:r=>{O.value=r},handleView:r=>{m.value=r,g.value=!0},handleDialogSuccess:r=>{var n,b,y;const a=O.value!==null;O.value=null,r?a?(console.log("路由编辑成功，刷新列表:",r.routeName),(n=s.onRefresh)==null||n.call(s)):(console.log("添加新路由到列表:",r.routeName),(b=s.onAddRoute)==null||b.call(s,r)):(console.log("未返回路由数据，刷新列表"),(y=s.onRefresh)==null||y.call(s))},handleDelete:(r,a)=>{_.warning({title:"确认删除",content:`确定要删除路由 "${r.routeName}" 吗？删除后不可恢复。`,positiveText:"确定删除",negativeText:"取消",onPositiveClick:async()=>{var n;try{await a(r.routeConfigId),N.success("路由删除成功"),(n=s.onRefresh)==null||n.call(s)}catch(b){console.error("删除失败:",b),N.error("删除失败，请重试")}}})},handleBatchDelete:r=>{p.value.length!==0&&_.warning({title:"确认删除",content:`确定要删除选中的 ${p.value.length} 个路由配置吗？删除后不可恢复。`,positiveText:"确定删除",negativeText:"取消",onPositiveClick:async()=>{var a;try{R.value=!0,await r(p.value),N.success(`成功删除 ${p.value.length} 个路由配置`),p.value=[],(a=s.onRefresh)==null||a.call(s)}catch(n){console.error("批量删除失败:",n),N.error("批量删除失败，请重试")}finally{R.value=!1}}})},handleBatchEnable:async r=>{var a;if(p.value.length!==0)try{I.value=!0,await r(p.value,"Y"),N.success(`成功启用 ${p.value.length} 个路由配置`),p.value=[],(a=s.onRefresh)==null||a.call(s)}catch(n){console.error("批量启用失败:",n),N.error("批量启用失败，请重试")}finally{I.value=!1}},handleBatchDisable:async r=>{var a;if(p.value.length!==0)try{I.value=!0,await r(p.value,"N"),N.success(`成功禁用 ${p.value.length} 个路由配置`),p.value=[],(a=s.onRefresh)==null||a.call(s)}catch(n){console.error("批量禁用失败:",n),N.error("批量禁用失败，请重试")}finally{I.value=!1}},handleSelectionChange:r=>{p.value=r},resetState:()=>{O.value=null,m.value=null,g.value=!1,p.value=[],R.value=!1,I.value=!1},handleRouteConfig:()=>{var n;if(p.value.length!==1){N.warning("请选择一个路由进行配置管理");return}const r=p.value[0],a=(n=s.findRouteCallback)==null?void 0:n.call(s,r);if(!a){N.error("无法找到选中的路由信息");return}v.value=a}}}function Ia(s={}){const N=m=>{const v={0:"success",1:"info",2:"warning"},g={0:"精确",1:"前缀",2:"正则"};return{type:v[m]||"default",text:g[m]||"未知"}},_=m=>{const v=m==="Y";return{type:v?"success":"error",text:v?"启用":"禁用"}};return{columns:[{type:"selection",multiple:!0,width:50},{title:"路由名称",key:"routeName",width:180,ellipsis:{tooltip:!0},render:m=>M("span",{style:{cursor:"pointer",color:"#18a058",fontWeight:"500"},onClick:()=>{var v;return(v=s.onView)==null?void 0:v.call(s,m)}},m.routeName)},{title:"路由路径",key:"routePath",width:200,ellipsis:{tooltip:!0},render:m=>M("code",{style:{background:"#f6f8fa",padding:"2px 6px",borderRadius:"3px",fontSize:"12px",color:"#24292f",border:"1px solid #d1d9e0"}},m.routePath)},{title:"HTTP方法",key:"allowedMethods",width:120,render:m=>{let v=[];if(m.allowedMethods){if(Array.isArray(m.allowedMethods))v=m.allowedMethods;else if(typeof m.allowedMethods=="string")try{const g=JSON.parse(m.allowedMethods);Array.isArray(g)&&(v=g)}catch{v=m.allowedMethods.split(",").map(g=>g.trim()).filter(g=>g)}}return v.length===0?M("span",{style:"color: #909399; font-style: italic;"},"ALL"):M(de,{size:4,wrap:!1},{default:()=>v.slice(0,2).map(g=>M(Ce,{type:"info",size:"small"},{default:()=>g})).concat(v.length>2?[M("span",{style:"color: #909399; font-size: 12px;"},`+${v.length-2}`)]:[])})}},{title:"匹配类型",key:"matchType",width:100,render:m=>{const{type:v,text:g}=N(m.matchType);return M(Ce,{type:v,size:"small"},{default:()=>g})}},{title:"状态",key:"activeFlag",width:80,render:m=>{const{type:v,text:g}=_(m.activeFlag);return M(Ce,{type:v,size:"small"},{default:()=>g})}},{title:"关联服务",key:"serviceDefinitionId",width:180,ellipsis:{tooltip:!0},render:m=>{if(!m.serviceDefinitionId)return M("span",{style:"color: #909399; font-style: italic;"},"未关联");const v=m.serviceName||"未知服务";return M("div",{style:"display: flex; flex-direction: column; gap: 2px;"},[M("span",{style:"font-weight: 500; color: #18a058; font-size: 13px;"},v),M("code",{style:{background:"#f6f8fa",padding:"1px 4px",borderRadius:"2px",fontSize:"10px",color:"#6b7280",border:"1px solid #e5e7eb"}},m.serviceDefinitionId)])}},{title:"优先级",key:"routePriority",width:80,render:m=>{var v;return M("span",{style:"font-weight: bold; color: #0066cc;"},((v=m.routePriority)==null?void 0:v.toString())||"0")}},{title:"创建时间",key:"addTime",width:160,render:m=>m.addTime?new Date(m.addTime).toLocaleString():"-"},{title:"操作",key:"actions",width:220,fixed:"right",render:m=>M(de,{size:8},{default:()=>[M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"small",type:"info",secondary:!0,onClick:()=>{var v;return(v=s.onView)==null?void 0:v.call(s,m)}},{icon:()=>M(ie,{},{default:()=>M(Vt)})}),default:()=>"查看详情"}),M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"small",type:"primary",secondary:!0,onClick:()=>{var v;return(v=s.onEdit)==null?void 0:v.call(s,m)}},{icon:()=>M(ie,{},{default:()=>M(tt)})}),default:()=>"编辑路由"}),M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"small",type:"warning",secondary:!0,onClick:()=>{var v;return(v=s.onRouteConfig)==null?void 0:v.call(s,m)}},{icon:()=>M(ie,{},{default:()=>M(Ht)})}),default:()=>"路由配置"}),M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"small",type:"error",secondary:!0,onClick:()=>{var v;return(v=s.onDelete)==null?void 0:v.call(s,m)}},{icon:()=>M(ie,{},{default:()=>M(Le)})}),default:()=>"删除路由"})]})}],getMatchTypeTagProps:N,getStatusTagProps:_}}function xa(){const s=z(null),N=be({routeName:"",routePath:"",allowedMethods:["GET"],allowedHosts:"",matchType:1,routePriority:100,stripPathPrefix:"N",rewritePath:"",enableWebsocket:"N",timeoutMs:3e4,retryCount:0,retryIntervalMs:1e3,serviceDefinitionId:"",logConfigId:"",routeMetadata:{},activeFlag:"Y",noteText:""}),_=z(!1),O=z(""),m=z(!1),v=[{label:"GET",value:"GET"},{label:"POST",value:"POST"},{label:"PUT",value:"PUT"},{label:"DELETE",value:"DELETE"},{label:"PATCH",value:"PATCH"},{label:"HEAD",value:"HEAD"},{label:"OPTIONS",value:"OPTIONS"}],g=[{label:"精确匹配",value:0},{label:"前缀匹配",value:1},{label:"正则匹配",value:2}],p={routeName:[{required:!0,message:"请输入路由名称",trigger:"blur"},{min:2,max:100,message:"路由名称长度应在 2-100 字符之间",trigger:"blur"}],routePath:[{required:!0,message:"请输入路由路径",trigger:"blur"},{pattern:/^\/.*/,message:"路由路径必须以 / 开头",trigger:"blur"},{validator:(k,j)=>{if(N.matchType===2)try{return new RegExp(j),!0}catch{return new Error("请输入有效的正则表达式")}return!0},trigger:"blur"}],allowedMethods:[{type:"array",required:!0,message:"请选择至少一个HTTP方法",trigger:"change"}],matchType:[{required:!0,message:"请选择匹配类型",trigger:"change",validator:(k,j)=>(console.log("matchType validator - value:",j,"type:",typeof j),j==null?new Error("请选择匹配类型"):[0,1,2].includes(j)?!0:new Error("请选择有效的匹配类型"))}],routePriority:[{required:!0,message:"请输入路由优先级",trigger:"change",type:"number",min:1,max:999}],serviceDefinitionId:[{required:!0,message:"请选择关联的服务定义",trigger:"change"}]},R=ae(()=>N.matchType===2),I=()=>({routeName:"",routePath:"",allowedMethods:["GET"],allowedHosts:"",matchType:1,routePriority:100,stripPathPrefix:"N",rewritePath:"",enableWebsocket:"N",timeoutMs:3e4,retryCount:0,retryIntervalMs:1e3,serviceDefinitionId:"",logConfigId:"",routeMetadata:{},activeFlag:"Y",noteText:""}),V=()=>{var k;Object.assign(N,I()),_.value=!1,O.value="",(k=s.value)==null||k.restoreValidation()},h=k=>{_.value=!0,O.value=k.routeConfigId;let j=["GET"];if(k.allowedMethods){if(Array.isArray(k.allowedMethods))j=k.allowedMethods;else if(typeof k.allowedMethods=="string")try{const $=JSON.parse(k.allowedMethods);Array.isArray($)&&(j=$)}catch{j=k.allowedMethods.split(",").map($=>$.trim()).filter($=>$)}}Object.assign(N,{routeName:k.routeName,routePath:k.routePath,allowedMethods:j,allowedHosts:k.allowedHosts||"",matchType:k.matchType,routePriority:k.routePriority,stripPathPrefix:k.stripPathPrefix,rewritePath:k.rewritePath||"",enableWebsocket:k.enableWebsocket,timeoutMs:k.timeoutMs,retryCount:k.retryCount,retryIntervalMs:k.retryIntervalMs,serviceDefinitionId:k.serviceDefinitionId||"",logConfigId:k.logConfigId||"",routeMetadata:k.routeMetadata||{},activeFlag:k.activeFlag,noteText:k.noteText||""})},o=async()=>{var k;try{return await((k=s.value)==null?void 0:k.validate()),!0}catch{return!1}},S=()=>{const k={...N};return Array.isArray(k.allowedMethods)&&(k.allowedMethods=JSON.stringify(k.allowedMethods)),k},H=k=>{var j;console.log("handleMatchTypeChange called with:",k,"type:",typeof k),N.matchType=k,console.log("formData.matchType after assignment:",N.matchType),k!==1&&(N.stripPathPrefix="N"),(j=s.value)==null||j.restoreValidation()},L=k=>{N.routePath=k,k&&!k.startsWith("/")&&(N.routePath="/"+k)},F=ae(()=>{switch(N.matchType){case 0:return"示例: /api/users/123";case 1:return"示例: /api/users (匹配 /api/users/*)";case 2:return"示例: ^/api/users/\\d+$";default:return""}}),E=ae(()=>{switch(N.matchType){case 0:return"精确匹配：请求路径必须完全匹配配置的路径";case 1:return"前缀匹配：请求路径以配置的路径为前缀即可匹配";case 2:return"正则匹配：使用正则表达式匹配请求路径";default:return""}});return fe(()=>N.matchType,k=>{H(k)}),{formRef:s,formData:N,formRules:p,isEditMode:_,editingRouteId:O,loading:m,httpMethodOptions:v,matchTypeOptions:g,isRegexMatch:R,getPathExample:F,getMatchTypeDescription:E,resetForm:V,fillFormData:h,validateForm:o,getFormData:S,handleMatchTypeChange:H,handlePathInput:L}}function ka(s={}){const N=we(),{formRef:_,formData:O,formRules:m,isEditMode:v,editingRouteId:g,httpMethodOptions:p,matchTypeOptions:R,getPathExample:I,getMatchTypeDescription:V,resetForm:h,fillFormData:o,validateForm:S,getFormData:H,handleMatchTypeChange:L,handlePathInput:F}=xa(),E=z(!1),k=z(!1),j=z(null),$=z(""),C=z([]),r=z([]),a=z(!1),n=ae({get:()=>O.activeFlag,set:q=>{O.activeFlag=q}}),b=async q=>{if(!q){r.value=[];return}try{a.value=!0;const T=await Et(q);if(T.oK&&T.bizData){const A=JSON.parse(T.bizData);r.value=A.map(Q=>({label:`${Q.serviceName} (${Q.serviceDefinitionId})`,value:Q.serviceDefinitionId,disabled:Q.activeFlag!=="Y"}))}else r.value=[],console.warn("获取服务定义列表失败:",T.errMsg)}catch(T){console.error("加载服务定义列表失败:",T),r.value=[],N.error("加载服务定义列表失败")}finally{a.value=!1}},y=q=>{console.log("选择的服务定义ID:",q)},f=()=>({key:"",value:""}),i=(q,T)=>{if(k.value=!0,j.value=q||null,$.value=T||"",q){o(q);const A=q.routeMetadata||{};C.value=Object.entries(A).map(([Q,d])=>({key:Q,value:String(d)}))}else h(),C.value=[];T&&b(T),setTimeout(()=>{var A;(A=_.value)==null||A.restoreValidation()},100)},w=()=>{k.value=!1,j.value=null,$.value="",h(),C.value=[],r.value=[]},P=async()=>{var q,T;try{if(!await S()){N.warning("请检查表单输入");return}const Q={};C.value.forEach(B=>{B.key.trim()&&B.value.trim()&&(Q[B.key.trim()]=B.value.trim())}),O.routeMetadata=Q;const d=H();if(E.value=!0,v.value){const B={...d,tenantId:"default",routeConfigId:g.value,gatewayInstanceId:$.value};console.log("Updating route with data:",B);const K=await ut(B);if(K.oK){N.success("路由更新成功");let U=null;try{if(K.bizData){const le=JSON.parse(K.bizData);le&&typeof le=="object"&&(U=le,console.log("解析到更新后的路由:",U))}}catch(le){console.error("解析更新后的路由数据失败:",le,"bizData:",K.bizData)}w(),(q=s.onSuccess)==null||q.call(s,U)}else N.error(K.errMsg||K.popMsg||"路由更新失败")}else{const B={...d,tenantId:"default",gatewayInstanceId:$.value};console.log("Creating route with data:",B);const K=await At(B);if(K.oK){N.success('路由创建成功！您可以通过"路由配置管理"功能配置高级选项');let U=null;try{if(K.bizData){const le=JSON.parse(K.bizData);le&&typeof le=="object"?(U=le,console.log("解析到新创建的路由:",U)):console.warn("返回的路由数据格式不正确:",le)}else console.warn("后端未返回路由数据")}catch(le){console.error("解析返回的路由数据失败:",le,"bizData:",K.bizData)}w(),(T=s.onSuccess)==null||T.call(s,U)}else N.error(K.errMsg||K.popMsg||"路由创建失败")}}catch(A){console.error("路由操作失败:",A),N.error(A.message||"操作失败，请重试")}finally{E.value=!1}};return fe(k,q=>{q||setTimeout(()=>{j.value=null,$.value=""},200)}),{visible:k,editingRoute:j,gatewayInstanceId:$,formRef:_,formData:O,formRules:m,isEditMode:v,editingRouteId:g,httpMethodOptions:p,matchTypeOptions:R,getPathExample:I,getMatchTypeDescription:V,activeSwitch:n,metadataList:C,createMetadataItem:f,serviceDefinitionOptions:r,loadingServiceDefinitions:a,handleServiceDefinitionChange:y,submitting:E,openDialog:i,closeDialog:w,handleSubmit:P,handleMatchTypeChange:L,handlePathInput:F}}const Ra={class:"service-definition-selector"},Sa={key:0,class:"selected-service"},Na={class:"service-card"},Oa={class:"service-header"},Pa={class:"service-avatar"},Da={class:"avatar-circle"},Aa={class:"service-main-info"},Ea={class:"service-name"},Ma={class:"service-id"},Fa={class:"service-status"},za={class:"service-details"},Ua={class:"detail-row"},$a={class:"detail-item"},Ya={class:"detail-item"},Va={class:"detail-value"},Ha={class:"detail-row"},La={class:"detail-item full-width"},qa={class:"service-actions"},Ja={key:1,class:"empty-selector"},ja={class:"selector-toolbar"},Ba=ce({__name:"ServiceDefinitionSelector",props:{modelValue:{},gatewayInstanceId:{},loading:{type:Boolean}},emits:["update:modelValue","change"],setup(s,{emit:N}){const _=s,O=N,m=we(),v=z(!1),g=z(""),p=z([]),R=z([]),I=z(!1),V=a=>({style:"cursor: pointer",onClick:()=>$(a)}),h=ae(()=>p.value.find(a=>a.serviceDefinitionId===_.modelValue)),o=ae(()=>{const a=R.value[0];return a?p.value.find(n=>n.serviceDefinitionId===a):null}),S=ae(()=>{if(!g.value)return p.value;const a=g.value.toLowerCase();return p.value.filter(n=>n.serviceName.toLowerCase().includes(a)||n.serviceDefinitionId.toLowerCase().includes(a)||n.serviceDesc&&n.serviceDesc.toLowerCase().includes(a))}),H=[{type:"selection",multiple:!1,width:50},{title:"服务ID",key:"serviceDefinitionId",width:150,render:a=>M("div",{class:"service-id-cell"},[M("div",{class:"service-id-text"},a.serviceDefinitionId),a.serviceDesc?M("div",{class:"service-desc"},a.serviceDesc):null])},{title:"服务名称",key:"serviceName",width:140,render:a=>M("div",{class:"service-name-cell"},a.serviceName)},{title:"服务类型",key:"serviceType",width:90,render:a=>{const n=a.serviceType===1?{text:"服务发现",type:"success"}:{text:"静态配置",type:"info"};return M("n-tag",{type:n.type,size:"small"},{default:()=>n.text})}},{title:"负载均衡",key:"loadBalanceAlgorithm",width:100,render:a=>M("span",{style:"font-size: 13px;"},F(a.loadBalanceAlgorithm))},{title:"健康检查",key:"healthCheckEnabled",width:90,render:a=>{const n=a.healthCheckEnabled==="Y";return M("div",{class:"health-check-cell",style:`color: ${n?"#18a058":"#8a8a8a"}; font-size: 12px; font-weight: 500;`},n?"已启用":"已禁用")}},{title:"状态",key:"activeFlag",width:70,render:a=>{const n=a.activeFlag==="Y";return M("div",{class:"active-status-cell",style:`color: ${n?"#18a058":"#d03050"}; font-size: 12px; font-weight: 500;`},n?"启用":"禁用")}}],L={pageSize:10,showSizePicker:!0,pageSizes:[8,10,15,20],showQuickJumper:!0,simple:!1,size:"small"},F=a=>({"round-robin":"轮询",random:"随机","ip-hash":"IP哈希","least-conn":"最少连接","weighted-round-robin":"加权轮询","consistent-hash":"一致性哈希"})[a]||a,E=a=>{if(!a)return"?";const n=a.charAt(0).toUpperCase();return/^[A-Z]$/.test(n)?n:a.charAt(0)},k=async()=>{if(!_.gatewayInstanceId)return p.value=[],Promise.resolve();try{I.value=!0;const a=await Et(_.gatewayInstanceId);if(a.oK&&a.bizData){const n=JSON.parse(a.bizData);p.value=n||[],_.modelValue&&!p.value.find(b=>b.serviceDefinitionId===_.modelValue)&&console.warn("当前选择的服务定义不在列表中:",_.modelValue)}else p.value=[],console.warn("获取服务定义列表失败:",a.errMsg)}catch(a){console.error("加载服务定义列表失败:",a),p.value=[],m.error("加载服务定义列表失败")}finally{I.value=!1}},j=a=>{R.value=a.map(n=>String(n))},$=a=>{R.value=[a.serviceDefinitionId]},C=()=>{o.value&&(O("update:modelValue",o.value.serviceDefinitionId),O("change",o.value),v.value=!1,m.success(`已选择服务: ${o.value.serviceName}`))},r=()=>{O("update:modelValue",null),O("change",null),m.info("已清除服务定义选择")};return fe(()=>_.gatewayInstanceId,a=>{a?k():p.value=[]}),fe(()=>v.value,a=>{a&&(R.value=_.modelValue?[_.modelValue]:[],g.value="",_.gatewayInstanceId&&k().then(()=>{_.modelValue&&(R.value=[_.modelValue])}))}),He(()=>{_.gatewayInstanceId&&k()}),(a,n)=>{const b=Ce,y=ie,f=se,i=de,w=Ae,P=De,q=Ee,T=xe,A=at,Q=Ie,d=$e;return x(),X("div",Ra,[e(P,{label:"关联服务",path:"serviceDefinitionId",required:""},{feedback:t(()=>[e(w,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>n[12]||(n[12]=[u(" 选择要关联的后端服务定义，如果没有可用选项，请先在服务管理中创建服务定义 ")])),_:1})]),default:t(()=>[e(i,{vertical:"",style:{width:"100%"}},{default:t(()=>[a.modelValue&&h.value?(x(),X("div",Sa,[c("div",Na,[c("div",Oa,[c("div",Pa,[c("div",Da,J(E(h.value.serviceName)),1)]),c("div",Aa,[c("div",Ea,J(h.value.serviceName),1),c("div",Ma,J(h.value.serviceDefinitionId),1)]),c("div",Fa,[c("div",{class:_t(["status-indicator",h.value.activeFlag==="Y"?"active":"inactive"])},J(h.value.activeFlag==="Y"?"启用":"禁用"),3)])]),c("div",za,[c("div",Ua,[c("div",$a,[n[6]||(n[6]=c("span",{class:"detail-label"},"服务类型",-1)),e(b,{type:h.value.serviceType===1?"success":"info",size:"small"},{default:t(()=>[u(J(h.value.serviceType===1?"服务发现":"静态配置"),1)]),_:1},8,["type"])]),c("div",Ya,[n[7]||(n[7]=c("span",{class:"detail-label"},"负载均衡",-1)),c("span",Va,J(F(h.value.loadBalanceAlgorithm)),1)])]),c("div",Ha,[c("div",La,[n[8]||(n[8]=c("span",{class:"detail-label"},"健康检查",-1)),c("div",{class:_t(["health-status",h.value.healthCheckEnabled==="Y"?"enabled":"disabled"])},J(h.value.healthCheckEnabled==="Y"?"已启用":"已禁用"),3)])])]),c("div",qa,[e(f,{onClick:n[0]||(n[0]=B=>v.value=!0),size:"small",secondary:""},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(Xe))]),_:1})]),default:t(()=>[n[9]||(n[9]=u(" 重新选择 "))]),_:1}),e(f,{onClick:r,size:"small",type:"error",secondary:""},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(bt))]),_:1})]),default:t(()=>[n[10]||(n[10]=u(" 清除 "))]),_:1})])])])):(x(),X("div",Ja,[e(f,{onClick:n[1]||(n[1]=B=>v.value=!0),loading:I.value,dashed:"",block:"",size:"large",class:"select-btn"},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(Ge))]),_:1})]),default:t(()=>[n[11]||(n[11]=u(" 点击选择服务定义 "))]),_:1},8,["loading"])]))]),_:1})]),_:1}),e(d,{show:v.value,"onUpdate:show":n[5]||(n[5]=B=>v.value=B),"mask-closable":!1,class:"service-selector-modal"},{default:t(()=>[e(Q,{style:{width:"1000px","max-height":"80vh"},title:"选择服务定义",bordered:!1,size:"medium",role:"dialog","aria-modal":"true"},{"header-extra":t(()=>[e(f,{quaternary:"",circle:"",onClick:n[2]||(n[2]=B=>v.value=!1)},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(bt))]),_:1})]),_:1})]),footer:t(()=>[e(i,{justify:"space-between"},{default:t(()=>[e(w,{depth:"3"},{default:t(()=>{var B;return[u(J(R.value.length>0?`已选择: ${(B=o.value)==null?void 0:B.serviceName}`:"请选择一个服务定义"),1)]}),_:1}),e(i,null,{default:t(()=>[e(f,{onClick:n[4]||(n[4]=B=>v.value=!1)},{default:t(()=>n[15]||(n[15]=[u("取消")])),_:1}),e(f,{type:"primary",onClick:C,disabled:!o.value},{default:t(()=>n[16]||(n[16]=[u(" 确定选择 ")])),_:1},8,["disabled"])]),_:1})]),_:1})]),default:t(()=>[c("div",ja,[e(i,{align:"center",justify:"space-between",size:"medium"},{default:t(()=>[e(q,{value:g.value,"onUpdate:value":n[3]||(n[3]=B=>g.value=B),placeholder:"搜索服务名称、ID或描述",clearable:"",style:{width:"350px"},size:"medium"},{prefix:t(()=>[e(y,null,{default:t(()=>[e(l(Lt))]),_:1})]),_:1},8,["value"]),e(i,{size:"small"},{default:t(()=>[S.value.length>0?(x(),Y(b,{key:0,type:"info",size:"small"},{default:t(()=>[u(" 找到 "+J(S.value.length)+" 个服务定义 ",1)]),_:1})):re("",!0),e(f,{onClick:k,loading:I.value,size:"small",secondary:""},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(Xe))]),_:1})]),default:t(()=>[n[13]||(n[13]=u(" 刷新 "))]),_:1},8,["loading"])]),_:1})]),_:1})]),e(A,{columns:H,data:S.value,loading:I.value,pagination:L,"row-key":B=>B.serviceDefinitionId,"checked-row-keys":R.value,"max-height":400,"scroll-x":800,striped:"",size:"small",class:"service-table","onUpdate:checkedRowKeys":j,onRowClick:$,"row-props":V},{empty:t(()=>[I.value?re("",!0):(x(),Y(T,{key:0,description:"暂无服务定义数据",size:"small"},{extra:t(()=>[e(f,{size:"small",onClick:k},{default:t(()=>n[14]||(n[14]=[u("重新加载")])),_:1})]),_:1}))]),_:1},8,["data","loading","row-key","checked-row-keys"])]),_:1})]),_:1},8,["show"])])}}}),Ka=ge(Ba,[["__scopeId","data-v-fe8314bd"]]),Qa={style:{display:"flex","align-items":"center",width:"100%"}},Ga=ce({__name:"RouteConfigDialog",props:{editingRoute:{default:null},gatewayInstanceId:{default:""}},emits:["success"],setup(s,{expose:N,emit:_}){const O=_,{visible:m,formRef:v,formData:g,formRules:p,isEditMode:R,httpMethodOptions:I,matchTypeOptions:V,getPathExample:h,getMatchTypeDescription:o,activeSwitch:S,metadataList:H,createMetadataItem:L,submitting:F,openDialog:E,closeDialog:k,handleSubmit:j,handleMatchTypeChange:$,handlePathInput:C}=ka({onSuccess:()=>O("success")});return N({openDialog:E,closeDialog:k}),(r,a)=>{const n=ie,b=se,y=Ee,f=vt,i=Me,w=Ae,P=Nt,q=de,T=St,A=lt,Q=Je,d=qe,B=Ie,K=et,U=Rt,le=De,ue=Ze,me=Fe,ne=Ye,Z=$e;return x(),Y(Z,{show:l(m),"onUpdate:show":a[11]||(a[11]=te=>ze(m)?m.value=te:null),style:{width:"70%",maxWidth:"900px",minWidth:"600px"}},{default:t(()=>[e(B,{title:l(R)?"编辑路由":"新建路由",bordered:!1,size:"huge",role:"dialog","aria-modal":"true"},{"header-extra":t(()=>[e(b,{quaternary:"",circle:"",onClick:l(k)},{icon:t(()=>[e(n,null,{default:t(()=>[e(l(pt))]),_:1})]),_:1},8,["onClick"])]),footer:t(()=>[e(q,{justify:"space-between"},{default:t(()=>[l(R)?(x(),Y(w,{key:0,depth:"3",style:{"font-size":"12px"}},{default:t(()=>a[22]||(a[22]=[u(' 提示：高级配置请使用"路由配置管理"功能 ')])),_:1})):re("",!0),e(q,null,{default:t(()=>[e(b,{onClick:l(k)},{default:t(()=>a[23]||(a[23]=[u("取消")])),_:1},8,["onClick"]),e(b,{type:"primary",loading:l(F),onClick:l(j)},{default:t(()=>[u(J(l(R)?"更新路由":"创建路由"),1)]),_:1},8,["loading","onClick"])]),_:1})]),_:1})]),default:t(()=>[e(ne,{ref_key:"formRef",ref:v,model:l(g),rules:l(p),"label-placement":"left","label-width":120,"require-mark-placement":"right-hanging"},{default:t(()=>[e(ue,{type:"line",animated:""},{default:t(()=>[e(K,{name:"basic",tab:"基本信息"},{default:t(()=>[e(B,{size:"small",title:"路由基本信息"},{default:t(()=>[e(d,{cols:2,"x-gap":24,"y-gap":16},{default:t(()=>[e(f,{label:"路由名称",path:"routeName"},{default:t(()=>[e(y,{value:l(g).routeName,"onUpdate:value":a[0]||(a[0]=te=>l(g).routeName=te),placeholder:"请输入路由名称",maxlength:"100","show-count":""},null,8,["value"])]),_:1}),e(f,{label:"匹配类型",path:"matchType"},{default:t(()=>[e(i,{value:l(g).matchType,"onUpdate:value":[a[1]||(a[1]=te=>l(g).matchType=te),l($)],options:l(V),placeholder:"请选择匹配类型"},null,8,["value","options","onUpdate:value"])]),_:1}),e(f,{label:"路由路径",path:"routePath",span:2},{feedback:t(()=>[e(w,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>[u(J(l(o)),1)]),_:1}),a[12]||(a[12]=c("br",null,null,-1)),e(w,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>[u(J(l(h)),1)]),_:1})]),default:t(()=>[e(y,{value:l(g).routePath,"onUpdate:value":a[2]||(a[2]=te=>l(g).routePath=te),placeholder:"请输入路由路径",onInput:l(C)},null,8,["value","onInput"])]),_:1}),e(f,{label:"HTTP方法",path:"allowedMethods",span:2},{default:t(()=>[e(T,{value:l(g).allowedMethods,"onUpdate:value":a[3]||(a[3]=te=>l(g).allowedMethods=te)},{default:t(()=>[e(q,null,{default:t(()=>[(x(!0),X(Se,null,Ne(l(I),te=>(x(),Y(P,{key:te.value,value:te.value,label:te.label},null,8,["value","label"]))),128))]),_:1})]),_:1},8,["value"])]),_:1}),e(f,{label:"允许的主机",path:"allowedHosts"},{feedback:t(()=>[e(w,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>a[13]||(a[13]=[u(" 多个主机用逗号分隔，如：api.example.com,www.example.com ")])),_:1})]),default:t(()=>[e(y,{value:l(g).allowedHosts,"onUpdate:value":a[4]||(a[4]=te=>l(g).allowedHosts=te),placeholder:"留空表示允许所有主机"},null,8,["value"])]),_:1}),e(f,{label:"路由优先级",path:"routePriority"},{feedback:t(()=>[e(w,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>a[14]||(a[14]=[u(" 数值越小优先级越高，建议范围：1-999 ")])),_:1})]),default:t(()=>[e(A,{value:l(g).routePriority,"onUpdate:value":a[5]||(a[5]=te=>l(g).routePriority=te),min:1,max:999,placeholder:"数值越小优先级越高",style:{width:"100%"}},null,8,["value"])]),_:1}),e(f,{span:2},{default:t(()=>[e(Ka,{modelValue:l(g).serviceDefinitionId,"onUpdate:modelValue":a[6]||(a[6]=te=>l(g).serviceDefinitionId=te),"gateway-instance-id":r.gatewayInstanceId},null,8,["modelValue","gateway-instance-id"])]),_:1}),e(f,{label:"日志配置",path:"logConfigId"},{default:t(()=>[e(y,{value:l(g).logConfigId,"onUpdate:value":a[7]||(a[7]=te=>l(g).logConfigId=te),placeholder:"请输入日志配置ID（可选）"},null,8,["value"])]),_:1}),e(f,{label:"启用状态",span:2},{default:t(()=>[e(Q,{value:l(S),"onUpdate:value":a[8]||(a[8]=te=>ze(S)?S.value=te:null),"checked-value":"Y","unchecked-value":"N"},{checked:t(()=>a[15]||(a[15]=[u("启用")])),unchecked:t(()=>a[16]||(a[16]=[u("禁用")])),_:1},8,["value"])]),_:1})]),_:1})]),_:1})]),_:1}),e(K,{name:"metadata",tab:"元数据配置"},{default:t(()=>[e(B,{size:"small",title:"元数据配置"},{default:t(()=>[e(q,{vertical:"",size:"medium"},{default:t(()=>[e(le,{label:"路由元数据",path:"routeMetadata"},{feedback:t(()=>[e(w,{depth:"3",style:{"font-size":"12px"}},{default:t(()=>a[17]||(a[17]=[u(" 用于存储路由的自定义元数据信息 ")])),_:1})]),default:t(()=>[e(U,{value:l(H),"onUpdate:value":a[9]||(a[9]=te=>ze(H)?H.value=te:null),"on-create":l(L)},{default:t(({value:te})=>[c("div",Qa,[e(y,{value:te.key,"onUpdate:value":oe=>te.key=oe,placeholder:"键",style:{"margin-right":"12px",flex:"1"}},null,8,["value","onUpdate:value"]),e(y,{value:te.value,"onUpdate:value":oe=>te.value=oe,placeholder:"值",style:{flex:"2"}},null,8,["value","onUpdate:value"])])]),_:1},8,["value","on-create"])]),_:1}),e(le,{label:"备注信息",path:"noteText"},{default:t(()=>[e(y,{value:l(g).noteText,"onUpdate:value":a[10]||(a[10]=te=>l(g).noteText=te),type:"textarea",placeholder:"请输入备注信息",autosize:{minRows:3,maxRows:6},maxlength:"500","show-count":""},null,8,["value"])]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),l(R)?re("",!0):(x(),Y(B,{key:0,size:"small",style:{"margin-top":"16px"}},{default:t(()=>[e(me,{type:"info","show-icon":!1},{header:t(()=>[e(w,{strong:""},{default:t(()=>a[18]||(a[18]=[u("高级配置说明")])),_:1})]),default:t(()=>[a[19]||(a[19]=u(' 路由创建成功后，您可以通过"路由配置管理"功能来配置： ')),a[20]||(a[20]=c("ul",{style:{margin:"8px 0","padding-left":"20px"}},[c("li",null,"断言设置（路由匹配条件）"),c("li",null,"过滤器配置（请求处理逻辑）"),c("li",null,"CORS跨域配置"),c("li",null,"认证授权配置"),c("li",null,"限流策略配置")],-1)),a[21]||(a[21]=u(" 这样可以确保在路由存在的基础上进行精确的配置管理。 "))]),_:1})]),_:1}))]),_:1},8,["model","rules"])]),_:1},8,["title"])]),_:1},8,["show"])}}}),Wa=ge(Ga,[["__scopeId","data-v-847974fe"]]);function Xa(s){const N=z(!1),_=ae(()=>s?[{predicateType:"Header",activeFlag:"Y",predicateConfig:{headerName:"Authorization",headerValue:"Bearer *",operator:"matches"}},{predicateType:"Query",activeFlag:"Y",predicateConfig:{paramName:"version",paramValue:"v1",operator:"equals"}}]:[]),O=ae(()=>s?[{filterType:"AddRequestHeader",executionTiming:1,filterPriority:100,activeFlag:"Y",filterConfig:{headerName:"X-Route-ID",headerValue:s.routeConfigId}},{filterType:"RateLimiter",executionTiming:1,filterPriority:50,activeFlag:"Y",filterConfig:{rateLimit:100,rateLimitUnit:"minute",burstSize:10}}]:[]),m=ae(()=>s?{allowOrigins:["*"],allowMethods:["GET","POST","PUT","DELETE"],allowHeaders:["Content-Type","Authorization"],exposeHeaders:["X-Total-Count"],allowCredentials:!0,maxAge:3600,activeFlag:"Y"}:null),v=ae(()=>s?{authType:"JWT",authConfig:{secretKey:"your-secret-key",algorithm:"HS256",expirationTime:3600,issuer:"api-gateway"},activeFlag:"Y"}:null),g=ae(()=>s?{rateLimit:1e3,rateLimitUnit:"minute",burstSize:100,activeFlag:"Y"}:null);return{loading:N,routePredicates:_,routeFilters:O,routeCorsConfig:m,routeAuthConfig:v,routeRateLimitConfig:g,getExecutionTimingText:I=>({1:"请求前",2:"请求后",3:"响应前"})[I]||"未知",refreshData:async()=>{if(s){N.value=!0;try{console.log("Refreshing route detail data for:",s.routeConfigId)}catch(I){console.error("Failed to refresh route detail data:",I)}finally{N.value=!1}}}}}const Za={key:0,class:"route-detail"},el={key:0,class:"metadata-container"},tl={key:0,class:"note-text"},al={class:"config-section"},ll={key:1},ol={class:"config-section"},nl={key:1},rl={class:"config-section"},sl={class:"config-section"},il={class:"config-section"},ul={key:1,class:"empty-state"},dl=ce({__name:"RouteDetailDialog",props:{visible:{type:Boolean},route:{default:null}},emits:["update:visible"],setup(s,{emit:N}){const _=s,O=N,m=ae(()=>{var F;return((F=_.route)==null?void 0:F.routeMetadata)&&Object.keys(_.route.routeMetadata).length>0}),v=ae(()=>{var F;if(!((F=_.route)!=null&&F.allowedMethods))return["GET"];if(Array.isArray(_.route.allowedMethods))return _.route.allowedMethods;if(typeof _.route.allowedMethods=="string")try{const E=JSON.parse(_.route.allowedMethods);if(Array.isArray(E))return E}catch{return _.route.allowedMethods.split(",").map(E=>E.trim()).filter(E=>E)}return["GET"]}),{routePredicates:g,routeFilters:p,routeCorsConfig:R,routeAuthConfig:I,routeRateLimitConfig:V,getExecutionTimingText:h}=Xa(_.route),o=F=>({0:"精确匹配",1:"前缀匹配",2:"正则匹配"})[F]||"未知",S=F=>({0:"info",1:"success",2:"warning"})[F]||"default",H=F=>F?new Date(F).toLocaleString("zh-CN",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"}):"-",L=()=>{O("update:visible",!1)};return(F,E)=>{const k=ie,j=se,$=It,C=Ae,r=Ce,a=de,n=Tt,b=xt,y=Zt,f=et,i=xe,w=Ie,P=Ze,q=$e;return x(),Y(q,{show:_.visible,"onUpdate:show":E[0]||(E[0]=T=>_.visible=T),style:{width:"80%",maxWidth:"1200px",minWidth:"800px"}},{default:t(()=>[e(w,{title:"路由配置详情",bordered:!1,size:"huge",role:"dialog","aria-modal":"true"},{"header-extra":t(()=>[e(j,{quaternary:"",circle:"",onClick:L},{icon:t(()=>[e(k,null,{default:t(()=>[e(l(pt))]),_:1})]),_:1})]),footer:t(()=>[e(a,{justify:"end"},{default:t(()=>[e(j,{onClick:L},{default:t(()=>E[12]||(E[12]=[u("关闭")])),_:1})]),_:1})]),default:t(()=>[F.route?(x(),X("div",Za,[e(P,{type:"line",animated:""},{default:t(()=>[e(f,{name:"basic",tab:"基本信息"},{default:t(()=>[e(n,{column:2,bordered:""},{default:t(()=>[e($,{label:"路由名称"},{default:t(()=>[u(J(F.route.routeName),1)]),_:1}),e($,{label:"路由ID"},{default:t(()=>[e(C,{code:""},{default:t(()=>[u(J(F.route.routeConfigId),1)]),_:1})]),_:1}),e($,{label:"路由路径",span:2},{default:t(()=>[e(C,{code:""},{default:t(()=>[u(J(F.route.routePath),1)]),_:1})]),_:1}),e($,{label:"匹配类型"},{default:t(()=>[e(r,{type:S(F.route.matchType),size:"small"},{default:t(()=>[u(J(o(F.route.matchType)),1)]),_:1},8,["type"])]),_:1}),e($,{label:"路由优先级"},{default:t(()=>[e(r,{type:"default",size:"small"},{default:t(()=>[u(J(F.route.routePriority),1)]),_:1})]),_:1}),e($,{label:"HTTP方法",span:2},{default:t(()=>[e(a,{size:"small"},{default:t(()=>[(x(!0),X(Se,null,Ne(v.value,T=>(x(),Y(r,{key:T,type:"default",size:"small"},{default:t(()=>[u(J(T),1)]),_:2},1024))),128))]),_:1})]),_:1}),e($,{label:"允许的主机"},{default:t(()=>[u(J(F.route.allowedHosts||"所有主机"),1)]),_:1}),e($,{label:"状态"},{default:t(()=>[e(r,{type:F.route.activeFlag==="Y"?"success":"error",size:"small"},{default:t(()=>[u(J(F.route.activeFlag==="Y"?"启用":"禁用"),1)]),_:1},8,["type"])]),_:1})]),_:1}),e(b),e(n,{title:"关联信息",column:1,bordered:""},{default:t(()=>[e($,{label:"关联服务"},{default:t(()=>[F.route.serviceDefinitionId?(x(),Y(C,{key:0,code:""},{default:t(()=>[u(J(F.route.serviceDefinitionId),1)]),_:1})):(x(),Y(C,{key:1,depth:"3"},{default:t(()=>E[1]||(E[1]=[u("未关联")])),_:1}))]),_:1}),e($,{label:"日志配置"},{default:t(()=>[F.route.logConfigId?(x(),Y(C,{key:0,code:""},{default:t(()=>[u(J(F.route.logConfigId),1)]),_:1})):(x(),Y(C,{key:1,depth:"3"},{default:t(()=>E[2]||(E[2]=[u("使用实例级配置")])),_:1}))]),_:1})]),_:1}),e(b),e(n,{title:"元数据信息",column:1,bordered:""},{default:t(()=>[e($,{label:"路由元数据"},{default:t(()=>[m.value?(x(),X("div",el,[e(y,{code:JSON.stringify(F.route.routeMetadata,null,2),language:"json","show-line-numbers":""},null,8,["code"])])):(x(),Y(C,{key:1,depth:"3"},{default:t(()=>E[3]||(E[3]=[u("无元数据")])),_:1}))]),_:1}),e($,{label:"备注信息"},{default:t(()=>[F.route.noteText?(x(),X("div",tl,J(F.route.noteText),1)):(x(),Y(C,{key:1,depth:"3"},{default:t(()=>E[4]||(E[4]=[u("无备注")])),_:1}))]),_:1})]),_:1}),e(b),e(n,{title:"系统信息",column:2,bordered:""},{default:t(()=>[e($,{label:"创建时间"},{default:t(()=>[u(J(H(F.route.addTime)),1)]),_:1}),e($,{label:"创建人"},{default:t(()=>[u(J(F.route.addWho),1)]),_:1}),e($,{label:"更新时间"},{default:t(()=>[u(J(H(F.route.editTime)),1)]),_:1}),e($,{label:"更新人"},{default:t(()=>[u(J(F.route.editWho),1)]),_:1}),e($,{label:"版本号"},{default:t(()=>[e(r,{type:"info",size:"small"},{default:t(()=>[u("v"+J(F.route.currentVersion),1)]),_:1})]),_:1}),e($,{label:"操作序列"},{default:t(()=>[e(C,{code:""},{default:t(()=>[u(J(F.route.oprSeqFlag),1)]),_:1})]),_:1})]),_:1})]),_:1}),e(f,{name:"predicates",tab:"断言组配置"},{default:t(()=>[c("div",al,[l(g).length?(x(),X("div",ll,[(x(!0),X(Se,null,Ne(l(g),(T,A)=>(x(),Y(w,{key:A,title:`断言组 ${A+1}`,size:"small",style:{"margin-bottom":"16px"}},{default:t(()=>[e(n,{column:2,size:"small"},{default:t(()=>[e($,{label:"断言类型"},{default:t(()=>[e(r,{type:"primary",size:"small"},{default:t(()=>[u(J(T.predicateType),1)]),_:2},1024)]),_:2},1024),e($,{label:"状态"},{default:t(()=>[e(r,{type:T.activeFlag==="Y"?"success":"default",size:"small"},{default:t(()=>[u(J(T.activeFlag==="Y"?"启用":"禁用"),1)]),_:2},1032,["type"])]),_:2},1024),e($,{label:"配置参数",span:2},{default:t(()=>[T.predicateConfig?(x(),Y(y,{key:0,code:JSON.stringify(T.predicateConfig,null,2),language:"json"},null,8,["code"])):(x(),Y(C,{key:1,depth:"3"},{default:t(()=>E[6]||(E[6]=[u("无配置")])),_:1}))]),_:2},1024)]),_:2},1024)]),_:2},1032,["title"]))),128))])):(x(),Y(i,{key:0,description:"暂无断言组配置"},{extra:t(()=>[e(C,{depth:"3"},{default:t(()=>E[5]||(E[5]=[u(" 断言组用于定义路由匹配的额外条件，如请求头、参数、时间等 ")])),_:1})]),_:1}))])]),_:1}),e(f,{name:"filters",tab:"过滤器配置"},{default:t(()=>[c("div",ol,[l(p).length?(x(),X("div",nl,[(x(!0),X(Se,null,Ne(l(p),(T,A)=>(x(),Y(w,{key:A,title:`过滤器 ${A+1}`,size:"small",style:{"margin-bottom":"16px"}},{default:t(()=>[e(n,{column:2,size:"small"},{default:t(()=>[e($,{label:"过滤器类型"},{default:t(()=>[e(r,{type:"info",size:"small"},{default:t(()=>[u(J(T.filterType),1)]),_:2},1024)]),_:2},1024),e($,{label:"执行时机"},{default:t(()=>[e(r,{type:"warning",size:"small"},{default:t(()=>[u(J(l(h)(T.executionTiming)),1)]),_:2},1024)]),_:2},1024),e($,{label:"优先级"},{default:t(()=>[u(J(T.filterPriority),1)]),_:2},1024),e($,{label:"状态"},{default:t(()=>[e(r,{type:T.activeFlag==="Y"?"success":"default",size:"small"},{default:t(()=>[u(J(T.activeFlag==="Y"?"启用":"禁用"),1)]),_:2},1032,["type"])]),_:2},1024),e($,{label:"配置参数",span:2},{default:t(()=>[T.filterConfig?(x(),Y(y,{key:0,code:JSON.stringify(T.filterConfig,null,2),language:"json"},null,8,["code"])):(x(),Y(C,{key:1,depth:"3"},{default:t(()=>E[8]||(E[8]=[u("无配置")])),_:1}))]),_:2},1024)]),_:2},1024)]),_:2},1032,["title"]))),128))])):(x(),Y(i,{key:0,description:"暂无过滤器配置"},{extra:t(()=>[e(C,{depth:"3"},{default:t(()=>E[7]||(E[7]=[u(" 过滤器用于对请求和响应进行处理，如添加请求头、重写路径等 ")])),_:1})]),_:1}))])]),_:1}),e(f,{name:"cors",tab:"CORS配置"},{default:t(()=>[c("div",rl,[l(R)?(x(),Y(Ot,{key:1,"model-value":l(R),readonly:!0,"onUpdate:modelValue":()=>{}},null,8,["model-value"])):(x(),Y(i,{key:0,description:"暂无CORS配置"},{extra:t(()=>[e(C,{depth:"3"},{default:t(()=>E[9]||(E[9]=[u(" CORS配置用于处理跨域请求，配置允许的源、方法、头部等 ")])),_:1})]),_:1}))])]),_:1}),e(f,{name:"auth",tab:"认证配置"},{default:t(()=>[c("div",sl,[l(I)?(x(),Y(Pt,{key:1,"model-value":l(I),readonly:!0,"onUpdate:modelValue":()=>{}},null,8,["model-value"])):(x(),Y(i,{key:0,description:"暂无认证配置"},{extra:t(()=>[e(C,{depth:"3"},{default:t(()=>E[10]||(E[10]=[u(" 认证配置用于设置路由的身份验证方式，如JWT、OAuth等 ")])),_:1})]),_:1}))])]),_:1}),e(f,{name:"rateLimit",tab:"限流配置"},{default:t(()=>[c("div",il,[l(V)?(x(),Y(Dt,{key:1,"model-value":l(V),readonly:!0,"onUpdate:modelValue":()=>{}},null,8,["model-value"])):(x(),Y(i,{key:0,description:"暂无限流配置"},{extra:t(()=>[e(C,{depth:"3"},{default:t(()=>E[11]||(E[11]=[u(" 限流配置用于控制请求频率，防止系统过载 ")])),_:1})]),_:1}))])]),_:1})]),_:1})])):(x(),X("div",ul,[e(i,{description:"暂无数据"})]))]),_:1})]),_:1},8,["show"])}}}),cl=ge(dl,[["__scopeId","data-v-6704ba44"]]),gt=[{label:"请求头处理",value:"header",description:"添加、修改或删除HTTP请求头/响应头"},{label:"查询参数处理",value:"query-param",description:"处理URL查询参数"},{label:"请求体处理",value:"body",description:"处理和验证请求体内容"},{label:"前缀剥离",value:"strip",description:"移除请求路径中的指定前缀"},{label:"路径重写",value:"rewrite",description:"重写或转换请求路径"},{label:"HTTP方法控制",value:"method",description:"控制允许的HTTP方法"},{label:"Cookie处理",value:"cookie",description:"处理HTTP Cookie"},{label:"响应处理",value:"response",description:"处理后端响应"}],fl=[{label:"前置处理",value:"pre-routing",description:"在路由匹配前执行"},{label:"后置处理",value:"post-routing",description:"在路由匹配后执行"},{label:"响应前处理",value:"pre-response",description:"在响应返回前执行"}];fl.filter(s=>s.value==="pre-routing");const pl=[{label:"添加",value:"add",description:"添加新的请求头"},{label:"设置",value:"set",description:"设置请求头（替换现有值）"},{label:"移除",value:"remove",description:"移除指定请求头"},{label:"重命名",value:"rename",description:"重命名请求头"}],vl=[{label:"添加",value:"add",description:"添加新的查询参数"},{label:"设置",value:"set",description:"设置查询参数（替换现有值）"},{label:"移除",value:"remove",description:"移除指定查询参数"},{label:"重命名",value:"rename",description:"重命名查询参数"}],gl=[{label:"转换",value:"transform",description:"转换请求体格式"},{label:"验证",value:"validate",description:"验证请求体内容"},{label:"修改",value:"modify",description:"修改请求体字段"},{label:"过滤",value:"filter",description:"过滤请求体字段"}],ml=[{label:"添加",value:"add",description:"添加新的Cookie"},{label:"移除",value:"remove",description:"移除指定Cookie"},{label:"修改",value:"modify",description:"修改Cookie值"},{label:"验证",value:"validate",description:"验证Cookie格式"},{label:"过滤",value:"filter",description:"过滤Cookie内容"}],yl=[{label:"允许模式",value:"allow",description:"只允许指定的HTTP方法"},{label:"拒绝模式",value:"deny",description:"拒绝指定的HTTP方法"}],_l=[{label:"简单替换",value:"simple",description:"直接替换路径中的特定部分"},{label:"正则替换",value:"regex",description:"使用正则表达式匹配和替换路径"}],bl=[{label:"添加响应头",value:"add_headers",description:"添加HTTP响应头"},{label:"修改响应体",value:"modify_body",description:"修改响应体内容"},{label:"设置状态码",value:"set_status",description:"设置HTTP状态码"},{label:"过滤响应头",value:"filter_headers",description:"过滤响应头内容"},{label:"转换响应体",value:"transform_body",description:"转换响应体格式"},{label:"验证响应",value:"validate_response",description:"验证响应数据"}],hl=["GET","POST","PUT","DELETE","PATCH","HEAD","OPTIONS"],Cl=["application/json","application/xml","text/plain","text/html","application/x-www-form-urlencoded","multipart/form-data"],wl={class:"route-filter-list"},Tl=ce({__name:"RouteFilterList",props:{filters:{},loading:{type:Boolean,default:!1}},emits:["edit","delete","toggle-status","move-up","move-down"],setup(s,{emit:N}){const _=s,O=N,m=dt(),v=z(),g=z({page:1,pageSize:10,showSizePicker:!0,pageSizes:[10,20,50],showQuickJumper:!0,prefix:S=>`共 ${S.itemCount} 条`}),p=S=>{const H=gt.find(L=>L.value===S);return(H==null?void 0:H.label)||S},R=S=>({header:"primary","query-param":"info",body:"warning",strip:"success",rewrite:"success",method:"error",cookie:"default",response:"info"})[S]||"default",I=S=>({"pre-routing":"前置处理","post-routing":"后置处理","pre-response":"响应前处理"})[S]||S,V=S=>({"pre-routing":"success","post-routing":"info","pre-response":"warning"})[S]||"default",h=ae(()=>[{title:"执行顺序",key:"filterOrder",width:100,render:(S,H)=>M(de,{align:"center"},{default:()=>[M("span",{style:"font-weight: bold; color: #0066cc;"},S.filterOrder),M(de,{size:4},{default:()=>[M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"tiny",tertiary:!0,circle:!0,disabled:H===0,onClick:()=>O("move-up",S)},{icon:()=>M(ie,null,{default:()=>M(ot)})}),default:()=>"向上移动"}),M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"tiny",tertiary:!0,circle:!0,disabled:H===_.filters.length-1,onClick:()=>O("move-down",S)},{icon:()=>M(ie,null,{default:()=>M(nt)})}),default:()=>"向下移动"})]})]})},{title:"过滤器名称",key:"filterName",width:200,ellipsis:{tooltip:!0}},{title:"类型",key:"filterType",width:140,render:S=>M(Ce,{type:R(S.filterType),size:"small"},{default:()=>p(S.filterType)})},{title:"执行时机",key:"filterAction",width:120,render:S=>M(Ce,{type:V(S.filterAction),size:"small"},{default:()=>I(S.filterAction)})},{title:"状态",key:"activeFlag",width:80,render:S=>M(Je,{value:S.activeFlag==="Y",onUpdateValue:()=>O("toggle-status",S)})},{title:"描述",key:"filterDesc",ellipsis:{tooltip:!0},render:S=>S.filterDesc||"-"},{title:"创建时间",key:"addTime",width:160,render:S=>S.addTime?new Date(S.addTime).toLocaleString():"-"},{title:"操作",key:"actions",width:120,fixed:"right",render:S=>M(de,{size:8},{default:()=>[M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"small",type:"primary",secondary:!0,onClick:()=>O("edit",S)},{icon:()=>M(ie,null,{default:()=>M(tt)})}),default:()=>"编辑过滤器"}),M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"small",type:"error",secondary:!0,onClick:()=>o(S)},{icon:()=>M(ie,null,{default:()=>M(Le)})}),default:()=>"删除过滤器"})]})}]),o=S=>{m.warning({title:"确认删除",content:`确定要删除过滤器"${S.filterName}"吗？此操作不可恢复。`,positiveText:"删除",negativeText:"取消",onPositiveClick:()=>{O("delete",S)}})};return(S,H)=>(x(),X("div",wl,[e(l(at),{ref_key:"dataTableRef",ref:v,columns:h.value,data:S.filters,pagination:g.value,loading:S.loading,"row-key":L=>L.filterConfigId,"scroll-x":1200,striped:"",size:"small"},{empty:t(()=>[e(l(xe),{description:"暂无路由过滤器配置"})]),_:1},8,["columns","data","pagination","loading","row-key"])]))}}),Il=ge(Tl,[["__scopeId","data-v-32798a9e"]]);var We=(s=>(s[s.EXACT=0]="EXACT",s[s.PREFIX=1]="PREFIX",s[s.REGEX=2]="REGEX",s))(We||{}),ee=(s=>(s.PATH="PATH",s.HEADER="HEADER",s.QUERY="QUERY",s.COOKIE="COOKIE",s.IP="IP",s))(ee||{}),G=(s=>(s.EQUAL="EQUAL",s.NOT_EQUAL="NOT_EQUAL",s.CONTAINS="CONTAINS",s.NOT_CONTAINS="NOT_CONTAINS",s.MATCHES="MATCHES",s.NOT_MATCHES="NOT_MATCHES",s.STARTS_WITH="STARTS_WITH",s.ENDS_WITH="ENDS_WITH",s.IN="IN",s.NOT_IN="NOT_IN",s))(G||{});function xl(s={}){const N=we(),_=z(),O=z(!1),m=z({assertionName:"",assertionType:ee.HEADER,assertionOperator:G.EQUAL,fieldName:"",expectedValue:"",patternValue:"",caseSensitive:"Y",assertionOrder:100,isRequired:"Y",assertionDesc:"",activeFlag:"Y",noteText:""}),v=[{label:"路径匹配",value:ee.PATH},{label:"请求头",value:ee.HEADER},{label:"查询参数",value:ee.QUERY},{label:"Cookie",value:ee.COOKIE},{label:"IP地址",value:ee.IP}],g=ae(()=>{const C=[{label:"等于",value:G.EQUAL},{label:"不等于",value:G.NOT_EQUAL},{label:"包含",value:G.CONTAINS},{label:"不包含",value:G.NOT_CONTAINS},{label:"正则匹配",value:G.MATCHES},{label:"正则不匹配",value:G.NOT_MATCHES},{label:"开头匹配",value:G.STARTS_WITH},{label:"结尾匹配",value:G.ENDS_WITH}];return m.value.assertionType===ee.IP?[{label:"等于",value:G.EQUAL},{label:"不等于",value:G.NOT_EQUAL},{label:"在列表中",value:G.IN},{label:"不在列表中",value:G.NOT_IN},{label:"正则匹配",value:G.MATCHES}]:C}),p=ae(()=>[ee.HEADER,ee.QUERY,ee.COOKIE].includes(m.value.assertionType)),R=ae(()=>[G.EQUAL,G.NOT_EQUAL,G.CONTAINS,G.NOT_CONTAINS,G.STARTS_WITH,G.ENDS_WITH,G.IN,G.NOT_IN].includes(m.value.assertionOperator)),I=ae(()=>[G.MATCHES,G.NOT_MATCHES].includes(m.value.assertionOperator)),V=ae(()=>m.value.assertionType!==ee.IP),h=ae(()=>{var n;const C=m.value.assertionType,r=m.value.assertionOperator;return((n={[ee.HEADER]:{[G.EQUAL]:{title:"请求头等值匹配示例",content:`字段名称: Authorization
期望值: Bearer token123
说明: 检查Authorization头是否等于"Bearer token123"`},[G.MATCHES]:{title:"请求头正则匹配示例",content:`字段名称: User-Agent
匹配模式: ^Mozilla.*Chrome.*$
说明: 检查User-Agent头是否匹配Chrome浏览器的模式`},[G.CONTAINS]:{title:"请求头包含匹配示例",content:`字段名称: Accept
期望值: application/json
说明: 检查Accept头是否包含"application/json"`}},[ee.QUERY]:{[G.EQUAL]:{title:"查询参数等值匹配示例",content:`字段名称: version
期望值: v1
说明: 检查URL查询参数version是否等于"v1"`},[G.IN]:{title:"查询参数列表匹配示例",content:`字段名称: type
期望值: user,admin,guest
说明: 检查type参数值是否在指定列表中（逗号分隔）`}},[ee.COOKIE]:{[G.EQUAL]:{title:"Cookie等值匹配示例",content:`字段名称: session_id
期望值: abc123
说明: 检查Cookie中session_id是否等于"abc123"`},[G.MATCHES]:{title:"Cookie正则匹配示例",content:`字段名称: user_role
匹配模式: ^(admin|user)$
说明: 检查user_role Cookie值是否为admin或user`}},[ee.PATH]:{[G.MATCHES]:{title:"路径正则匹配示例",content:`匹配模式: ^/api/v[1-9]/users/\\d+$
说明: 匹配类似"/api/v1/users/123"的路径格式`},[G.STARTS_WITH]:{title:"路径前缀匹配示例",content:`期望值: /api/admin
说明: 匹配所有以"/api/admin"开头的路径`}},[ee.IP]:{[G.EQUAL]:{title:"IP地址等值匹配示例",content:`期望值: 192.168.1.100
说明: 只允许特定IP地址访问`},[G.IN]:{title:"IP地址列表匹配示例",content:`期望值: 192.168.1.100,10.0.0.1,172.16.0.1
说明: 允许指定IP列表中的地址访问（逗号分隔）`},[G.MATCHES]:{title:"IP地址正则匹配示例",content:`匹配模式: ^192\\.168\\.1\\..+$
说明: 匹配192.168.1.x网段的所有IP地址`}}}[C])==null?void 0:n[r])||null}),o={assertionName:[{required:!0,message:"请输入断言名称",trigger:"blur"},{min:2,max:100,message:"断言名称长度应在2-100字符之间",trigger:"blur"}],assertionType:[{required:!0,message:"请选择断言类型",trigger:"change"}],assertionOperator:[{required:!0,message:"请选择操作符",trigger:"change"}],fieldName:[{required:!0,validator:(C,r)=>p.value&&!(r!=null&&r.trim())?new Error("请输入字段名称"):!0,trigger:"blur"}],expectedValue:[{required:!0,validator:(C,r)=>R.value&&!(r!=null&&r.trim())?new Error("请输入期望值"):!0,trigger:"blur"}],patternValue:[{required:!0,validator:(C,r)=>{if(I.value&&!(r!=null&&r.trim()))return new Error("请输入匹配模式");if(I.value&&(r!=null&&r.trim()))try{new RegExp(r.trim())}catch{return new Error("请输入有效的正则表达式")}return!0},trigger:"blur"}],assertionOrder:[{required:!0,type:"number",message:"请输入执行顺序",trigger:"blur"},{type:"number",min:0,max:9999,message:"执行顺序应在0-9999之间",trigger:"blur"}]},S=()=>({[ee.HEADER]:"请输入请求头名称，如：Authorization",[ee.QUERY]:"请输入查询参数名称，如：version",[ee.COOKIE]:"请输入Cookie名称，如：session_id"})[m.value.assertionType]||"请输入字段名称",H=()=>{const C=m.value.assertionType,r=m.value.assertionOperator;return r===G.IN||r===G.NOT_IN?"请输入值列表，用逗号分隔，如：value1,value2,value3":{[ee.HEADER]:"请输入期望的请求头值",[ee.QUERY]:"请输入期望的查询参数值",[ee.COOKIE]:"请输入期望的Cookie值",[ee.PATH]:"请输入期望的路径值",[ee.IP]:"请输入IP地址，如：192.168.1.100"}[C]||"请输入期望值"},L=C=>{m.value.fieldName="",m.value.expectedValue="",m.value.patternValue="",C===ee.IP?m.value.assertionOperator=G.EQUAL:C===ee.PATH?m.value.assertionOperator=G.MATCHES:m.value.assertionOperator=G.EQUAL},F=C=>{m.value.expectedValue="",m.value.patternValue=""},E=()=>{var C;m.value={assertionName:"",assertionType:ee.HEADER,assertionOperator:G.EQUAL,fieldName:"",expectedValue:"",patternValue:"",caseSensitive:"Y",assertionOrder:100,isRequired:"Y",assertionDesc:"",activeFlag:"Y",noteText:""},(C=_.value)==null||C.restoreValidation()};return{formRef:_,saving:O,formData:m,assertionTypeOptions:v,operatorOptions:g,needsFieldName:p,needsExpectedValue:R,needsPatternValue:I,supportsCaseSensitive:V,configExample:h,formRules:o,getFieldNamePlaceholder:S,getExpectedValuePlaceholder:H,handleAssertionTypeChange:L,handleOperatorChange:F,resetForm:E,initializeForm:C=>{C?m.value={assertionName:C.assertionName,assertionType:C.assertionType,assertionOperator:C.assertionOperator,fieldName:C.fieldName||"",expectedValue:C.expectedValue||"",patternValue:C.patternValue||"",caseSensitive:C.caseSensitive,assertionOrder:C.assertionOrder,isRequired:C.isRequired,assertionDesc:C.assertionDesc||"",activeFlag:C.activeFlag,noteText:C.noteText||""}:E()},handleSave:async()=>{var C;try{await((C=_.value)==null?void 0:C.validate()),O.value=!0,s.onSave&&await s.onSave({...m.value})}catch(r){console.error("表单验证失败:",r),N.error("请检查表单输入")}finally{O.value=!1}},handleDialogShow:C=>{C&&_e(()=>{var r;(r=_.value)==null||r.restoreValidation()})}}}const kl={class:"assertion-dialog-content"},Rl={style:{"margin-top":"8px"}},Sl={style:{margin:"0","font-size":"12px","white-space":"pre-wrap"}},Nl=ce({__name:"RouteAssertionDialog",props:{show:{type:Boolean},assertionData:{},routeConfigId:{}},emits:["update:show","save"],setup(s,{emit:N}){const _=s,O=N,{formRef:m,saving:v,formData:g,assertionTypeOptions:p,operatorOptions:R,needsFieldName:I,needsExpectedValue:V,needsPatternValue:h,supportsCaseSensitive:o,configExample:S,formRules:H,getFieldNamePlaceholder:L,getExpectedValuePlaceholder:F,handleAssertionTypeChange:E,handleOperatorChange:k,initializeForm:j,handleSave:$,handleDialogShow:C}=xl({onSave:async f=>{O("save",f)}}),r=ae({get:()=>_.show,set:f=>O("update:show",f)}),a=ae(()=>{var f;return!!((f=_.assertionData)!=null&&f.routeAssertionId)}),n=ae(()=>a.value?"编辑路由断言":"新建路由断言"),b=()=>{r.value=!1},y=async()=>{await $(),v.value||(r.value=!1)};return fe(()=>_.assertionData,f=>{j(f)},{immediate:!0}),fe(()=>_.show,f=>{C(f)}),(f,i)=>{const w=Ee,P=De,q=Me,T=lt,A=Gt,Q=Qt,d=Ie,B=ie,K=ve,U=Fe,le=Ye,ue=se,me=de,ne=$e;return x(),Y(ne,{show:r.value,"onUpdate:show":i[12]||(i[12]=Z=>r.value=Z),preset:"dialog",title:n.value,style:{width:"800px"},"mask-closable":!1,"close-on-esc":!1},{action:t(()=>[e(me,null,{default:t(()=>[e(ue,{onClick:b},{default:t(()=>i[20]||(i[20]=[u("取消")])),_:1}),e(ue,{type:"primary",onClick:y,loading:l(v)},{default:t(()=>[u(J(a.value?"更新":"创建"),1)]),_:1},8,["loading"])]),_:1})]),default:t(()=>[c("div",kl,[e(le,{ref_key:"formRef",ref:m,model:l(g),rules:l(H),"label-placement":"left","label-width":"120px","require-mark-placement":"right-hanging"},{default:t(()=>[e(d,{title:"基础信息",size:"small",style:{"margin-bottom":"16px"}},{default:t(()=>[e(P,{label:"断言名称",path:"assertionName"},{default:t(()=>[e(w,{value:l(g).assertionName,"onUpdate:value":i[0]||(i[0]=Z=>l(g).assertionName=Z),placeholder:"请输入断言名称",maxlength:"100","show-count":""},null,8,["value"])]),_:1}),e(P,{label:"断言类型",path:"assertionType"},{default:t(()=>[e(q,{value:l(g).assertionType,"onUpdate:value":[i[1]||(i[1]=Z=>l(g).assertionType=Z),l(E)],options:l(p),placeholder:"请选择断言类型"},null,8,["value","options","onUpdate:value"])]),_:1}),e(P,{label:"操作符",path:"assertionOperator"},{default:t(()=>[e(q,{value:l(g).assertionOperator,"onUpdate:value":[i[2]||(i[2]=Z=>l(g).assertionOperator=Z),l(k)],options:l(R),placeholder:"请选择操作符"},null,8,["value","options","onUpdate:value"])]),_:1}),e(P,{label:"执行顺序",path:"assertionOrder"},{default:t(()=>[e(T,{value:l(g).assertionOrder,"onUpdate:value":i[3]||(i[3]=Z=>l(g).assertionOrder=Z),min:0,max:9999,placeholder:"执行顺序",style:{width:"100%"}},null,8,["value"])]),_:1}),e(P,{label:"是否必须匹配",path:"isRequired"},{default:t(()=>[e(Q,{value:l(g).isRequired,"onUpdate:value":i[4]||(i[4]=Z=>l(g).isRequired=Z)},{default:t(()=>[e(A,{value:"Y"},{default:t(()=>i[13]||(i[13]=[u("必须匹配")])),_:1}),e(A,{value:"N"},{default:t(()=>i[14]||(i[14]=[u("可选匹配")])),_:1})]),_:1},8,["value"])]),_:1})]),_:1}),e(d,{title:"断言配置",size:"small",style:{"margin-bottom":"16px"}},{default:t(()=>[l(I)?(x(),Y(P,{key:0,label:"字段名称",path:"fieldName"},{default:t(()=>[e(w,{value:l(g).fieldName,"onUpdate:value":i[5]||(i[5]=Z=>l(g).fieldName=Z),placeholder:l(L)(),maxlength:"100"},null,8,["value","placeholder"])]),_:1})):re("",!0),l(V)?(x(),Y(P,{key:1,label:"期望值",path:"expectedValue"},{default:t(()=>[e(w,{value:l(g).expectedValue,"onUpdate:value":i[6]||(i[6]=Z=>l(g).expectedValue=Z),type:"textarea",placeholder:l(F)(),autosize:{minRows:2,maxRows:4},maxlength:"500","show-count":""},null,8,["value","placeholder"])]),_:1})):re("",!0),l(h)?(x(),Y(P,{key:2,label:"匹配模式",path:"patternValue"},{suffix:t(()=>[e(K,{trigger:"hover"},{trigger:t(()=>[e(B,{style:{cursor:"help"}},{default:t(()=>[e(l(ia))]),_:1})]),default:t(()=>[i[15]||(i[15]=u(" 支持正则表达式，如：^Bearer\\s+.+$ 用于匹配Authorization头 "))]),_:1})]),default:t(()=>[e(w,{value:l(g).patternValue,"onUpdate:value":i[7]||(i[7]=Z=>l(g).patternValue=Z),type:"textarea",placeholder:"请输入正则表达式或匹配模式",autosize:{minRows:2,maxRows:4},maxlength:"500","show-count":""},null,8,["value"])]),_:1})):re("",!0),l(o)?(x(),Y(P,{key:3,label:"区分大小写",path:"caseSensitive"},{default:t(()=>[e(Q,{value:l(g).caseSensitive,"onUpdate:value":i[8]||(i[8]=Z=>l(g).caseSensitive=Z)},{default:t(()=>[e(A,{value:"Y"},{default:t(()=>i[16]||(i[16]=[u("区分大小写")])),_:1}),e(A,{value:"N"},{default:t(()=>i[17]||(i[17]=[u("不区分大小写")])),_:1})]),_:1},8,["value"])]),_:1})):re("",!0)]),_:1}),e(d,{title:"高级配置",size:"small",style:{"margin-bottom":"16px"}},{default:t(()=>[e(P,{label:"断言描述",path:"assertionDesc"},{default:t(()=>[e(w,{value:l(g).assertionDesc,"onUpdate:value":i[9]||(i[9]=Z=>l(g).assertionDesc=Z),type:"textarea",placeholder:"请输入断言描述（可选）",autosize:{minRows:2,maxRows:3},maxlength:"200","show-count":""},null,8,["value"])]),_:1}),e(P,{label:"启用状态",path:"activeFlag"},{default:t(()=>[e(Q,{value:l(g).activeFlag,"onUpdate:value":i[10]||(i[10]=Z=>l(g).activeFlag=Z)},{default:t(()=>[e(A,{value:"Y"},{default:t(()=>i[18]||(i[18]=[u("启用")])),_:1}),e(A,{value:"N"},{default:t(()=>i[19]||(i[19]=[u("禁用")])),_:1})]),_:1},8,["value"])]),_:1}),e(P,{label:"备注信息",path:"noteText"},{default:t(()=>[e(w,{value:l(g).noteText,"onUpdate:value":i[11]||(i[11]=Z=>l(g).noteText=Z),type:"textarea",placeholder:"请输入备注信息（可选）",autosize:{minRows:2,maxRows:3},maxlength:"500","show-count":""},null,8,["value"])]),_:1})]),_:1}),l(S)?(x(),Y(d,{key:0,title:"配置示例",size:"small"},{default:t(()=>[e(U,{type:"info"},{header:t(()=>[u(J(l(S).title),1)]),default:t(()=>[c("div",Rl,[c("pre",Sl,J(l(S).content),1)])]),_:1})]),_:1})):re("",!0)]),_:1},8,["model","rules"])])]),_:1},8,["show","title"])}}}),Ol=ge(Nl,[["__scopeId","data-v-5a2b8e12"]]);function Pl(s){const N=we(),_=ft(),O=z(!1),m=z(!1),v=z(null),g=z([]),p=z(!1),R={success:y=>{!p.value&&_&&!_.isUnmounted&&_e(()=>{p.value||N.success(y)})},error:y=>{!p.value&&_&&!_.isUnmounted&&_e(()=>{p.value||N.error(y)})},warning:y=>{!p.value&&_&&!_.isUnmounted&&_e(()=>{p.value||N.warning(y)})}},I=ae(()=>[...g.value].sort((y,f)=>y.assertionOrder-f.assertionOrder)),V=y=>({[ee.PATH]:"primary",[ee.HEADER]:"info",[ee.QUERY]:"success",[ee.COOKIE]:"warning",[ee.IP]:"error"})[y]||"default",h=y=>({[ee.PATH]:"路径",[ee.HEADER]:"请求头",[ee.QUERY]:"查询参数",[ee.COOKIE]:"Cookie",[ee.IP]:"IP地址"})[y]||y,o=y=>({[G.EQUAL]:"等于",[G.NOT_EQUAL]:"不等于",[G.CONTAINS]:"包含",[G.NOT_CONTAINS]:"不包含",[G.MATCHES]:"正则匹配",[G.NOT_MATCHES]:"正则不匹配",[G.STARTS_WITH]:"开头匹配",[G.ENDS_WITH]:"结尾匹配",[G.IN]:"在列表中",[G.NOT_IN]:"不在列表中"})[y]||y,S=y=>{const f=I.value;return f.length>0&&f[0].routeAssertionId===y.routeAssertionId},H=y=>{const f=I.value;return f.length>0&&f[f.length-1].routeAssertionId===y.routeAssertionId},L=async()=>{if(!(!s.routeConfigId||p.value)){O.value=!0;try{const y=await ya(s.routeConfigId,"default");if(p.value)return;if(y!=null&&y.oK&&y.bizData){const f=JSON.parse(y.bizData)||[];g.value=f.sort((i,w)=>i.assertionOrder-w.assertionOrder)}else g.value=[]}catch(y){p.value||(console.error("加载路由断言失败:",y),R.error("加载路由断言失败"),g.value=[])}finally{p.value||(O.value=!1)}}},F=()=>{p.value||(v.value=null,m.value=!0)},E=y=>{p.value||(v.value=y,m.value=!0)},k=async y=>{if(!p.value)try{O.value=!0;const f=await _a(y.routeAssertionId,"default");if(p.value)return;f!=null&&f.oK?(R.success("删除断言成功"),await L()):R.error((f==null?void 0:f.errMsg)||"删除断言失败")}catch(f){p.value||(console.error("删除断言失败:",f),R.error("删除断言失败"))}finally{p.value||(O.value=!1)}},j=async y=>{if(!p.value)try{const f=y.activeFlag==="Y"?"N":"Y",i={...y,activeFlag:f},w=await Qe({tenantId:i.tenantId,routeAssertionId:i.routeAssertionId,routeConfigId:i.routeConfigId,assertionName:i.assertionName,assertionType:i.assertionType,assertionOperator:i.assertionOperator,fieldName:i.fieldName||"",expectedValue:i.expectedValue||"",patternValue:i.patternValue||"",caseSensitive:i.caseSensitive,assertionOrder:i.assertionOrder,isRequired:i.isRequired,assertionDesc:i.assertionDesc||"",activeFlag:f,noteText:i.noteText||""});if(p.value)return;w!=null&&w.oK?(R.success(`断言已${f==="Y"?"启用":"禁用"}`),await L()):R.error((w==null?void 0:w.errMsg)||"更新断言状态失败")}catch(f){p.value||(console.error("更新断言状态失败:",f),R.error("更新断言状态失败"))}},$=async y=>{if(p.value)return;const f=I.value,i=f.findIndex(P=>P.routeAssertionId===y.routeAssertionId);if(i<=0)return;const w=f[i-1];await r(y,w)},C=async y=>{if(p.value)return;const f=I.value,i=f.findIndex(P=>P.routeAssertionId===y.routeAssertionId);if(i>=f.length-1)return;const w=f[i+1];await r(y,w)},r=async(y,f)=>{if(!p.value)try{O.value=!0;const i=y.assertionOrder,w={...y,assertionOrder:f.assertionOrder},P={...f,assertionOrder:i},[q,T]=await Promise.all([Qe({tenantId:w.tenantId,routeAssertionId:w.routeAssertionId,routeConfigId:w.routeConfigId,assertionName:w.assertionName,assertionType:w.assertionType,assertionOperator:w.assertionOperator,fieldName:w.fieldName||"",expectedValue:w.expectedValue||"",patternValue:w.patternValue||"",caseSensitive:w.caseSensitive,assertionOrder:w.assertionOrder,isRequired:w.isRequired,assertionDesc:w.assertionDesc||"",activeFlag:w.activeFlag,noteText:w.noteText||""}),Qe({tenantId:P.tenantId,routeAssertionId:P.routeAssertionId,routeConfigId:P.routeConfigId,assertionName:P.assertionName,assertionType:P.assertionType,assertionOperator:P.assertionOperator,fieldName:P.fieldName||"",expectedValue:P.expectedValue||"",patternValue:P.patternValue||"",caseSensitive:P.caseSensitive,assertionOrder:P.assertionOrder,isRequired:P.isRequired,assertionDesc:P.assertionDesc||"",activeFlag:P.activeFlag,noteText:P.noteText||""})]);if(p.value)return;q!=null&&q.oK&&(T!=null&&T.oK)?(R.success("调整执行顺序成功"),await L()):R.error("调整执行顺序失败")}catch(i){p.value||(console.error("调整执行顺序失败:",i),R.error("调整执行顺序失败"))}finally{p.value||(O.value=!1)}},a=async y=>{var f;if(!p.value)try{const i={tenantId:"default",routeConfigId:s.routeConfigId,assertionName:y.assertionName,assertionType:y.assertionType,assertionOperator:y.assertionOperator,fieldName:y.fieldName||"",expectedValue:y.expectedValue||"",patternValue:y.patternValue||"",caseSensitive:y.caseSensitive,assertionOrder:y.assertionOrder,isRequired:y.isRequired,assertionDesc:y.assertionDesc||"",activeFlag:y.activeFlag,addWho:"admin",editWho:"admin",oprSeqFlag:Date.now().toString(),currentVersion:1,noteText:y.noteText||""};let w;const P=!!((f=v.value)!=null&&f.routeAssertionId);if(P?w=await Qe({...i,routeAssertionId:v.value.routeAssertionId}):w=await ma(i),p.value)return;if(w!=null&&w.oK){const q=P?"编辑":"创建";if(R.success(`${q}断言成功`),m.value=!1,P)await L();else if(w.bizData)try{const T=JSON.parse(w.bizData),A={tenantId:T.tenantId||"default",routeAssertionId:T.routeAssertionId,routeConfigId:T.routeConfigId,assertionName:T.assertionName||y.assertionName,assertionType:y.assertionType,assertionOperator:y.assertionOperator,fieldName:y.fieldName||"",expectedValue:y.expectedValue||"",patternValue:y.patternValue||"",caseSensitive:y.caseSensitive,assertionOrder:y.assertionOrder,isRequired:y.isRequired,assertionDesc:y.assertionDesc||"",activeFlag:y.activeFlag,addTime:new Date().toISOString(),addWho:"admin",editTime:new Date().toISOString(),editWho:"admin",oprSeqFlag:i.oprSeqFlag,currentVersion:1,noteText:y.noteText||""};g.value.push(A),g.value.sort((Q,d)=>Q.assertionOrder-d.assertionOrder),console.log("新断言已添加到列表:",A)}catch(T){console.error("解析返回数据失败，回退到重新加载:",T),await L()}else console.warn("后端未返回完整数据，回退到重新加载"),await L()}else R.error((w==null?void 0:w.errMsg)||`${P?"编辑":"创建"}断言失败`)}catch(i){p.value||(console.error("保存断言失败:",i),R.error("保存断言失败"))}},n=async()=>{p.value||(await L(),R.success("刷新完成"))},b=async()=>{p.value||await L()};return fe(()=>s.routeConfigId,async y=>{y&&!p.value&&await L()},{immediate:!0}),He(()=>{s.routeConfigId&&console.log("路由断言管理器初始化，路由ID:",s.routeConfigId)}),ct(()=>{p.value=!0}),{loading:O,dialogVisible:m,currentAssertion:v,assertions:g,sortedAssertions:I,getAssertionTypeColor:V,getAssertionTypeLabel:h,getOperatorLabel:o,isFirstAssertion:S,isLastAssertion:H,loadRouteAssertions:L,handleCreate:F,handleEdit:E,handleDelete:k,handleToggleStatus:j,handleMoveUp:$,handleMoveDown:C,handleSaveAssertion:a,handleRefresh:n,refresh:b}}const Dl={class:"route-assertion-list"},Al={class:"toolbar"},El={class:"toolbar-left"},Ml={class:"toolbar-right"},Fl={class:"assertion-content"},zl={key:0},Ul={colspan:"10",style:{"text-align":"center",padding:"40px"}},$l={key:1},Yl={colspan:"10",style:{"text-align":"center",padding:"40px"}},Vl={class:"order-column"},Hl={class:"order-number"},Ll={class:"order-controls"},ql={class:"value-display"},Jl=ce({__name:"RouteAssertionList",props:{routeConfigId:{}},setup(s,{expose:N}){const _=s,{loading:O,dialogVisible:m,currentAssertion:v,assertions:g,sortedAssertions:p,getAssertionTypeColor:R,getAssertionTypeLabel:I,getOperatorLabel:V,isFirstAssertion:h,isLastAssertion:o,handleCreate:S,handleEdit:H,handleDelete:L,handleToggleStatus:F,handleMoveUp:E,handleMoveDown:k,handleSaveAssertion:j,handleRefresh:$,refresh:C}=Pl({routeConfigId:_.routeConfigId});return N({refresh:C}),(r,a)=>{const n=Ae,b=de,y=ie,f=se,i=kt,w=xe,P=ve,q=qt,T=Ce,A=ta,Q=Fe;return x(),X("div",Dl,[c("div",Al,[c("div",El,[e(b,null,{default:t(()=>[e(n,{strong:""},{default:t(()=>a[1]||(a[1]=[u("路由断言配置")])),_:1}),e(n,{depth:"3"},{default:t(()=>a[2]||(a[2]=[u("定义路由匹配的额外条件，如请求头、参数、Cookie等")])),_:1})]),_:1})]),c("div",Ml,[e(b,null,{default:t(()=>[e(f,{type:"primary",onClick:l(S),disabled:!r.routeConfigId},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(rt))]),_:1})]),default:t(()=>[a[3]||(a[3]=u(" 新建断言 "))]),_:1},8,["onClick","disabled"]),e(f,{onClick:l($),loading:l(O)},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(Ue))]),_:1})]),default:t(()=>[a[4]||(a[4]=u(" 刷新 "))]),_:1},8,["onClick","loading"])]),_:1})])]),c("div",Fl,[e(A,{bordered:!1,"single-line":!1,striped:""},{default:t(()=>[a[13]||(a[13]=c("thead",null,[c("tr",null,[c("th",{style:{width:"100px"}},"执行顺序"),c("th",{style:{width:"150px"}},"断言名称"),c("th",{style:{width:"180px"}},"描述"),c("th",{style:{width:"100px"}},"断言类型"),c("th",{style:{width:"100px"}},"操作符"),c("th",{style:{width:"120px"}},"字段名称"),c("th",{style:{width:"180px"}},"期望值/模式"),c("th",{style:{width:"80px"}},"必须匹配"),c("th",{style:{width:"80px"}},"状态"),c("th",{style:{width:"180px"}},"操作")])],-1)),c("tbody",null,[l(O)?(x(),X("tr",zl,[c("td",Ul,[e(i,{size:"medium"})])])):l(g).length?(x(!0),X(Se,{key:2},Ne(l(p),d=>(x(),X("tr",{key:d.routeAssertionId},[c("td",null,[c("div",Vl,[c("div",Hl,[e(n,{strong:"",style:{color:"#2080f0"}},{default:t(()=>[u(J(d.assertionOrder),1)]),_:2},1024)]),c("div",Ll,[e(q,{size:"small"},{default:t(()=>[e(P,{trigger:"hover"},{trigger:t(()=>[e(f,{type:"info",size:"small",onClick:B=>l(E)(d),disabled:l(h)(d)},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(ot))]),_:1})]),_:2},1032,["onClick","disabled"])]),default:t(()=>[a[6]||(a[6]=u(" 向上移动 "))]),_:2},1024),e(P,{trigger:"hover"},{trigger:t(()=>[e(f,{type:"info",size:"small",onClick:B=>l(k)(d),disabled:l(o)(d)},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(nt))]),_:1})]),_:2},1032,["onClick","disabled"])]),default:t(()=>[a[7]||(a[7]=u(" 向下移动 "))]),_:2},1024)]),_:2},1024)])])]),c("td",null,[e(n,{strong:""},{default:t(()=>[u(J(d.assertionName),1)]),_:2},1024)]),c("td",null,[d.assertionDesc?(x(),Y(n,{key:0,depth:"2",style:{"font-size":"13px"}},{default:t(()=>[u(J(d.assertionDesc),1)]),_:2},1024)):(x(),Y(n,{key:1,depth:"3",style:{"font-style":"italic"}},{default:t(()=>a[8]||(a[8]=[u("无描述")])),_:1}))]),c("td",null,[e(T,{type:l(R)(d.assertionType)},{default:t(()=>[u(J(l(I)(d.assertionType)),1)]),_:2},1032,["type"])]),c("td",null,[e(T,{type:"info",size:"small"},{default:t(()=>[u(J(l(V)(d.assertionOperator)),1)]),_:2},1024)]),c("td",null,[d.fieldName?(x(),Y(n,{key:0,code:""},{default:t(()=>[u(J(d.fieldName),1)]),_:2},1024)):(x(),Y(n,{key:1,depth:"3"},{default:t(()=>a[9]||(a[9]=[u("-")])),_:1}))]),c("td",null,[c("div",ql,[d.expectedValue?(x(),Y(n,{key:0,code:"",style:{"font-size":"12px"}},{default:t(()=>[u(J(d.expectedValue),1)]),_:2},1024)):d.patternValue?(x(),Y(n,{key:1,code:"",style:{"font-size":"12px"}},{default:t(()=>[u(J(d.patternValue),1)]),_:2},1024)):(x(),Y(n,{key:2,depth:"3"},{default:t(()=>a[10]||(a[10]=[u("-")])),_:1}))])]),c("td",null,[e(T,{type:d.isRequired==="Y"?"error":"default",size:"small"},{default:t(()=>[u(J(d.isRequired==="Y"?"必须":"可选"),1)]),_:2},1032,["type"])]),c("td",null,[e(T,{type:d.activeFlag==="Y"?"success":"default",size:"small"},{default:t(()=>[u(J(d.activeFlag==="Y"?"启用":"禁用"),1)]),_:2},1032,["type"])]),c("td",null,[e(b,{size:"small"},{default:t(()=>[e(P,{trigger:"hover"},{trigger:t(()=>[e(f,{type:"primary",size:"small",onClick:B=>l(H)(d)},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(tt))]),_:1})]),_:2},1032,["onClick"])]),default:t(()=>[a[11]||(a[11]=u(" 编辑断言 "))]),_:2},1024),e(P,{trigger:"hover"},{trigger:t(()=>[e(f,{type:d.activeFlag==="Y"?"warning":"success",size:"small",onClick:B=>l(F)(d)},{icon:t(()=>[e(y,null,{default:t(()=>[d.activeFlag==="Y"?(x(),Y(l(fa),{key:0})):(x(),Y(l(ea),{key:1}))]),_:2},1024)]),_:2},1032,["type","onClick"])]),default:t(()=>[u(" "+J(d.activeFlag==="Y"?"禁用断言":"启用断言"),1)]),_:2},1024),e(P,{trigger:"hover"},{trigger:t(()=>[e(f,{type:"error",size:"small",onClick:B=>l(L)(d)},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(Le))]),_:1})]),_:2},1032,["onClick"])]),default:t(()=>[a[12]||(a[12]=u(" 删除断言 "))]),_:2},1024)]),_:2},1024)])]))),128)):(x(),X("tr",$l,[c("td",Yl,[e(w,{description:"暂无断言配置"},{extra:t(()=>[e(f,{type:"primary",onClick:l(S),disabled:!r.routeConfigId},{default:t(()=>a[5]||(a[5]=[u(" 新建断言 ")])),_:1},8,["onClick","disabled"])]),_:1})])]))])]),_:1})]),e(Q,{type:"info",style:{"margin-top":"16px"}},{header:t(()=>a[14]||(a[14]=[u("路由断言说明")])),default:t(()=>[a[15]||(a[15]=u(" 路由断言用于定义路由匹配的额外条件，支持以下类型： ")),a[16]||(a[16]=c("ul",{style:{margin:"8px 0","padding-left":"20px"}},[c("li",null,[c("strong",null,"PATH"),u("：路径匹配断言，用于复杂路径匹配规则")]),c("li",null,[c("strong",null,"HEADER"),u("：请求头断言，检查特定请求头的值")]),c("li",null,[c("strong",null,"QUERY"),u("：查询参数断言，检查URL查询参数")]),c("li",null,[c("strong",null,"COOKIE"),u("：Cookie断言，检查特定Cookie的值")]),c("li",null,[c("strong",null,"IP"),u("：IP地址断言，基于客户端IP进行匹配")])],-1)),a[17]||(a[17]=u(" 支持的操作符：EQUAL（等于）、CONTAINS（包含）、MATCHES（正则匹配）、STARTS_WITH（开头匹配）等 "))]),_:1}),e(Ol,{show:l(m),"onUpdate:show":a[0]||(a[0]=d=>ze(m)?m.value=d:null),"assertion-data":l(v),"route-config-id":r.routeConfigId,onSave:l(j)},null,8,["show","assertion-data","route-config-id","onSave"])])}}}),jl=ge(Jl,[["__scopeId","data-v-b3ae6b50"]]);function Bl(s={}){const N=we(),_=ft(),O=z(!1),m=z(!1),v=z(!1),g=z(),p=z(null),R={success:T=>{!v.value&&_&&!_.isUnmounted&&_e(()=>{v.value||N.success(T)})},error:T=>{!v.value&&_&&!_.isUnmounted&&_e(()=>{v.value||N.error(T)})}},I=ae(()=>!!p.value),V=gt.map(T=>({label:T.label,value:T.value,disabled:!1})),h=Cl.map(T=>({label:T,value:T})),o=be({filterName:"",filterType:"header",filterAction:"pre-routing",filterOrder:1,filterDesc:"",activeFlag:"Y",config:{}}),S=ae({get:()=>o.activeFlag==="Y",set:T=>{o.activeFlag=T?"Y":"N"}}),H=be({modifierType:"add",headerName:"",headerValue:"",targetHeaderName:"",isRequestHeader:!0}),L=be({modifierType:"add",paramName:"",paramValue:"",targetParamName:""}),F=be({modifierType:"transform",operation:"",allowedContentTypes:[],maxBodySize:0,filterConfigJson:""}),E=be({prefix:""}),k=be({mode:"simple",from:"",to:""}),j=be({mode:"allow",allowedMethods:[],deniedMethods:[],rejectStatusCode:405,rejectMessage:"Method Not Allowed",caseSensitive:!1}),$=be({operation:"add",cookieName:"",cookieValue:"",applyToResponse:!1,cookieAttributes:{domain:"",path:"",maxAge:0,secure:!1,httpOnly:!1,sameSite:"Lax"}}),C=be({operation:"add_headers",setInRequestPhase:!1,filterConfigJson:"",conditionsJson:""}),r={filterName:[{required:!0,message:"请输入过滤器名称",trigger:"blur"},{min:2,max:50,message:"过滤器名称长度在 2 到 50 个字符",trigger:"blur"}],filterType:[{required:!0,message:"请选择过滤器类型",trigger:"change"}],filterOrder:[{validator:(T,A)=>{if(console.log("filterOrder 验证:",{value:A,type:typeof A}),A==null)return console.log("filterOrder 验证失败: 值为空"),new Error("请输入执行顺序");const Q=typeof A=="number"?A:Number(A);return console.log("filterOrder 转换后的数字:",{num:Q,isNaN:isNaN(Q),isInteger:Number.isInteger(Q)}),isNaN(Q)?(console.log("filterOrder 验证失败: 不是数字"),new Error("执行顺序必须是数字")):Number.isInteger(Q)?Q<1||Q>1e3?(console.log("filterOrder 验证失败: 超出范围",{num:Q}),new Error("执行顺序必须在 1 到 1000 之间")):(console.log("filterOrder 验证通过"),!0):(console.log("filterOrder 验证失败: 不是整数"),new Error("执行顺序必须是整数"))},trigger:["blur","input","change"]}]},a=()=>{v.value||(Object.assign(H,{modifierType:"add",headerName:"",headerValue:"",targetHeaderName:"",isRequestHeader:!0}),Object.assign(L,{modifierType:"add",paramName:"",paramValue:"",targetParamName:""}),Object.assign(F,{modifierType:"transform",operation:"",allowedContentTypes:[],maxBodySize:0,filterConfigJson:""}),E.prefix="",Object.assign(k,{mode:"simple",from:"",to:""}),Object.assign(j,{mode:"allow",allowedMethods:[],deniedMethods:[],rejectStatusCode:405,rejectMessage:"Method Not Allowed",caseSensitive:!1}),Object.assign($,{operation:"add",cookieName:"",cookieValue:"",applyToResponse:!1,cookieAttributes:{domain:"",path:"",maxAge:0,secure:!1,httpOnly:!1,sameSite:"Lax"}}),Object.assign(C,{operation:"add_headers",setInRequestPhase:!1,filterConfigJson:"",conditionsJson:""}))},n=()=>{var T;v.value||(Object.assign(o,{filterConfigId:void 0,gatewayInstanceId:void 0,routeConfigId:void 0,filterName:"",filterType:"header",filterAction:"pre-routing",filterOrder:1,filterDesc:"",activeFlag:"Y",config:{}}),a(),(T=g.value)==null||T.restoreValidation())},b=(T,A)=>{if(!v.value)switch(a(),T){case"header":A.headerConfig&&Object.assign(H,A.headerConfig);break;case"query-param":A.queryParamConfig&&Object.assign(L,A.queryParamConfig);break;case"body":A.bodyConfig&&Object.assign(F,{...A.bodyConfig,filterConfigJson:JSON.stringify(A.bodyConfig.filterConfig||{},null,2)});break;case"strip":A.stripConfig&&Object.assign(E,A.stripConfig);break;case"rewrite":A.rewriteConfig&&Object.assign(k,A.rewriteConfig);break;case"method":A.methodConfig&&Object.assign(j,A.methodConfig);break;case"cookie":A.cookieConfig&&Object.assign($,A.cookieConfig);break;case"response":A.responseConfig&&Object.assign(C,{...A.responseConfig,filterConfigJson:JSON.stringify(A.responseConfig.filterConfig||{},null,2),conditionsJson:JSON.stringify(A.responseConfig.conditions||{},null,2)});break}},y=T=>{if(!v.value){Object.assign(o,{filterConfigId:T.filterConfigId,gatewayInstanceId:T.gatewayInstanceId,routeConfigId:T.routeConfigId,filterName:T.filterName,filterType:T.filterType,filterAction:T.filterAction,filterOrder:T.filterOrder,filterDesc:T.filterDesc||"",activeFlag:T.activeFlag});try{const A=JSON.parse(T.filterConfig||"{}");b(T.filterType,A)}catch(A){console.error("解析过滤器配置失败:",A)}}},f=()=>{v.value||a()},i=()=>{const T={};switch(o.filterType){case"header":T.headerConfig={...H};break;case"query-param":T.queryParamConfig={...L};break;case"body":T.bodyConfig={...F,filterConfig:F.filterConfigJson?JSON.parse(F.filterConfigJson):{}},delete T.bodyConfig.filterConfigJson;break;case"strip":T.stripConfig={...E};break;case"rewrite":T.rewriteConfig={...k};break;case"method":T.methodConfig={...j};break;case"cookie":T.cookieConfig={...$};break;case"response":T.responseConfig={...C,filterConfig:C.filterConfigJson?JSON.parse(C.filterConfigJson):{},conditions:C.conditionsJson?JSON.parse(C.conditionsJson):{}},delete T.responseConfig.filterConfigJson,delete T.responseConfig.conditionsJson;break}return T},w=T=>{O.value=!0,p.value=T||null,T?y(T):n()},P=()=>{v.value||(O.value=!1,p.value=null,n())},q=async()=>{var T,A;if(!v.value)try{console.log("开始表单验证，当前formData:",o),await((T=g.value)==null?void 0:T.validate()),console.log("表单验证通过"),m.value=!0;const Q=i(),d={...o,config:Q};console.log("准备保存数据:",d),(A=s.onSave)==null||A.call(s,d),P()}catch(Q){console.error("保存失败:",Q),v.value||R.error("请检查表单填写是否正确")}finally{v.value||(m.value=!1)}};return ct(()=>{v.value=!0}),{visible:O,saving:m,formRef:g,isEdit:I,formData:o,formRules:r,activeFlagValue:S,headerConfig:H,queryParamConfig:L,bodyConfig:F,stripConfig:E,rewriteConfig:k,methodConfig:j,cookieConfig:$,responseConfig:C,filterTypeOptions:V,contentTypeOptions:h,HEADER_MODIFIER_OPTIONS:pl,QUERY_PARAM_MODIFIER_OPTIONS:vl,BODY_MODIFIER_OPTIONS:gl,COOKIE_OPERATION_OPTIONS:ml,METHOD_FILTER_MODE_OPTIONS:yl,PATH_REWRITE_MODE_OPTIONS:_l,RESPONSE_OPERATION_OPTIONS:bl,HTTP_METHODS:hl,openDialog:w,closeDialog:P,handleSave:q,handleFilterTypeChange:f}}const Kl={key:0},Ql={key:1},Gl={key:2},Wl={key:3},Xl={key:4},Zl={key:5},eo={key:6},to={key:7},ao={key:8},lo=ce({__name:"FilterConfigDialog",props:{show:{type:Boolean,default:!1},filterData:{default:null}},emits:["update:show","save"],setup(s,{expose:N,emit:_}){const O=s,m=_,{visible:v,saving:g,formRef:p,isEdit:R,formData:I,formRules:V,activeFlagValue:h,headerConfig:o,queryParamConfig:S,bodyConfig:H,stripConfig:L,rewriteConfig:F,methodConfig:E,cookieConfig:k,responseConfig:j,filterTypeOptions:$,contentTypeOptions:C,HEADER_MODIFIER_OPTIONS:r,QUERY_PARAM_MODIFIER_OPTIONS:a,BODY_MODIFIER_OPTIONS:n,COOKIE_OPERATION_OPTIONS:b,METHOD_FILTER_MODE_OPTIONS:y,PATH_REWRITE_MODE_OPTIONS:f,RESPONSE_OPERATION_OPTIONS:i,HTTP_METHODS:w,openDialog:P,closeDialog:q,handleSave:T,handleFilterTypeChange:A}=Bl({onSave:Q=>m("save",Q)});return fe(()=>O.show,Q=>{Q?P(O.filterData||void 0):q()}),fe(v,Q=>{m("update:show",Q)}),N({openDialog:P,closeDialog:q}),(Q,d)=>{const B=Ee,K=vt,U=lt,le=qe,ue=Me,me=Je,ne=De,Z=de,te=Nt,oe=St,W=Ie,he=xe,Te=Ye,ke=se,Be=$e;return x(),Y(Be,{show:l(v),"onUpdate:show":d[43]||(d[43]=D=>ze(v)?v.value=D:null),"mask-closable":!1,preset:"dialog",title:l(R)?"编辑过滤器":"新建过滤器",style:{width:"900px"}},{action:t(()=>[e(Z,null,{default:t(()=>[e(ke,{onClick:l(q)},{default:t(()=>d[48]||(d[48]=[u("取消")])),_:1},8,["onClick"]),e(ke,{type:"primary",loading:l(g),onClick:l(T)},{default:t(()=>[u(J(l(R)?"保存":"创建"),1)]),_:1},8,["loading","onClick"])]),_:1})]),default:t(()=>[e(Te,{ref_key:"formRef",ref:p,model:l(I),rules:l(V),"label-placement":"left","label-width":"120px","require-mark-placement":"right-hanging"},{default:t(()=>[e(le,{cols:2,"x-gap":16},{default:t(()=>[e(K,{label:"过滤器名称",path:"filterName"},{default:t(()=>[e(B,{value:l(I).filterName,"onUpdate:value":d[0]||(d[0]=D=>l(I).filterName=D),placeholder:"请输入过滤器名称",clearable:""},null,8,["value"])]),_:1}),e(K,{label:"执行顺序",path:"filterOrder"},{default:t(()=>[e(U,{value:l(I).filterOrder,"onUpdate:value":d[1]||(d[1]=D=>l(I).filterOrder=D),placeholder:"请输入执行顺序",min:1,max:1e3,style:{width:"100%"}},null,8,["value"])]),_:1})]),_:1}),e(le,{cols:2,"x-gap":16},{default:t(()=>[e(K,{label:"过滤器类型",path:"filterType"},{default:t(()=>[e(ue,{value:l(I).filterType,"onUpdate:value":[d[2]||(d[2]=D=>l(I).filterType=D),l(A)],options:l($),placeholder:"请选择过滤器类型"},null,8,["value","options","onUpdate:value"])]),_:1}),e(K,{label:"状态",path:"activeFlag"},{default:t(()=>[e(me,{value:l(h),"onUpdate:value":d[3]||(d[3]=D=>ze(h)?h.value=D:null),"checked-value":!0,"unchecked-value":!1},{checked:t(()=>d[44]||(d[44]=[u("启用")])),unchecked:t(()=>d[45]||(d[45]=[u("禁用")])),_:1},8,["value"])]),_:1})]),_:1}),e(ne,{label:"描述",path:"filterDesc"},{default:t(()=>[e(B,{value:l(I).filterDesc,"onUpdate:value":d[4]||(d[4]=D=>l(I).filterDesc=D),type:"textarea",placeholder:"请输入过滤器描述",rows:2},null,8,["value"])]),_:1}),e(W,{title:"过滤器配置",embedded:""},{default:t(()=>[l(I).filterType==="header"?(x(),X("div",Kl,[e(Z,{vertical:"",size:"large"},{default:t(()=>[e(le,{cols:2,"x-gap":16},{default:t(()=>[e(K,{label:"修改类型"},{default:t(()=>[e(ue,{value:l(o).modifierType,"onUpdate:value":d[5]||(d[5]=D=>l(o).modifierType=D),options:l(r),placeholder:"请选择修改类型"},null,8,["value","options"])]),_:1}),e(K,{label:"作用范围"},{default:t(()=>[e(me,{value:l(o).isRequestHeader,"onUpdate:value":d[6]||(d[6]=D=>l(o).isRequestHeader=D),"checked-value":!0,"unchecked-value":!1},{checked:t(()=>d[46]||(d[46]=[u("请求头")])),unchecked:t(()=>d[47]||(d[47]=[u("响应头")])),_:1},8,["value"])]),_:1})]),_:1}),e(ne,{label:"Header名称"},{default:t(()=>[e(B,{value:l(o).headerName,"onUpdate:value":d[7]||(d[7]=D=>l(o).headerName=D),placeholder:"请输入Header名称"},null,8,["value"])]),_:1}),l(o).modifierType!=="remove"?(x(),Y(ne,{key:0,label:"Header值"},{default:t(()=>[e(B,{value:l(o).headerValue,"onUpdate:value":d[8]||(d[8]=D=>l(o).headerValue=D),placeholder:"请输入Header值"},null,8,["value"])]),_:1})):re("",!0),l(o).modifierType==="rename"?(x(),Y(ne,{key:1,label:"目标Header名称"},{default:t(()=>[e(B,{value:l(o).targetHeaderName,"onUpdate:value":d[9]||(d[9]=D=>l(o).targetHeaderName=D),placeholder:"请输入重命名后的Header名称"},null,8,["value"])]),_:1})):re("",!0)]),_:1})])):l(I).filterType==="query-param"?(x(),X("div",Ql,[e(Z,{vertical:"",size:"large"},{default:t(()=>[e(ne,{label:"修改类型"},{default:t(()=>[e(ue,{value:l(S).modifierType,"onUpdate:value":d[10]||(d[10]=D=>l(S).modifierType=D),options:l(a),placeholder:"请选择修改类型"},null,8,["value","options"])]),_:1}),e(ne,{label:"参数名称"},{default:t(()=>[e(B,{value:l(S).paramName,"onUpdate:value":d[11]||(d[11]=D=>l(S).paramName=D),placeholder:"请输入参数名称"},null,8,["value"])]),_:1}),l(S).modifierType!=="remove"?(x(),Y(ne,{key:0,label:"参数值"},{default:t(()=>[e(B,{value:l(S).paramValue,"onUpdate:value":d[12]||(d[12]=D=>l(S).paramValue=D),placeholder:"请输入参数值"},null,8,["value"])]),_:1})):re("",!0),l(S).modifierType==="rename"?(x(),Y(ne,{key:1,label:"目标参数名称"},{default:t(()=>[e(B,{value:l(S).targetParamName,"onUpdate:value":d[13]||(d[13]=D=>l(S).targetParamName=D),placeholder:"请输入重命名后的参数名称"},null,8,["value"])]),_:1})):re("",!0)]),_:1})])):l(I).filterType==="body"?(x(),X("div",Gl,[e(Z,{vertical:"",size:"large"},{default:t(()=>[e(ne,{label:"修改类型"},{default:t(()=>[e(ue,{value:l(H).modifierType,"onUpdate:value":d[14]||(d[14]=D=>l(H).modifierType=D),options:l(n),placeholder:"请选择修改类型"},null,8,["value","options"])]),_:1}),e(ne,{label:"操作描述"},{default:t(()=>[e(B,{value:l(H).operation,"onUpdate:value":d[15]||(d[15]=D=>l(H).operation=D),placeholder:"请输入操作描述"},null,8,["value"])]),_:1}),e(ne,{label:"允许的内容类型"},{default:t(()=>[e(ue,{value:l(H).allowedContentTypes,"onUpdate:value":d[16]||(d[16]=D=>l(H).allowedContentTypes=D),options:l(C),multiple:"",placeholder:"请选择允许的内容类型"},null,8,["value","options"])]),_:1}),e(ne,{label:"最大请求体大小(字节)"},{default:t(()=>[e(U,{value:l(H).maxBodySize,"onUpdate:value":d[17]||(d[17]=D=>l(H).maxBodySize=D),placeholder:"请输入最大请求体大小",min:0,style:{width:"100%"}},null,8,["value"])]),_:1}),e(ne,{label:"过滤器配置"},{default:t(()=>[e(B,{value:l(H).filterConfigJson,"onUpdate:value":d[18]||(d[18]=D=>l(H).filterConfigJson=D),type:"textarea",placeholder:"请输入JSON格式的过滤器配置",rows:4},null,8,["value"])]),_:1})]),_:1})])):l(I).filterType==="strip"?(x(),X("div",Wl,[e(ne,{label:"要剥离的前缀"},{default:t(()=>[e(B,{value:l(L).prefix,"onUpdate:value":d[19]||(d[19]=D=>l(L).prefix=D),placeholder:"请输入要剥离的路径前缀，如：/api/v1"},null,8,["value"])]),_:1})])):l(I).filterType==="rewrite"?(x(),X("div",Xl,[e(Z,{vertical:"",size:"large"},{default:t(()=>[e(ne,{label:"重写模式"},{default:t(()=>[e(ue,{value:l(F).mode,"onUpdate:value":d[20]||(d[20]=D=>l(F).mode=D),options:l(f),placeholder:"请选择重写模式"},null,8,["value","options"])]),_:1}),e(ne,{label:"查找内容"},{default:t(()=>[e(B,{value:l(F).from,"onUpdate:value":d[21]||(d[21]=D=>l(F).from=D),placeholder:l(F).mode==="regex"?"请输入正则表达式":"请输入要替换的字符串"},null,8,["value","placeholder"])]),_:1}),e(ne,{label:"替换内容"},{default:t(()=>[e(B,{value:l(F).to,"onUpdate:value":d[22]||(d[22]=D=>l(F).to=D),placeholder:"请输入替换后的内容"},null,8,["value"])]),_:1})]),_:1})])):l(I).filterType==="method"?(x(),X("div",Zl,[e(Z,{vertical:"",size:"large"},{default:t(()=>[e(ne,{label:"过滤模式"},{default:t(()=>[e(ue,{value:l(E).mode,"onUpdate:value":d[23]||(d[23]=D=>l(E).mode=D),options:l(y),placeholder:"请选择过滤模式"},null,8,["value","options"])]),_:1}),l(E).mode==="allow"?(x(),Y(ne,{key:0,label:"允许的方法"},{default:t(()=>[e(oe,{value:l(E).allowedMethods,"onUpdate:value":d[24]||(d[24]=D=>l(E).allowedMethods=D)},{default:t(()=>[e(Z,null,{default:t(()=>[(x(!0),X(Se,null,Ne(l(w),D=>(x(),Y(te,{key:D,value:D},{default:t(()=>[u(J(D),1)]),_:2},1032,["value"]))),128))]),_:1})]),_:1},8,["value"])]),_:1})):re("",!0),l(E).mode==="deny"?(x(),Y(ne,{key:1,label:"拒绝的方法"},{default:t(()=>[e(oe,{value:l(E).deniedMethods,"onUpdate:value":d[25]||(d[25]=D=>l(E).deniedMethods=D)},{default:t(()=>[e(Z,null,{default:t(()=>[(x(!0),X(Se,null,Ne(l(w),D=>(x(),Y(te,{key:D,value:D},{default:t(()=>[u(J(D),1)]),_:2},1032,["value"]))),128))]),_:1})]),_:1},8,["value"])]),_:1})):re("",!0),e(le,{cols:2,"x-gap":16},{default:t(()=>[e(K,{label:"拒绝时状态码"},{default:t(()=>[e(U,{value:l(E).rejectStatusCode,"onUpdate:value":d[26]||(d[26]=D=>l(E).rejectStatusCode=D),placeholder:"默认405",min:400,max:599,style:{width:"100%"}},null,8,["value"])]),_:1}),e(K,{label:"区分大小写"},{default:t(()=>[e(me,{value:l(E).caseSensitive,"onUpdate:value":d[27]||(d[27]=D=>l(E).caseSensitive=D),"checked-value":!0,"unchecked-value":!1},null,8,["value"])]),_:1})]),_:1}),e(ne,{label:"拒绝时消息"},{default:t(()=>[e(B,{value:l(E).rejectMessage,"onUpdate:value":d[28]||(d[28]=D=>l(E).rejectMessage=D),placeholder:"请输入拒绝时的错误消息"},null,8,["value"])]),_:1})]),_:1})])):l(I).filterType==="cookie"?(x(),X("div",eo,[e(Z,{vertical:"",size:"large"},{default:t(()=>[e(le,{cols:2,"x-gap":16},{default:t(()=>[e(K,{label:"操作类型"},{default:t(()=>[e(ue,{value:l(k).operation,"onUpdate:value":d[29]||(d[29]=D=>l(k).operation=D),options:l(b),placeholder:"请选择操作类型"},null,8,["value","options"])]),_:1}),e(K,{label:"应用到响应"},{default:t(()=>[e(me,{value:l(k).applyToResponse,"onUpdate:value":d[30]||(d[30]=D=>l(k).applyToResponse=D),"checked-value":!0,"unchecked-value":!1},null,8,["value"])]),_:1})]),_:1}),e(ne,{label:"Cookie名称"},{default:t(()=>[e(B,{value:l(k).cookieName,"onUpdate:value":d[31]||(d[31]=D=>l(k).cookieName=D),placeholder:"请输入Cookie名称"},null,8,["value"])]),_:1}),l(k).operation!=="remove"?(x(),Y(ne,{key:0,label:"Cookie值"},{default:t(()=>[e(B,{value:l(k).cookieValue,"onUpdate:value":d[32]||(d[32]=D=>l(k).cookieValue=D),placeholder:"请输入Cookie值"},null,8,["value"])]),_:1})):re("",!0),l(k).operation==="add"||l(k).operation==="modify"?(x(),Y(W,{key:1,title:"Cookie属性",size:"small"},{default:t(()=>[e(le,{cols:2,"x-gap":16},{default:t(()=>[e(K,{label:"域名"},{default:t(()=>[e(B,{value:l(k).cookieAttributes.domain,"onUpdate:value":d[33]||(d[33]=D=>l(k).cookieAttributes.domain=D),placeholder:"如：.example.com"},null,8,["value"])]),_:1}),e(K,{label:"路径"},{default:t(()=>[e(B,{value:l(k).cookieAttributes.path,"onUpdate:value":d[34]||(d[34]=D=>l(k).cookieAttributes.path=D),placeholder:"如：/"},null,8,["value"])]),_:1})]),_:1}),e(le,{cols:3,"x-gap":16},{default:t(()=>[e(K,{label:"最大年龄(秒)"},{default:t(()=>[e(U,{value:l(k).cookieAttributes.maxAge,"onUpdate:value":d[35]||(d[35]=D=>l(k).cookieAttributes.maxAge=D),placeholder:"如：3600",min:0,style:{width:"100%"}},null,8,["value"])]),_:1}),e(K,{label:"安全传输"},{default:t(()=>[e(me,{value:l(k).cookieAttributes.secure,"onUpdate:value":d[36]||(d[36]=D=>l(k).cookieAttributes.secure=D),"checked-value":!0,"unchecked-value":!1},null,8,["value"])]),_:1}),e(K,{label:"仅HTTP"},{default:t(()=>[e(me,{value:l(k).cookieAttributes.httpOnly,"onUpdate:value":d[37]||(d[37]=D=>l(k).cookieAttributes.httpOnly=D),"checked-value":!0,"unchecked-value":!1},null,8,["value"])]),_:1})]),_:1}),e(ne,{label:"SameSite"},{default:t(()=>[e(ue,{value:l(k).cookieAttributes.sameSite,"onUpdate:value":d[38]||(d[38]=D=>l(k).cookieAttributes.sameSite=D),options:[{label:"Strict",value:"Strict"},{label:"Lax",value:"Lax"},{label:"None",value:"None"}],placeholder:"请选择SameSite属性"},null,8,["value"])]),_:1})]),_:1})):re("",!0)]),_:1})])):l(I).filterType==="response"?(x(),X("div",to,[e(Z,{vertical:"",size:"large"},{default:t(()=>[e(le,{cols:2,"x-gap":16},{default:t(()=>[e(K,{label:"操作类型"},{default:t(()=>[e(ue,{value:l(j).operation,"onUpdate:value":d[39]||(d[39]=D=>l(j).operation=D),options:l(i),placeholder:"请选择操作类型"},null,8,["value","options"])]),_:1}),e(K,{label:"请求阶段设置"},{default:t(()=>[e(me,{value:l(j).setInRequestPhase,"onUpdate:value":d[40]||(d[40]=D=>l(j).setInRequestPhase=D),"checked-value":!0,"unchecked-value":!1},null,8,["value"])]),_:1})]),_:1}),e(ne,{label:"过滤器配置"},{default:t(()=>[e(B,{value:l(j).filterConfigJson,"onUpdate:value":d[41]||(d[41]=D=>l(j).filterConfigJson=D),type:"textarea",placeholder:"请输入JSON格式的过滤器配置",rows:4},null,8,["value"])]),_:1}),e(ne,{label:"条件配置"},{default:t(()=>[e(B,{value:l(j).conditionsJson,"onUpdate:value":d[42]||(d[42]=D=>l(j).conditionsJson=D),type:"textarea",placeholder:"请输入JSON格式的条件配置",rows:3},null,8,["value"])]),_:1})]),_:1})])):(x(),X("div",ao,[e(he,{description:"请先选择过滤器类型"})]))]),_:1})]),_:1},8,["model","rules"])]),_:1},8,["show","title"])}}}),Mt=ge(lo,[["__scopeId","data-v-5aa0a028"]]),je=wt("/gateway/hub0021");function oo(s,N="default"){return je.post("/filterConfigs/byInstance",{gatewayInstanceId:s,tenantId:N})}function no(s,N="default"){return je.post("/filterConfigs/byRoute",{routeConfigId:s,tenantId:N})}function Ft(s){return je.post("/addFilterConfig",s)}function Re(s){return je.post("/editFilterConfig",s)}function zt(s,N="default"){return je.post("/deleteFilterConfig",{filterConfigId:s,tenantId:N})}const ro={key:0},so={class:"config-section"},io={class:"config-section"},uo={class:"config-section"},co={class:"config-section"},fo={class:"config-section"},po={class:"config-section"},vo={class:"filter-toolbar"},go={class:"toolbar-left"},mo={class:"toolbar-right"},yo={key:1},_o=ce({__name:"RouteAdvancedConfigDialog",props:{route:{default:null}},emits:["update:visible"],setup(s,{expose:N,emit:_}){const O=s,m=_,v=we(),g=z(!1),p=z([]),R=z(!1),I=z(!1),V=z(null),h=ae(()=>{var f;return((f=O.route)==null?void 0:f.routeConfigId)||""}),o=ae(()=>{var f;return((f=O.route)==null?void 0:f.routeName)||"未知路由"}),S=ae(()=>{var f;return((f=O.route)==null?void 0:f.gatewayInstanceId)||""}),H=async()=>{if(h.value){R.value=!0;try{const f=await no(h.value);if(f!=null&&f.oK&&f.bizData){const i=JSON.parse(f.bizData)||[];p.value=i.filter(w=>["post-routing","pre-response"].includes(w.filterAction)).sort((w,P)=>w.filterOrder-P.filterOrder)}else p.value=[]}catch(f){console.error("加载路由过滤器失败:",f),v.error("加载路由过滤器失败"),p.value=[]}finally{R.value=!1}}},L=()=>{V.value=null,I.value=!0,_e(()=>{})},F=f=>{V.value=f,I.value=!0},E=async f=>{try{R.value=!0;const i=await zt(f.filterConfigId);i!=null&&i.oK?(v.success("删除过滤器成功"),await H()):v.error((i==null?void 0:i.errMsg)||"删除过滤器失败")}catch(i){console.error("删除过滤器失败:",i),v.error("删除过滤器失败")}finally{R.value=!1}},k=async f=>{try{const i=f.activeFlag==="Y"?"N":"Y",w={...f,activeFlag:i},P=await Re(w);P!=null&&P.oK?(v.success(`过滤器已${i==="Y"?"启用":"禁用"}`),await H()):v.error((P==null?void 0:P.errMsg)||"更新过滤器状态失败")}catch(i){console.error("更新过滤器状态失败:",i),v.error("更新过滤器状态失败")}},j=async f=>{const i=p.value.findIndex(P=>P.filterConfigId===f.filterConfigId);if(i<=0)return;const w=p.value[i-1];await C(f,w)},$=async f=>{const i=p.value.findIndex(P=>P.filterConfigId===f.filterConfigId);if(i>=p.value.length-1)return;const w=p.value[i+1];await C(f,w)},C=async(f,i)=>{try{R.value=!0;const w=f.filterOrder,P={...f,filterOrder:i.filterOrder},q={...i,filterOrder:w},[T,A]=await Promise.all([Re(P),Re(q)]);T!=null&&T.oK&&(A!=null&&A.oK)?(v.success("调整执行顺序成功"),await H()):v.error("调整执行顺序失败")}catch(w){console.error("调整执行顺序失败:",w),v.error("调整执行顺序失败")}finally{R.value=!1}},r=async()=>{await H(),v.success("刷新完成")},a=async f=>{try{const i=f.filterConfigId?f.filterAction:"post-routing",w={tenantId:"default",routeConfigId:h.value,filterName:f.filterName,filterType:f.filterType,filterAction:i,filterOrder:f.filterOrder,filterConfig:JSON.stringify(f.config),filterDesc:f.filterDesc,activeFlag:f.activeFlag,addWho:"admin",editWho:"admin"};let P;f.filterConfigId?P=await Re({...w,filterConfigId:f.filterConfigId}):P=await Ft(w),P!=null&&P.oK?(v.success(`${f.filterConfigId?"编辑":"创建"}过滤器成功`),I.value=!1,await H()):v.error((P==null?void 0:P.errMsg)||`${f.filterConfigId?"编辑":"创建"}过滤器失败`)}catch(i){console.error("保存过滤器失败:",i),v.error("保存过滤器失败")}},n=f=>{if(!f){console.warn("无法打开路由配置管理：缺少路由信息");return}g.value=!0,H()},b=()=>{g.value=!1,m("update:visible",!1),p.value=[],I.value=!1,V.value=null},y=()=>{console.log("配置已变更")};return fe(()=>g.value,f=>{m("update:visible",f)}),fe(()=>O.route,f=>{f&&g.value&&H()}),N({openDialog:n,closeDialog:b}),(f,i)=>{const w=ie,P=se,q=Ae,T=xt,A=de,Q=Fe,d=et,B=Ze,K=xe,U=Ie,le=$e;return x(),Y(le,{show:g.value,"onUpdate:show":i[1]||(i[1]=ue=>g.value=ue),style:{width:"90%",maxWidth:"1400px",minWidth:"1000px"}},{default:t(()=>[e(U,{title:`路由配置管理 - ${o.value}`,bordered:!1,size:"huge",role:"dialog","aria-modal":"true"},{"header-extra":t(()=>[e(P,{quaternary:"",circle:"",onClick:b},{icon:t(()=>[e(w,null,{default:t(()=>[e(l(pt))]),_:1})]),_:1})]),footer:t(()=>[e(A,{justify:"end"},{default:t(()=>[e(P,{onClick:b},{default:t(()=>i[16]||(i[16]=[u("关闭")])),_:1})]),_:1})]),default:t(()=>[h.value?(x(),X("div",ro,[e(Q,{type:"info",style:{"margin-bottom":"16px"},"show-icon":!1},{header:t(()=>[e(q,{strong:""},{default:t(()=>i[2]||(i[2]=[u("配置说明")])),_:1})]),default:t(()=>[e(A,null,{default:t(()=>[e(q,{depth:"3"},{default:t(()=>[u("路由ID："+J(h.value),1)]),_:1}),e(T,{vertical:""}),e(q,{depth:"3"},{default:t(()=>[u("网关实例："+J(S.value),1)]),_:1}),e(T,{vertical:""}),e(q,{depth:"3"},{default:t(()=>i[3]||(i[3]=[u("配置级别：路由级（优先级高于实例级配置）")])),_:1})]),_:1})]),_:1}),e(B,{type:"line",animated:""},{default:t(()=>[e(d,{name:"predicates",tab:"断言配置"},{default:t(()=>[c("div",so,[e(jl,{"route-config-id":h.value},null,8,["route-config-id"])])]),_:1}),e(d,{name:"cors",tab:"CORS配置"},{default:t(()=>[c("div",io,[e(Ot,{"route-config-id":h.value,onDataChange:y},null,8,["route-config-id"])])]),_:1}),e(d,{name:"security",tab:"安全设置"},{default:t(()=>[c("div",uo,[e(Wt,{"route-config-id":h.value,"gateway-instance-id":S.value},null,8,["route-config-id","gateway-instance-id"]),e(Q,{type:"info",style:{"margin-top":"16px"}},{header:t(()=>i[4]||(i[4]=[u("路由安全配置说明")])),default:t(()=>[i[5]||(i[5]=u(" 路由安全配置仅作用于当前路由，支持多种安全策略： ")),i[6]||(i[6]=c("ul",{style:{margin:"8px 0","padding-left":"20px"}},[c("li",null,[c("strong",null,"IP访问控制"),u("：基于客户端IP地址的白名单/黑名单策略")]),c("li",null,[c("strong",null,"域名访问控制"),u("：限制特定域名的访问权限")]),c("li",null,[c("strong",null,"User-Agent过滤"),u("：基于浏览器标识的访问控制")]),c("li",null,[c("strong",null,"API访问控制"),u("：基于API密钥的访问验证")]),c("li",null,"路由级安全配置优先级高于网关实例级配置")],-1)),i[7]||(i[7]=u(" 支持的配置类型：IP_ACCESS、DOMAIN_ACCESS、USER_AGENT_ACCESS、API_ACCESS "))]),_:1})])]),_:1}),e(d,{name:"auth",tab:"认证配置"},{default:t(()=>[c("div",co,[e(Pt,{"route-config-id":h.value,onDataChange:y},null,8,["route-config-id"])])]),_:1}),e(d,{name:"rateLimit",tab:"限流配置"},{default:t(()=>[c("div",fo,[e(Dt,{"route-config-id":h.value,onDataChange:y},null,8,["route-config-id"])])]),_:1}),e(d,{name:"filters",tab:"过滤器配置"},{default:t(()=>[c("div",po,[c("div",vo,[c("div",go,[e(A,null,{default:t(()=>[e(q,{strong:""},{default:t(()=>i[8]||(i[8]=[u("路由过滤器管理")])),_:1}),e(q,{depth:"3"},{default:t(()=>i[9]||(i[9]=[u("管理作用于当前路由的后置处理过滤器")])),_:1})]),_:1})]),c("div",mo,[e(A,null,{default:t(()=>[e(P,{type:"primary",onClick:L,disabled:!h.value},{icon:t(()=>[e(w,null,{default:t(()=>[e(l(rt))]),_:1})]),default:t(()=>[i[10]||(i[10]=u(" 新建过滤器 "))]),_:1},8,["disabled"]),e(P,{onClick:r,loading:R.value},{icon:t(()=>[e(w,null,{default:t(()=>[e(l(Ue))]),_:1})]),default:t(()=>[i[11]||(i[11]=u(" 刷新 "))]),_:1},8,["loading"])]),_:1})])]),e(Il,{filters:p.value,loading:R.value,onEdit:F,onDelete:E,onToggleStatus:k,onMoveUp:j,onMoveDown:$},null,8,["filters","loading"]),e(Q,{type:"info",style:{"margin-top":"16px"}},{header:t(()=>i[12]||(i[12]=[u("路由过滤器说明")])),default:t(()=>[i[13]||(i[13]=u(" 路由过滤器配置仅作用于当前路由，支持多种执行时机： ")),i[14]||(i[14]=c("ul",{style:{margin:"8px 0","padding-left":"20px"}},[c("li",null,[c("strong",null,"后置处理"),u("：在路由匹配后、转发到后端服务前执行")]),c("li",null,[c("strong",null,"响应前处理"),u("：在返回响应给客户端前执行")]),c("li",null,"支持多个过滤器，按执行顺序依次处理"),c("li",null,"路由级过滤器优先级高于全局过滤器")],-1)),i[15]||(i[15]=u(" 支持的过滤器类型：header、query-param、body、strip、rewrite、method、cookie、response "))]),_:1})])]),_:1})]),_:1})])):(x(),X("div",yo,[e(K,{description:"请选择一个路由进行配置管理"})])),e(Mt,{show:I.value,"onUpdate:show":i[0]||(i[0]=ue=>I.value=ue),"filter-data":V.value,onSave:a},null,8,["show","filter-data"])]),_:1},8,["title"])]),_:1},8,["show"])}}}),bo=ge(_o,[["__scopeId","data-v-d83bee2a"]]),ho={class:"route-config-manager"},Co={class:"statistics-cards"},wo={class:"toolbar",style:{display:"flex","justify-content":"space-between","align-items":"center"}},To={class:"toolbar-left"},Io={class:"toolbar-right"},xo=ce({__name:"RouteConfigManager",props:{gatewayInstanceId:{}},setup(s,{expose:N}){const _=s,O=z(),m=z(),{routes:v,loading:g,statistics:p,queryParams:R,matchTypeOptions:I,statusOptions:V,getRoutes:h,deleteRoute:o,batchDeleteRoutes:S,batchToggleRoutes:H,resetQuery:L,total:F}=wa(),{naiveConfig:E,setTotal:k}=Kt({initialPage:R.pageIndex||1,initialPageSize:R.pageSize||20,onPageChange:oe=>{R.pageIndex=oe,h()},onPageSizeChange:(oe,W)=>{R.pageIndex=oe,R.pageSize=W,h()}}),{editingRoute:j,viewingRoute:$,showDetailDialog:C,selectedRoutes:r,batchDeleting:a,batchToggling:n,hasSelection:b,handleView:y,handleDialogSuccess:f,handleDelete:i,handleBatchDelete:w,handleBatchEnable:P,handleBatchDisable:q,handleSelectionChange:T,configManagementRoute:A}=Ta({onRefresh:()=>{h()},onAddRoute:async()=>{await h()},findRouteCallback:oe=>v.value.find(W=>W.routeConfigId===oe)}),Q=()=>{R.pageIndex=1,h()},d=()=>{L(),h()},B=()=>{h()},K=()=>{var oe;(oe=O.value)==null||oe.openDialog(void 0,_.gatewayInstanceId)},U=oe=>{var W;(W=O.value)==null||W.openDialog(oe,_.gatewayInstanceId)},le=()=>{w(S)},ue=()=>{P(H)},me=()=>{q(H)},ne=oe=>{i(oe,o)},Z=oe=>{oe||(A.value=null)},{columns:te}=Ia({onView:y,onEdit:U,onDelete:ne,onRouteConfig:oe=>{A.value=null,_e(()=>{A.value=oe})}});return fe(()=>_.gatewayInstanceId,oe=>{oe&&(R.gatewayInstanceId=oe,h())},{immediate:!0}),fe(()=>A.value,(oe,W)=>{var he;oe&&oe!==W&&((he=m.value)==null||he.openDialog(oe))}),fe(F,oe=>{k(oe)}),N({refresh:B}),(oe,W)=>{const he=oa,Te=Ie,ke=it,Be=qe,D=it,mt=Ee,Ve=De,yt=Me,Oe=ie,Pe=se,st=de,Ut=Ye,$t=xe,Yt=at;return x(),X("div",ho,[e(Be,{cols:1,"x-gap":0,"y-gap":16},{default:t(()=>[e(D,null,{default:t(()=>[c("div",Co,[e(Be,{cols:6,"x-gap":16},{default:t(()=>[e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"总路由数",value:l(p).totalRoutes},{suffix:t(()=>W[6]||(W[6]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1}),e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"启用路由",value:l(p).activeRoutes},{suffix:t(()=>W[7]||(W[7]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1}),e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"禁用路由",value:l(p).inactiveRoutes},{suffix:t(()=>W[8]||(W[8]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1}),e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"精确匹配",value:l(p).exactMatchRoutes},{suffix:t(()=>W[9]||(W[9]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1}),e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"前缀匹配",value:l(p).prefixMatchRoutes},{suffix:t(()=>W[10]||(W[10]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1}),e(ke,null,{default:t(()=>[e(Te,{embedded:""},{default:t(()=>[e(he,{label:"正则匹配",value:l(p).regexMatchRoutes},{suffix:t(()=>W[11]||(W[11]=[u("个")])),_:1},8,["value"])]),_:1})]),_:1})]),_:1})])]),_:1}),e(D,null,{default:t(()=>[e(Te,{bordered:!1},{default:t(()=>[e(Ut,{inline:"","label-width":80},{default:t(()=>[e(Ve,{label:"路由名称"},{default:t(()=>[e(mt,{value:l(R).routeName,"onUpdate:value":W[0]||(W[0]=ye=>l(R).routeName=ye),placeholder:"请输入路由名称",clearable:""},null,8,["value"])]),_:1}),e(Ve,{label:"路由路径"},{default:t(()=>[e(mt,{value:l(R).routePath,"onUpdate:value":W[1]||(W[1]=ye=>l(R).routePath=ye),placeholder:"请输入路由路径",clearable:""},null,8,["value"])]),_:1}),e(Ve,{label:"匹配类型"},{default:t(()=>[e(yt,{value:l(R).matchType,"onUpdate:value":W[2]||(W[2]=ye=>l(R).matchType=ye),options:l(I),placeholder:"请选择匹配类型",clearable:"",style:{width:"120px"}},null,8,["value","options"])]),_:1}),e(Ve,{label:"状态"},{default:t(()=>[e(yt,{value:l(R).activeFlag,"onUpdate:value":W[3]||(W[3]=ye=>l(R).activeFlag=ye),options:l(V),placeholder:"请选择状态",clearable:"",style:{width:"100px"}},null,8,["value","options"])]),_:1}),e(Ve,null,{default:t(()=>[e(st,null,{default:t(()=>[e(Pe,{type:"primary",onClick:Q},{icon:t(()=>[e(Oe,{component:l(Jt)},null,8,["component"])]),default:t(()=>[W[12]||(W[12]=u(" 搜索 "))]),_:1}),e(Pe,{onClick:d},{icon:t(()=>[e(Oe,{component:l(Ue)},null,8,["component"])]),default:t(()=>[W[13]||(W[13]=u(" 重置 "))]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),e(D,null,{default:t(()=>[c("div",wo,[c("div",To,[e(st,null,{default:t(()=>[e(Pe,{type:"primary",onClick:K},{icon:t(()=>[e(Oe,{component:l(rt)},null,8,["component"])]),default:t(()=>[W[14]||(W[14]=u(" 新建路由 "))]),_:1}),e(Pe,{type:"error",disabled:!l(b),onClick:le,loading:l(a)},{icon:t(()=>[e(Oe,{component:l(Le)},null,8,["component"])]),default:t(()=>[W[15]||(W[15]=u(" 批量删除 "))]),_:1},8,["disabled","loading"]),e(Pe,{type:"success",disabled:!l(b),onClick:ue,loading:l(n)},{icon:t(()=>[e(Oe,{component:l(aa)},null,8,["component"])]),default:t(()=>[W[16]||(W[16]=u(" 批量启用 "))]),_:1},8,["disabled","loading"]),e(Pe,{type:"warning",disabled:!l(b),onClick:me,loading:l(n)},{icon:t(()=>[e(Oe,{component:l(la)},null,8,["component"])]),default:t(()=>[W[17]||(W[17]=u(" 批量禁用 "))]),_:1},8,["disabled","loading"])]),_:1})]),c("div",Io,[e(st,null,{default:t(()=>[e(Pe,{onClick:B,loading:l(g)},{icon:t(()=>[e(Oe,{component:l(Ue)},null,8,["component"])]),default:t(()=>[W[18]||(W[18]=u(" 刷新 "))]),_:1},8,["loading"])]),_:1})])])]),_:1}),e(D,null,{default:t(()=>[e(Te,{bordered:!1},{default:t(()=>[e(Yt,{ref:"tableRef",columns:l(te),data:l(v),loading:l(g),pagination:l(E),"row-key":ye=>ye.routeConfigId,"checked-row-keys":l(r),"onUpdate:checkedRowKeys":W[4]||(W[4]=ye=>l(T)(ye)),"scroll-x":1400,striped:"",size:"small","flex-height":"",style:{"min-height":"400px"},remote:""},{empty:t(()=>[e($t,{description:"暂无路由配置"})]),_:1},8,["columns","data","loading","pagination","row-key","checked-row-keys"])]),_:1})]),_:1})]),_:1}),e(Wa,{ref_key:"routeConfigDialogRef",ref:O,"editing-route":l(j),"gateway-instance-id":_.gatewayInstanceId,onSuccess:l(f)},null,8,["editing-route","gateway-instance-id","onSuccess"]),e(bo,{ref_key:"routeAdvancedConfigDialogRef",ref:m,route:l(A),"onUpdate:visible":Z},null,8,["route"]),e(cl,{visible:l(C),route:l($),"onUpdate:visible":W[5]||(W[5]=ye=>C.value=ye)},null,8,["visible","route"])])}}}),ko=ge(xo,[["__scopeId","data-v-e6c6cf3f"]]),Ro={class:"router-config-manager"},So={key:1},No={class:"header"},Oo={class:"header-left"},Po={class:"header-right"},Do=ce({__name:"RouterConfigManager",props:{gatewayInstanceId:{}},emits:["router-status-change","router-config-ready"],setup(s,{emit:N}){const _=s,O=N;_.gatewayInstanceId||console.warn("RouterConfigManager: gatewayInstanceId is required");const m=we(),v=z(!1),g=z(!1),p=z(),R=z(null),I=z(!1),V=z(!1),h=z(!1),o=be({gatewayInstanceId:"",routerConfigId:"",routerName:"默认Router",routerDesc:"",defaultPriority:100,enableRouteCache:"Y",routeCacheTtlSeconds:300,maxRoutes:1e3,routeMatchTimeout:5e3,enableStrictMode:"N",enableMetrics:"Y",enableTracing:"N",caseSensitive:"N",removeTrailingSlash:"Y",enableGlobalFilters:"Y",filterExecutionMode:"SEQUENTIAL",maxFilterChainDepth:10,enableRoutePooling:"N",routePoolSize:100,enableAsyncProcessing:"N",enableFallback:"N",fallbackRoute:"",notFoundStatusCode:404,notFoundMessage:"Route not found",activeFlag:"Y",noteText:""}),S=[{label:"顺序执行",value:"SEQUENTIAL"},{label:"并行执行",value:"PARALLEL"}],H={routerName:[{required:!0,message:"请输入Router名称",trigger:"blur"}],defaultPriority:[{required:!0,type:"number",message:"请输入默认优先级",trigger:"blur"}],routeCacheTtlSeconds:[{required:!0,type:"number",message:"请输入缓存TTL",trigger:"blur"}],notFoundStatusCode:[{required:!0,type:"number",message:"请输入404状态码",trigger:"blur"}],notFoundMessage:[{required:!0,message:"请输入404消息",trigger:"blur"}]},L=async()=>{if(!(!_.gatewayInstanceId||I.value)){v.value=!0,V.value=!1,h.value=!1;try{console.log("开始加载Router配置，网关实例ID:",_.gatewayInstanceId);const C=await ba(_.gatewayInstanceId);if(console.log("API响应:",C),I.value)return;if(C!=null&&C.oK){if(!C.bizData){console.warn("No bizData in response"),V.value=!1,R.value=JSON.parse(JSON.stringify(o));return}let r;try{r=JSON.parse(C.bizData)}catch(n){console.error("Error parsing bizData:",n),m.error("解析Router配置数据失败"),V.value=!1;return}let a=[];if(Array.isArray(r)?a=r:r&&r.routerConfigs&&Array.isArray(r.routerConfigs)&&(a=r.routerConfigs,console.log("Router configs data:",r)),a.length>0){const n=a[0];V.value=!0,h.value=!0,console.log("Loading router config:",n),Object.assign(o,{routerConfigId:n.routerConfigId||"",routerName:n.routerName||"默认Router",routerDesc:n.routerDesc||"",defaultPriority:n.defaultPriority||100,enableRouteCache:n.enableRouteCache||"Y",routeCacheTtlSeconds:n.routeCacheTtlSeconds||300,maxRoutes:n.maxRoutes||1e3,routeMatchTimeout:n.routeMatchTimeout||5e3,enableStrictMode:n.enableStrictMode||"N",enableMetrics:n.enableMetrics||"Y",enableTracing:n.enableTracing||"N",caseSensitive:n.caseSensitive||"N",removeTrailingSlash:n.removeTrailingSlash||"Y",enableGlobalFilters:n.enableGlobalFilters||"Y",filterExecutionMode:n.filterExecutionMode||"SEQUENTIAL",maxFilterChainDepth:n.maxFilterChainDepth||10,enableRoutePooling:n.enableRoutePooling||"N",routePoolSize:n.routePoolSize||100,enableAsyncProcessing:n.enableAsyncProcessing||"N",enableFallback:n.enableFallback||"N",fallbackRoute:n.fallbackRoute||"",notFoundStatusCode:n.notFoundStatusCode||404,notFoundMessage:n.notFoundMessage||"Route not found",activeFlag:n.activeFlag||"Y",noteText:n.noteText||""}),console.log("Router config loaded successfully. configExists:",V.value),console.log("Form data updated:",{routerConfigId:o.routerConfigId,routerName:o.routerName})}else console.log("No router configs found for instance:",_.gatewayInstanceId),V.value=!1;R.value=JSON.parse(JSON.stringify(o))}else{const r=(C==null?void 0:C.errMsg)||"加载Router配置失败";console.error("API response error:",C),m.error(r)}}catch(C){console.error("Error loading router config:",C),m.error("加载Router配置时发生错误: "+(C instanceof Error?C.message:String(C)))}finally{v.value=!1,O("router-status-change",V.value),O("router-config-ready",h.value)}}},F=ae(()=>R.value?JSON.stringify(o)!==JSON.stringify(R.value):!1);fe(()=>_.gatewayInstanceId,async C=>{if(C){o.gatewayInstanceId=C;try{await L()}catch(r){console.error("Error in watcher callback:",r),m.error("加载Router配置时发生错误")}}},{immediate:!0});const E=async()=>{if(p.value)try{await p.value.validate(),g.value=!0;const C={routerConfigId:o.routerConfigId,gatewayInstanceId:o.gatewayInstanceId,routerName:o.routerName,routerDesc:o.routerDesc,defaultPriority:o.defaultPriority,enableRouteCache:o.enableRouteCache,routeCacheTtlSeconds:o.routeCacheTtlSeconds,maxRoutes:o.maxRoutes,routeMatchTimeout:o.routeMatchTimeout,enableStrictMode:o.enableStrictMode,enableMetrics:o.enableMetrics,enableTracing:o.enableTracing,caseSensitive:o.caseSensitive,removeTrailingSlash:o.removeTrailingSlash,enableGlobalFilters:o.enableGlobalFilters,filterExecutionMode:o.filterExecutionMode,maxFilterChainDepth:o.maxFilterChainDepth,enableRoutePooling:o.enableRoutePooling,routePoolSize:o.routePoolSize,enableAsyncProcessing:o.enableAsyncProcessing,enableFallback:o.enableFallback,fallbackRoute:o.fallbackRoute,notFoundStatusCode:o.notFoundStatusCode,notFoundMessage:o.notFoundMessage,activeFlag:o.activeFlag,noteText:o.noteText,routerMetadata:{},customConfig:{}};let r;if(o.routerConfigId?r=await ha(C):r=await Ct(C),r.oK)if(m.success("Router配置保存成功"),r.bizData)try{const a=JSON.parse(r.bizData);a&&(Object.assign(o,{routerConfigId:a.routerConfigId||o.routerConfigId,routerName:a.routerName||o.routerName,routerDesc:a.routerDesc||o.routerDesc,defaultPriority:a.defaultPriority||o.defaultPriority,enableRouteCache:a.enableRouteCache||o.enableRouteCache,routeCacheTtlSeconds:a.routeCacheTtlSeconds||o.routeCacheTtlSeconds,maxRoutes:a.maxRoutes||o.maxRoutes,routeMatchTimeout:a.routeMatchTimeout||o.routeMatchTimeout,enableStrictMode:a.enableStrictMode||o.enableStrictMode,enableMetrics:a.enableMetrics||o.enableMetrics,enableTracing:a.enableTracing||o.enableTracing,caseSensitive:a.caseSensitive||o.caseSensitive,removeTrailingSlash:a.removeTrailingSlash||o.removeTrailingSlash,enableGlobalFilters:a.enableGlobalFilters||o.enableGlobalFilters,filterExecutionMode:a.filterExecutionMode||o.filterExecutionMode,maxFilterChainDepth:a.maxFilterChainDepth||o.maxFilterChainDepth,enableRoutePooling:a.enableRoutePooling||o.enableRoutePooling,routePoolSize:a.routePoolSize||o.routePoolSize,enableAsyncProcessing:a.enableAsyncProcessing||o.enableAsyncProcessing,enableFallback:a.enableFallback||o.enableFallback,fallbackRoute:a.fallbackRoute||o.fallbackRoute,notFoundStatusCode:a.notFoundStatusCode||o.notFoundStatusCode,notFoundMessage:a.notFoundMessage||o.notFoundMessage,activeFlag:a.activeFlag||o.activeFlag,noteText:a.noteText||o.noteText}),R.value=JSON.parse(JSON.stringify(o)))}catch(a){console.error("Error parsing updated config:",a),await L()}else await L();else m.error("保存Router配置失败")}catch(C){console.error("Error saving router config:",C),m.error("保存Router配置时发生错误")}finally{g.value=!1}},k=async()=>{await L(),m.success("刷新完成")},j=()=>{R.value&&(Object.assign(o,JSON.parse(JSON.stringify(R.value))),m.success("配置已重置"))},$=async()=>{if(!_.gatewayInstanceId){m.error("网关实例ID不能为空");return}h.value=!0,O("router-config-ready",!0),g.value=!0;try{const C={gatewayInstanceId:_.gatewayInstanceId,routerName:o.routerName,routerDesc:o.routerDesc,defaultPriority:o.defaultPriority,enableRouteCache:o.enableRouteCache,routeCacheTtlSeconds:o.routeCacheTtlSeconds,maxRoutes:o.maxRoutes,routeMatchTimeout:o.routeMatchTimeout,enableStrictMode:o.enableStrictMode,enableMetrics:o.enableMetrics,enableTracing:o.enableTracing,caseSensitive:o.caseSensitive,removeTrailingSlash:o.removeTrailingSlash,enableGlobalFilters:o.enableGlobalFilters,filterExecutionMode:o.filterExecutionMode,maxFilterChainDepth:o.maxFilterChainDepth,enableRoutePooling:o.enableRoutePooling,routePoolSize:o.routePoolSize,enableAsyncProcessing:o.enableAsyncProcessing,enableFallback:o.enableFallback,fallbackRoute:o.fallbackRoute,notFoundStatusCode:o.notFoundStatusCode,notFoundMessage:o.notFoundMessage,activeFlag:o.activeFlag,noteText:o.noteText,routerMetadata:{},customConfig:{}},r=await Ct(C);if(r.oK){if(m.success("Router配置创建成功"),V.value=!0,r.bizData)try{const a=JSON.parse(r.bizData);a&&(o.routerConfigId=a.routerConfigId,R.value=JSON.parse(JSON.stringify(o)))}catch(a){console.error("Error parsing new config:",a),await L()}else await L();O("router-status-change",!0)}else m.error("创建Router配置失败")}catch(C){console.error("Error creating router config:",C),m.error("创建Router配置时发生错误")}finally{g.value=!1}};return He(()=>{_.gatewayInstanceId&&console.log("Router配置管理器初始化，网关实例ID:",_.gatewayInstanceId)}),jt(()=>{I.value=!0}),(C,r)=>{const a=se,n=xe,b=Ae,y=de,f=ie,i=Ee,w=vt,P=lt,q=qe,T=De,A=Ye,Q=Ie,d=Je,B=Me,K=kt;return x(),X("div",Ro,[!V.value&&!v.value?(x(),Y(n,{key:0,description:"当前网关实例暂无Router配置"},{extra:t(()=>[e(a,{type:"primary",onClick:$,loading:g.value},{default:t(()=>r[24]||(r[24]=[u(" 创建Router配置 ")])),_:1},8,["loading"])]),_:1})):V.value?(x(),X("div",So,[c("div",No,[c("div",Oo,[e(y,null,{default:t(()=>[e(b,{strong:""},{default:t(()=>r[25]||(r[25]=[u("Router配置")])),_:1}),e(b,{depth:"3"},{default:t(()=>r[26]||(r[26]=[u("配置当前网关实例的Router级别设置")])),_:1})]),_:1})]),c("div",Po,[e(y,null,{default:t(()=>[e(a,{type:"primary",onClick:E,loading:g.value,disabled:!_.gatewayInstanceId},{icon:t(()=>[e(f,null,{default:t(()=>[e(l(Xt))]),_:1})]),default:t(()=>[r[27]||(r[27]=u(" 保存配置 "))]),_:1},8,["loading","disabled"]),e(a,{onClick:k,loading:v.value},{icon:t(()=>[e(f,null,{default:t(()=>[e(l(Ue))]),_:1})]),default:t(()=>[r[28]||(r[28]=u(" 刷新 "))]),_:1},8,["loading"]),e(a,{onClick:j,disabled:!F.value},{icon:t(()=>[e(f,null,{default:t(()=>[e(l(Xe))]),_:1})]),default:t(()=>[r[29]||(r[29]=u(" 重置 "))]),_:1},8,["disabled"])]),_:1})])]),e(Q,{title:"Router基础配置",style:{"margin-bottom":"16px"}},{default:t(()=>[e(A,{ref_key:"formRef",ref:p,model:o,rules:H,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(q,{cols:2,"x-gap":24},{default:t(()=>[e(w,{label:"Router名称",path:"routerName"},{default:t(()=>[e(i,{value:o.routerName,"onUpdate:value":r[0]||(r[0]=U=>o.routerName=U),placeholder:"请输入Router名称"},null,8,["value"])]),_:1}),e(w,{label:"默认优先级",path:"defaultPriority"},{default:t(()=>[e(P,{value:o.defaultPriority,"onUpdate:value":r[1]||(r[1]=U=>o.defaultPriority=U),min:0,max:9999,placeholder:"默认路由优先级",style:{width:"100%"}},null,8,["value"])]),_:1})]),_:1}),e(T,{label:"Router描述",path:"routerDesc"},{default:t(()=>[e(i,{value:o.routerDesc,"onUpdate:value":r[2]||(r[2]=U=>o.routerDesc=U),type:"textarea",rows:2,placeholder:"请输入Router描述信息"},null,8,["value"])]),_:1})]),_:1},8,["model"])]),_:1}),e(Q,{title:"路由缓存配置",style:{"margin-bottom":"16px"}},{default:t(()=>[e(A,{model:o,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(q,{cols:2,"x-gap":24},{default:t(()=>[e(w,{label:"启用路由缓存"},{default:t(()=>[e(d,{value:o.enableRouteCache==="Y","onUpdate:value":r[3]||(r[3]=U=>o.enableRouteCache=U?"Y":"N")},null,8,["value"])]),_:1}),o.enableRouteCache==="Y"?(x(),Y(w,{key:0,label:"缓存TTL(秒)"},{default:t(()=>[e(P,{value:o.routeCacheTtlSeconds,"onUpdate:value":r[4]||(r[4]=U=>o.routeCacheTtlSeconds=U),min:1,max:86400,placeholder:"缓存存活时间",style:{width:"100%"}},null,8,["value"])]),_:1})):re("",!0)]),_:1}),o.enableRouteCache==="Y"?(x(),Y(q,{key:0,cols:2,"x-gap":24},{default:t(()=>[e(w,{label:"最大路由数"},{default:t(()=>[e(P,{value:o.maxRoutes,"onUpdate:value":r[5]||(r[5]=U=>o.maxRoutes=U),min:1,max:1e4,placeholder:"最大缓存路由数",style:{width:"100%"}},null,8,["value"])]),_:1}),e(w,{label:"路由匹配超时(ms)"},{default:t(()=>[e(P,{value:o.routeMatchTimeout,"onUpdate:value":r[6]||(r[6]=U=>o.routeMatchTimeout=U),min:100,max:3e4,placeholder:"路由匹配超时时间",style:{width:"100%"}},null,8,["value"])]),_:1})]),_:1})):re("",!0)]),_:1},8,["model"])]),_:1}),e(Q,{title:"全局过滤器配置",style:{"margin-bottom":"16px"}},{default:t(()=>[e(A,{model:o,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(q,{cols:2,"x-gap":24},{default:t(()=>[e(w,{label:"启用全局过滤器"},{default:t(()=>[e(d,{value:o.enableGlobalFilters==="Y","onUpdate:value":r[7]||(r[7]=U=>o.enableGlobalFilters=U?"Y":"N")},null,8,["value"])]),_:1}),o.enableGlobalFilters==="Y"?(x(),Y(w,{key:0,label:"过滤器执行模式"},{default:t(()=>[e(B,{value:o.filterExecutionMode,"onUpdate:value":r[8]||(r[8]=U=>o.filterExecutionMode=U),options:S,placeholder:"选择执行模式"},null,8,["value"])]),_:1})):re("",!0)]),_:1}),o.enableGlobalFilters==="Y"?(x(),Y(q,{key:0,cols:2,"x-gap":24},{default:t(()=>[e(w,{label:"最大过滤器链深度"},{default:t(()=>[e(P,{value:o.maxFilterChainDepth,"onUpdate:value":r[9]||(r[9]=U=>o.maxFilterChainDepth=U),min:1,max:100,placeholder:"过滤器链最大深度",style:{width:"100%"}},null,8,["value"])]),_:1}),e(w,{label:"启用异步处理"},{default:t(()=>[e(d,{value:o.enableAsyncProcessing==="Y","onUpdate:value":r[10]||(r[10]=U=>o.enableAsyncProcessing=U?"Y":"N")},null,8,["value"])]),_:1})]),_:1})):re("",!0)]),_:1},8,["model"])]),_:1}),e(Q,{title:"性能优化配置",style:{"margin-bottom":"16px"}},{default:t(()=>[e(A,{model:o,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(q,{cols:2,"x-gap":24},{default:t(()=>[e(w,{label:"启用严格模式"},{default:t(()=>[e(d,{value:o.enableStrictMode==="Y","onUpdate:value":r[11]||(r[11]=U=>o.enableStrictMode=U?"Y":"N")},null,8,["value"])]),_:1}),e(w,{label:"启用路由池"},{default:t(()=>[e(d,{value:o.enableRoutePooling==="Y","onUpdate:value":r[12]||(r[12]=U=>o.enableRoutePooling=U?"Y":"N")},null,8,["value"])]),_:1})]),_:1}),e(q,{cols:2,"x-gap":24},{default:t(()=>[o.enableRoutePooling==="Y"?(x(),Y(w,{key:0,label:"路由池大小"},{default:t(()=>[e(P,{value:o.routePoolSize,"onUpdate:value":r[13]||(r[13]=U=>o.routePoolSize=U),min:10,max:1e3,placeholder:"路由对象池大小",style:{width:"100%"}},null,8,["value"])]),_:1})):re("",!0),e(w,{label:"大小写敏感"},{default:t(()=>[e(d,{value:o.caseSensitive==="Y","onUpdate:value":r[14]||(r[14]=U=>o.caseSensitive=U?"Y":"N")},null,8,["value"])]),_:1})]),_:1}),e(q,{cols:2,"x-gap":24},{default:t(()=>[e(w,{label:"移除尾部斜杠"},{default:t(()=>[e(d,{value:o.removeTrailingSlash==="Y","onUpdate:value":r[15]||(r[15]=U=>o.removeTrailingSlash=U?"Y":"N")},null,8,["value"])]),_:1}),e(w,{label:"启用监控指标"},{default:t(()=>[e(d,{value:o.enableMetrics==="Y","onUpdate:value":r[16]||(r[16]=U=>o.enableMetrics=U?"Y":"N")},null,8,["value"])]),_:1})]),_:1})]),_:1},8,["model"])]),_:1}),e(Q,{title:"错误处理配置",style:{"margin-bottom":"16px"}},{default:t(()=>[e(A,{model:o,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(q,{cols:2,"x-gap":24},{default:t(()=>[e(w,{label:"启用降级处理"},{default:t(()=>[e(d,{value:o.enableFallback==="Y","onUpdate:value":r[17]||(r[17]=U=>o.enableFallback=U?"Y":"N")},null,8,["value"])]),_:1}),o.enableFallback==="Y"?(x(),Y(w,{key:0,label:"降级路由"},{default:t(()=>[e(i,{value:o.fallbackRoute,"onUpdate:value":r[18]||(r[18]=U=>o.fallbackRoute=U),placeholder:"降级路由路径"},null,8,["value"])]),_:1})):re("",!0)]),_:1}),e(q,{cols:2,"x-gap":24},{default:t(()=>[e(w,{label:"404状态码"},{default:t(()=>[e(P,{value:o.notFoundStatusCode,"onUpdate:value":r[19]||(r[19]=U=>o.notFoundStatusCode=U),min:400,max:599,placeholder:"未找到路由的状态码",style:{width:"100%"}},null,8,["value"])]),_:1}),e(w,{label:"404消息"},{default:t(()=>[e(i,{value:o.notFoundMessage,"onUpdate:value":r[20]||(r[20]=U=>o.notFoundMessage=U),placeholder:"未找到路由的错误消息"},null,8,["value"])]),_:1})]),_:1})]),_:1},8,["model"])]),_:1}),e(Q,{title:"其他配置"},{default:t(()=>[e(A,{model:o,"label-placement":"left","label-width":"140px"},{default:t(()=>[e(q,{cols:2,"x-gap":24},{default:t(()=>[e(w,{label:"启用链路追踪"},{default:t(()=>[e(d,{value:o.enableTracing==="Y","onUpdate:value":r[21]||(r[21]=U=>o.enableTracing=U?"Y":"N")},null,8,["value"])]),_:1}),e(w,{label:"配置状态"},{default:t(()=>[e(d,{value:o.activeFlag==="Y","onUpdate:value":r[22]||(r[22]=U=>o.activeFlag=U?"Y":"N")},null,8,["value"])]),_:1})]),_:1}),e(T,{label:"备注信息"},{default:t(()=>[e(i,{value:o.noteText,"onUpdate:value":r[23]||(r[23]=U=>o.noteText=U),type:"textarea",rows:3,placeholder:"请输入备注信息"},null,8,["value"])]),_:1})]),_:1},8,["model"])]),_:1})])):v.value?(x(),Y(K,{key:2,size:"large",style:{width:"100%","min-height":"200px"}})):re("",!0)])}}}),Ao=ge(Do,[["__scopeId","data-v-aece076a"]]),Eo={class:"global-filter-list"},Mo=ce({__name:"GlobalFilterList",props:{filters:{},loading:{type:Boolean,default:!1}},emits:["edit","delete","toggle-status","move-up","move-down"],setup(s,{emit:N}){const _=s,O=N,m=dt(),v=z(),g=z({page:1,pageSize:10,showSizePicker:!0,pageSizes:[10,20,50],showQuickJumper:!0,prefix:h=>`共 ${h.itemCount} 条`}),p=h=>{const o=gt.find(S=>S.value===h);return(o==null?void 0:o.label)||h},R=h=>({header:"primary","query-param":"info",body:"warning",strip:"success",rewrite:"success",method:"error",cookie:"default",response:"info"})[h]||"default",I=ae(()=>[{title:"执行顺序",key:"filterOrder",width:100,render:(h,o)=>M(de,{align:"center"},{default:()=>[M("span",{style:"font-weight: bold; color: #0066cc;"},h.filterOrder),M(de,{size:4},{default:()=>[M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"tiny",tertiary:!0,circle:!0,disabled:o===0,onClick:()=>O("move-up",h)},{icon:()=>M(ie,null,{default:()=>M(ot)})}),default:()=>"向上移动"}),M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"tiny",tertiary:!0,circle:!0,disabled:o===_.filters.length-1,onClick:()=>O("move-down",h)},{icon:()=>M(ie,null,{default:()=>M(nt)})}),default:()=>"向下移动"})]})]})},{title:"过滤器名称",key:"filterName",width:200,ellipsis:{tooltip:!0}},{title:"类型",key:"filterType",width:140,render:h=>M(Ce,{type:R(h.filterType),size:"small"},{default:()=>p(h.filterType)})},{title:"执行时机",key:"filterAction",width:120,render:()=>M(Ce,{type:"success",size:"small"},{default:()=>"前置处理"})},{title:"状态",key:"activeFlag",width:80,render:h=>M(Je,{value:h.activeFlag==="Y",onUpdateValue:()=>O("toggle-status",h)})},{title:"描述",key:"filterDesc",ellipsis:{tooltip:!0},render:h=>h.filterDesc||"-"},{title:"创建时间",key:"addTime",width:160,render:h=>h.addTime?new Date(h.addTime).toLocaleString():"-"},{title:"操作",key:"actions",width:120,fixed:"right",render:h=>M(de,{size:8},{default:()=>[M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"small",type:"primary",secondary:!0,onClick:()=>O("edit",h)},{icon:()=>M(ie,null,{default:()=>M(tt)})}),default:()=>"编辑过滤器"}),M(ve,{trigger:"hover"},{trigger:()=>M(se,{size:"small",type:"error",secondary:!0,onClick:()=>V(h)},{icon:()=>M(ie,null,{default:()=>M(Le)})}),default:()=>"删除过滤器"})]})}]),V=h=>{m.warning({title:"确认删除",content:`确定要删除过滤器"${h.filterName}"吗？此操作不可恢复。`,positiveText:"删除",negativeText:"取消",onPositiveClick:()=>{O("delete",h)}})};return(h,o)=>(x(),X("div",Eo,[e(l(at),{ref_key:"dataTableRef",ref:v,columns:I.value,data:h.filters,pagination:g.value,loading:h.loading,"row-key":S=>S.filterConfigId,"scroll-x":1200,striped:"",size:"small"},{empty:t(()=>[e(l(xe),{description:"暂无过滤器配置"})]),_:1},8,["columns","data","pagination","loading","row-key"])]))}}),Fo=ge(Mo,[["__scopeId","data-v-3ea047be"]]),zo={class:"global-filter-manager"},Uo={class:"toolbar"},$o={class:"toolbar-left"},Yo={class:"toolbar-right"},Vo={class:"filter-content"},Ho=ce({__name:"GlobalFilterManager",props:{gatewayInstanceId:{}},setup(s,{expose:N}){const _=s,O=we(),m=ft(),v=z(!1),g=z(!1),p=z(null),R=z([]),I=z(!1),V={success:r=>{!I.value&&m&&!m.isUnmounted&&_e(()=>{I.value||O.success(r)})},error:r=>{!I.value&&m&&!m.isUnmounted&&_e(()=>{I.value||O.error(r)})},warning:r=>{!I.value&&m&&!m.isUnmounted&&_e(()=>{I.value||O.warning(r)})}},h=async()=>{if(!(!_.gatewayInstanceId||I.value)){v.value=!0;try{const r=await oo(_.gatewayInstanceId);if(I.value)return;if(r!=null&&r.oK&&r.bizData){const a=JSON.parse(r.bizData)||[];R.value=a.filter(n=>n.filterAction==="pre-routing").sort((n,b)=>n.filterOrder-b.filterOrder)}else R.value=[]}catch(r){I.value||(console.error("加载全局过滤器失败:",r),V.error("加载全局过滤器失败"),R.value=[])}finally{I.value||(v.value=!1)}}},o=()=>{I.value||(p.value=null,g.value=!0)},S=r=>{I.value||(p.value=r,g.value=!0)},H=async r=>{if(!I.value)try{v.value=!0;const a=await zt(r.filterConfigId);if(I.value)return;a!=null&&a.oK?(V.success("删除过滤器成功"),await h()):V.error((a==null?void 0:a.errMsg)||"删除过滤器失败")}catch(a){I.value||(console.error("删除过滤器失败:",a),V.error("删除过滤器失败"))}finally{I.value||(v.value=!1)}},L=async r=>{if(!I.value)try{const a=r.activeFlag==="Y"?"N":"Y",n={...r,activeFlag:a},b=await Re(n);if(I.value)return;b!=null&&b.oK?(V.success(`过滤器已${a==="Y"?"启用":"禁用"}`),await h()):V.error((b==null?void 0:b.errMsg)||"更新过滤器状态失败")}catch(a){I.value||(console.error("更新过滤器状态失败:",a),V.error("更新过滤器状态失败"))}},F=async r=>{if(I.value)return;const a=R.value.findIndex(b=>b.filterConfigId===r.filterConfigId);if(a<=0)return;const n=R.value[a-1];await k(r,n)},E=async r=>{if(I.value)return;const a=R.value.findIndex(b=>b.filterConfigId===r.filterConfigId);if(a>=R.value.length-1)return;const n=R.value[a+1];await k(r,n)},k=async(r,a)=>{if(!I.value)try{v.value=!0;const n=r.filterOrder,b={...r,filterOrder:a.filterOrder},y={...a,filterOrder:n},[f,i]=await Promise.all([Re(b),Re(y)]);if(I.value)return;f!=null&&f.oK&&(i!=null&&i.oK)?(V.success("调整执行顺序成功"),await h()):V.error("调整执行顺序失败")}catch(n){I.value||(console.error("调整执行顺序失败:",n),V.error("调整执行顺序失败"))}finally{I.value||(v.value=!1)}},j=async r=>{if(!I.value)try{const a={tenantId:"default",gatewayInstanceId:_.gatewayInstanceId,filterName:r.filterName,filterType:r.filterType,filterAction:"pre-routing",filterOrder:r.filterOrder,filterConfig:JSON.stringify(r.config),filterDesc:r.filterDesc,activeFlag:r.activeFlag,addWho:"admin",editWho:"admin"};let n;if(r.filterConfigId?n=await Re({...a,filterConfigId:r.filterConfigId}):n=await Ft(a),I.value)return;n!=null&&n.oK?(V.success(`${r.filterConfigId?"编辑":"创建"}过滤器成功`),g.value=!1,await h()):V.error((n==null?void 0:n.errMsg)||`${r.filterConfigId?"编辑":"创建"}过滤器失败`)}catch(a){I.value||(console.error("保存过滤器失败:",a),V.error("保存过滤器失败"))}},$=async()=>{I.value||(await h(),V.success("刷新完成"))},C=async()=>{I.value||await h()};return fe(()=>_.gatewayInstanceId,async r=>{r&&!I.value&&await h()},{immediate:!0}),He(()=>{_.gatewayInstanceId&&console.log("全局过滤器管理器初始化，网关实例ID:",_.gatewayInstanceId)}),ct(()=>{I.value=!0}),N({refresh:C,loadGlobalFilters:h}),(r,a)=>{const n=Ae,b=de,y=ie,f=se,i=Fe;return x(),X("div",zo,[c("div",Uo,[c("div",$o,[e(b,null,{default:t(()=>[e(n,{strong:""},{default:t(()=>a[1]||(a[1]=[u("全局过滤器管理")])),_:1}),e(n,{depth:"3"},{default:t(()=>a[2]||(a[2]=[u("管理作用于所有路由的全局前置过滤器")])),_:1})]),_:1})]),c("div",Yo,[e(b,null,{default:t(()=>[e(f,{type:"primary",onClick:o,disabled:!r.gatewayInstanceId},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(rt))]),_:1})]),default:t(()=>[a[3]||(a[3]=u(" 新建过滤器 "))]),_:1},8,["disabled"]),e(f,{onClick:$,loading:v.value},{icon:t(()=>[e(y,null,{default:t(()=>[e(l(Ue))]),_:1})]),default:t(()=>[a[4]||(a[4]=u(" 刷新 "))]),_:1},8,["loading"])]),_:1})])]),c("div",Vo,[e(Fo,{filters:R.value,loading:v.value,onEdit:S,onDelete:H,onToggleStatus:L,onMoveUp:F,onMoveDown:E},null,8,["filters","loading"])]),e(i,{type:"info",style:{"margin-top":"16px"}},{header:t(()=>a[5]||(a[5]=[u("全局过滤器说明")])),default:t(()=>[a[6]||(a[6]=u(" 全局过滤器配置作用于该网关实例的所有路由，仅支持前置处理类型： ")),a[7]||(a[7]=c("ul",{style:{margin:"8px 0","padding-left":"20px"}},[c("li",null,[c("strong",null,"前置处理"),u("：在路由匹配前执行，如认证、限流、请求头处理、参数验证等")]),c("li",null,"支持多个前置过滤器，按执行顺序依次处理"),c("li",null,"路由级别的过滤器为后置处理类型，在路由匹配后执行")],-1)),a[8]||(a[8]=u(" 支持的过滤器类型：header、query-param、body、strip、rewrite、method、cookie、response "))]),_:1}),e(Mt,{show:g.value,"onUpdate:show":a[0]||(a[0]=w=>g.value=w),"filter-data":p.value,onSave:j},null,8,["show","filter-data"])])}}}),Lo=ge(Ho,[["__scopeId","data-v-29f3fde4"]]),qo={class:"route-test-panel"},Jo={style:{display:"flex","align-items":"center",width:"100%"}},jo={style:{display:"flex","align-items":"center",width:"100%"}},Bo={key:0},Ko={key:1},Qo={key:0},Go=ce({__name:"RouteTestPanel",props:{gatewayInstanceId:{}},setup(s){const N=s,_=z(!1),O=z(null),m=z({method:"GET",path:"",host:"",headers:{},queryParams:{}}),v=z([]),g=z([]),p=[{label:"GET",value:"GET"},{label:"POST",value:"POST"},{label:"PUT",value:"PUT"},{label:"DELETE",value:"DELETE"},{label:"PATCH",value:"PATCH"},{label:"OPTIONS",value:"OPTIONS"},{label:"HEAD",value:"HEAD"}],R=async()=>{if(!N.gatewayInstanceId){console.warn("请先选择网关实例");return}_.value=!0;try{await new Promise(h=>setTimeout(h,1e3)),O.value={matched:Math.random()>.3,routeName:"用户管理API",priority:100,executionTime:Math.floor(Math.random()*50)+10,conflictRoutes:[]}}catch(h){console.error("测试执行失败",h)}finally{_.value=!1}},I=()=>{m.value={method:"GET",path:"",host:"",headers:{},queryParams:{}},v.value=[],g.value=[],O.value=null},V=h=>h===void 0?"未知":{[We.EXACT]:"精确匹配",[We.PREFIX]:"前缀匹配",[We.REGEX]:"正则匹配"}[h]||"未知";return(h,o)=>{const S=Fe,H=Me,L=De,F=it,E=Ee,k=qe,j=Rt,$=Ye,C=se,r=ie,a=de,n=Ie;return x(),X("div",qo,[e(a,{vertical:"",size:"large"},{default:t(()=>[e(S,{type:"info"},{header:t(()=>o[5]||(o[5]=[u("路由测试工具")])),default:t(()=>[o[6]||(o[6]=u(" 输入请求信息，测试路由匹配规则，验证路由配置是否正确。 "))]),_:1}),e(n,{title:"测试请求",bordered:!1},{footer:t(()=>[e(a,{justify:"end"},{default:t(()=>[e(C,{onClick:I},{default:t(()=>o[7]||(o[7]=[u("重置")])),_:1}),e(C,{type:"primary",loading:_.value,onClick:R},{icon:t(()=>[e(r,{component:l(da)},null,8,["component"])]),default:t(()=>[o[8]||(o[8]=u(" 执行测试 "))]),_:1},8,["loading"])]),_:1})]),default:t(()=>[e($,{model:m.value,"label-placement":"left","label-width":100},{default:t(()=>[e(k,{cols:2,"x-gap":16},{default:t(()=>[e(F,null,{default:t(()=>[e(L,{label:"请求方法"},{default:t(()=>[e(H,{value:m.value.method,"onUpdate:value":o[0]||(o[0]=b=>m.value.method=b),options:p},null,8,["value"])]),_:1})]),_:1}),e(F,null,{default:t(()=>[e(L,{label:"请求路径"},{default:t(()=>[e(E,{value:m.value.path,"onUpdate:value":o[1]||(o[1]=b=>m.value.path=b),placeholder:"/api/users"},null,8,["value"])]),_:1})]),_:1})]),_:1}),e(L,{label:"Host"},{default:t(()=>[e(E,{value:m.value.host,"onUpdate:value":o[2]||(o[2]=b=>m.value.host=b),placeholder:"api.example.com"},null,8,["value"])]),_:1}),e(L,{label:"请求头"},{default:t(()=>[e(j,{value:v.value,"onUpdate:value":o[3]||(o[3]=b=>v.value=b),"on-create":()=>({key:"",value:""})},{default:t(({value:b})=>[c("div",Jo,[e(E,{value:b.key,"onUpdate:value":y=>b.key=y,type:"text",placeholder:"Header Name",style:{"margin-right":"12px"}},null,8,["value","onUpdate:value"]),e(E,{value:b.value,"onUpdate:value":y=>b.value=y,type:"text",placeholder:"Header Value"},null,8,["value","onUpdate:value"])])]),_:1},8,["value"])]),_:1}),e(L,{label:"查询参数"},{default:t(()=>[e(j,{value:g.value,"onUpdate:value":o[4]||(o[4]=b=>g.value=b),"on-create":()=>({key:"",value:""})},{default:t(({value:b})=>[c("div",jo,[e(E,{value:b.key,"onUpdate:value":y=>b.key=y,type:"text",placeholder:"Param Name",style:{"margin-right":"12px"}},null,8,["value","onUpdate:value"]),e(E,{value:b.value,"onUpdate:value":y=>b.value=y,type:"text",placeholder:"Param Value"},null,8,["value","onUpdate:value"])])]),_:1},8,["value"])]),_:1})]),_:1},8,["model"])]),_:1}),O.value?(x(),Y(n,{key:0,title:"测试结果",bordered:!1},{default:t(()=>[e(S,{type:O.value.matched?"success":"warning"},{header:t(()=>[u(J(O.value.matched?"路由匹配成功":"路由匹配失败"),1)]),default:t(()=>[O.value.matched?(x(),X("div",Bo,[c("p",null,[o[9]||(o[9]=c("strong",null,"匹配路由:",-1)),u(" "+J(O.value.routeName),1)]),c("p",null,[o[10]||(o[10]=c("strong",null,"匹配类型:",-1)),u(" "+J(V(O.value.matchType)),1)]),c("p",null,[o[11]||(o[11]=c("strong",null,"优先级:",-1)),u(" "+J(O.value.priority),1)]),c("p",null,[o[12]||(o[12]=c("strong",null,"执行时间:",-1)),u(" "+J(O.value.executionTime)+"ms",1)])])):(x(),X("div",Ko,[o[14]||(o[14]=c("p",null,"没有找到匹配的路由规则",-1)),O.value.conflictRoutes&&O.value.conflictRoutes.length>0?(x(),X("div",Qo,[o[13]||(o[13]=c("p",null,[c("strong",null,"可能的冲突路由:")],-1)),c("ul",null,[(x(!0),X(Se,null,Ne(O.value.conflictRoutes,b=>(x(),X("li",{key:b.routeConfigId},J(b.routeName)+" ("+J(b.routePath)+") ",1))),128))])])):re("",!0)]))]),_:1},8,["type"])]),_:1})):re("",!0)]),_:1})])}}}),Wo=ge(Go,[["__scopeId","data-v-57030c57"]]),Xo={class:"route-management"},Zo={class:"instance-header"},en={class:"instance-selector"},tn={class:"select-empty"},an={class:"instance-content"},ln={class:"instance-details"},on={class:"tab-content"},nn={class:"tab-description"},rn={class:"info-content"},sn={class:"tab-content"},un={class:"tab-description"},dn={class:"info-content"},cn={class:"tab-content"},fn={class:"tab-description"},pn={class:"info-content"},vn={class:"tab-content"},gn={class:"tab-description"},mn={class:"info-content"},yn=ce({__name:"RouteManagement",setup(s){const N=we(),_=z(""),O=z([]),m=z([]),v=z(!1),g=z("router"),p=z(!1),R=z(!1),I=z(!1),V=z(),h=z(),o=z(),S=z(),H=ae(()=>!!_.value),L=ae(()=>m.value.find(a=>a.gatewayInstanceId===_.value)||null),F=()=>{p.value=!p.value},E=a=>{R.value=a,!I.value&&g.value!=="router"&&(g.value="router",N.info("检测到Router配置未准备，已自动切换到Router配置页面"))},k=a=>{I.value=a},j=async()=>{v.value=!0;try{const a=await pa({activeFlag:"Y",page:1,size:100});if(a.oK){const n=JSON.parse(a.bizData);m.value=n,O.value=n.map(b=>{const y=b.tlsEnabled==="Y"?b.httpsPort:b.httpPort;return{label:`${b.instanceName||"未命名"} (${b.bindAddress||"-"}:${y||"-"})`,value:b.gatewayInstanceId,healthStatus:b.healthStatus,disabled:b.healthStatus!=="Y"}}),n.length>0&&$(n[0].gatewayInstanceId)}else N.error("获取网关实例列表失败")}catch(a){console.error("Error loading gateway instances:",a),N.error("获取网关实例列表时发生错误")}finally{v.value=!1}},$=a=>{_.value=a,R.value=!1,I.value=!1,g.value="router",_e(()=>{C()})},C=async()=>{if(H.value){await _e();try{switch(g.value){case"router":h.value&&typeof h.value.loadRouterConfig=="function"&&await h.value.loadRouterConfig();break;case"routes":V.value&&typeof V.value.refresh=="function"&&await V.value.refresh();break;case"globalFilters":o.value&&typeof o.value.refresh=="function"&&await o.value.refresh();break;case"test":S.value&&typeof S.value.refresh=="function"&&await S.value.refresh();break}}catch(a){console.error("刷新组件时发生错误:",a)}}},r=a=>{if(!I.value&&g.value!=="router"){g.value="router",N.info("检测到Router配置未准备，已自动切换到Router配置页面");return}g.value=a,setTimeout(()=>{C()},200)};return He(()=>{j()}),(a,n)=>{const b=ie,y=Me,f=se,i=Ie,w=Ce,P=It,q=Tt,T=ra,A=Fe,Q=et,d=Ze,B=xe;return x(),X("div",Xo,[e(i,{class:"instance-selector-card",size:"small"},{header:t(()=>[c("div",Zo,[e(b,{size:"20",color:"#18a058"},{default:t(()=>[e(l(Ge))]),_:1}),n[2]||(n[2]=c("span",null,"网关实例选择",-1))])]),default:t(()=>[c("div",en,[e(y,{value:_.value,"onUpdate:value":[n[0]||(n[0]=K=>_.value=K),$],placeholder:"请选择网关实例",options:O.value,loading:v.value,filterable:"",clearable:""},{empty:t(()=>[c("div",tn,[e(b,{size:"16",color:"#d03050"},{default:t(()=>[e(l(na))]),_:1}),n[3]||(n[3]=c("span",null,"暂无可用的网关实例",-1))])]),_:1},8,["value","options","loading"]),e(f,{onClick:j,disabled:v.value},{icon:t(()=>[e(b,{component:l(Xe)},null,8,["component"])]),default:t(()=>[n[4]||(n[4]=u(" 刷新列表 "))]),_:1},8,["disabled"])])]),_:1}),H.value?(x(),Y(i,{key:0,class:"instance-info-card",size:"small"},{header:t(()=>[c("div",{class:"instance-header",onClick:F,style:{cursor:"pointer"}},[e(b,{size:"20",color:"#18a058"},{default:t(()=>[e(l(Ge))]),_:1}),n[5]||(n[5]=c("span",null,"网关实例信息",-1)),n[6]||(n[6]=c("div",{class:"flex-spacer"},null,-1)),e(b,{size:"16",color:p.value?"#18a058":"#999"},{default:t(()=>[(x(),Y(Bt(p.value?l(ot):l(nt))))]),_:1},8,["color"])])]),default:t(()=>[e(T,{show:p.value},{default:t(()=>[c("div",an,[c("div",ln,[e(q,{column:3,size:"small",bordered:""},{default:t(()=>[e(P,{label:"实例ID"},{default:t(()=>[e(w,{type:"info",size:"small"},{default:t(()=>[u(J(_.value),1)]),_:1})]),_:1}),e(P,{label:"实例名称"},{default:t(()=>[e(w,{type:"success",size:"small"},{default:t(()=>{var K;return[u(J(((K=L.value)==null?void 0:K.instanceName)||"未命名"),1)]}),_:1})]),_:1}),e(P,{label:"状态"},{default:t(()=>{var K;return[e(w,{type:((K=L.value)==null?void 0:K.activeFlag)==="Y"?"success":"error",size:"small"},{default:t(()=>{var U;return[u(J(((U=L.value)==null?void 0:U.activeFlag)==="Y"?"运行中":"已停用"),1)]}),_:1},8,["type"])]}),_:1}),e(P,{label:"绑定地址"},{default:t(()=>{var K;return[u(J(((K=L.value)==null?void 0:K.bindAddress)||"-"),1)]}),_:1}),e(P,{label:"监听端口"},{default:t(()=>{var K,U,le;return[u(J(((K=L.value)==null?void 0:K.tlsEnabled)==="Y"?((U=L.value)==null?void 0:U.httpsPort)||"-":((le=L.value)==null?void 0:le.httpPort)||"-"),1)]}),_:1}),e(P,{label:"健康状态"},{default:t(()=>{var K;return[e(w,{type:((K=L.value)==null?void 0:K.healthStatus)==="Y"?"success":"warning",size:"small"},{default:t(()=>{var U;return[u(J(((U=L.value)==null?void 0:U.healthStatus)==="Y"?"健康":"异常"),1)]}),_:1},8,["type"])]}),_:1})]),_:1})])])]),_:1},8,["show"])]),_:1})):re("",!0),H.value?(x(),Y(i,{key:1,class:"main-content"},{default:t(()=>[e(d,{type:"segment",size:"large",value:g.value,"onUpdate:value":[n[1]||(n[1]=K=>g.value=K),r]},{default:t(()=>[e(Q,{name:"router",tab:"Router配置"},{default:t(()=>[c("div",on,[c("div",nn,[e(A,{type:"info","show-icon":!1},{default:t(()=>[c("div",rn,[e(b,{size:"16",color:"#2080f0"},{default:t(()=>[e(l(Ke))]),_:1}),n[7]||(n[7]=c("span",null,"配置Router级别设置，包括路由缓存、全局过滤器开关、性能优化等。Router是路由管理的核心引擎，必须先创建。",-1))])]),_:1})]),(x(),Y(Ao,{ref_key:"routerConfigRef",ref:h,"gateway-instance-id":_.value,key:`router-${_.value}`,onRouterStatusChange:E,onRouterConfigReady:k},null,8,["gateway-instance-id"]))])]),_:1}),e(Q,{name:"routes",tab:"路由配置"},{default:t(()=>[c("div",sn,[c("div",un,[e(A,{type:"info","show-icon":!1},{default:t(()=>[c("div",dn,[e(b,{size:"16",color:"#2080f0"},{default:t(()=>[e(l(Ke))]),_:1}),n[8]||(n[8]=c("span",null,"配置路由规则，包括路径匹配、请求转发、过滤器等。路由是网关的核心功能。",-1))])]),_:1})]),(x(),Y(ko,{ref_key:"routeConfigRef",ref:V,"gateway-instance-id":_.value,key:`routes-${_.value}`},null,8,["gateway-instance-id"]))])]),_:1}),e(Q,{name:"globalFilters",tab:"全局过滤器"},{default:t(()=>[c("div",cn,[c("div",fn,[e(A,{type:"info","show-icon":!1},{default:t(()=>[c("div",pn,[e(b,{size:"16",color:"#2080f0"},{default:t(()=>[e(l(Ke))]),_:1}),n[9]||(n[9]=c("span",null,"配置全局过滤器，作用于所有路由。全局过滤器仅支持前置处理，在路由匹配前执行。",-1))])]),_:1})]),(x(),Y(Lo,{ref_key:"globalFilterRef",ref:o,"gateway-instance-id":_.value,key:`filters-${_.value}`},null,8,["gateway-instance-id"]))])]),_:1}),e(Q,{name:"test",tab:"路由测试"},{default:t(()=>[c("div",vn,[c("div",gn,[e(A,{type:"info","show-icon":!1},{default:t(()=>[c("div",mn,[e(b,{size:"16",color:"#2080f0"},{default:t(()=>[e(l(Ke))]),_:1}),n[10]||(n[10]=c("span",null,"测试路由匹配和转发功能，验证路由配置是否正确。支持模拟各种HTTP请求。",-1))])]),_:1})]),(x(),Y(Wo,{ref_key:"routeTestRef",ref:S,"gateway-instance-id":_.value,key:`test-${_.value}`},null,8,["gateway-instance-id"]))])]),_:1})]),_:1},8,["value"])]),_:1})):(x(),Y(i,{key:2,class:"empty-state-card"},{default:t(()=>[e(B,{description:"请先选择网关实例以开始管理路由配置"},{icon:t(()=>[e(b,{size:"60",color:"#d0d0d0"},{default:t(()=>[e(l(Ge))]),_:1})]),extra:t(()=>[e(f,{onClick:j,loading:v.value},{default:t(()=>n[11]||(n[11]=[u(" 重新加载网关实例 ")])),_:1},8,["loading"])]),_:1})]),_:1}))])}}}),Kn=ge(yn,[["__scopeId","data-v-34dea04e"]]);export{Kn as default};
